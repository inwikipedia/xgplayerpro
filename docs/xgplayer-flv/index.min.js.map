{"version":3,"file":"index.min.js","sources":["../../xgplayer-streaming-shared/src/utils.js","../../xgplayer-streaming-shared/src/buffer.js","../../xgplayer-streaming-shared/src/error.js","../../xgplayer-streaming-shared/src/env.js","../../xgplayer-streaming-shared/src/logger.js","../../xgplayer-streaming-shared/src/mse.js","../../xgplayer-streaming-shared/src/net/types.js","../../xgplayer-streaming-shared/src/net/error.js","../../xgplayer-streaming-shared/src/is.js","../../xgplayer-streaming-shared/src/net/helper.js","../../xgplayer-streaming-shared/src/event.js","../../../node_modules/eventemitter3/index.js","../../xgplayer-streaming-shared/src/net/fetch.js","../../xgplayer-streaming-shared/src/net/ws.js","../../xgplayer-streaming-shared/src/net/xhr.js","../../xgplayer-streaming-shared/src/net/task.js","../../xgplayer-streaming-shared/src/streaming-helper.js","../../xgplayer-streaming-shared/src/net/index.js","../../xgplayer-streaming-shared/src/net/config.js","../../xgplayer-streaming-shared/src/services/gap.js","../../xgplayer-streaming-shared/src/services/sei.js","../../xgplayer-streaming-shared/src/services/bandwidth.js","../../xgplayer-streaming-shared/src/services/stats.js","../../xgplayer-transmuxer/src/model/types.js","../../xgplayer-transmuxer/src/model/video-track.js","../../xgplayer-transmuxer/src/model/audio-track.js","../../xgplayer-transmuxer/src/model/video-sample.js","../../xgplayer-transmuxer/src/model/audio-sample.js","../../xgplayer-transmuxer/src/model/metadata-track.js","../../xgplayer-transmuxer/src/utils/exp-golomb.js","../../xgplayer-transmuxer/src/utils/logger.js","../../xgplayer-transmuxer/src/utils/utf8.js","../../xgplayer-transmuxer/src/utils/env.js","../../xgplayer-transmuxer/src/utils/index.js","../../xgplayer-transmuxer/src/codec/nalu.js","../../xgplayer-transmuxer/src/codec/avc.js","../../xgplayer-transmuxer/src/codec/aac.js","../../xgplayer-transmuxer/src/codec/hevc.js","../../xgplayer-transmuxer/src/flv/fixer.js","../../xgplayer-transmuxer/src/flv/amf.js","../../xgplayer-transmuxer/src/flv/index.js","../../xgplayer-transmuxer/src/mp4/buffer.js","../../xgplayer-transmuxer/src/mpeg-ts/index.js","../../xgplayer-transmuxer/src/mp4/mp4.js","../../xgplayer-transmuxer/src/mp4/logger.js","../../../node_modules/crypto-es/lib/md5.js","../../xgplayer-transmuxer/src/mp4/fmp4-remuxer.js","../../../node_modules/crypto-es/lib/core.js","../../../node_modules/crypto-es/lib/enc-base64.js","../../../node_modules/crypto-es/lib/evpkdf.js","../../../node_modules/crypto-es/lib/cipher-core.js","../../../node_modules/crypto-es/lib/aes.js","../../../node_modules/crypto-es/lib/mode-ctr.js","../src/flv/services/buffer-service.js","../src/flv/utils.js","../src/flv/index.js","../src/flv/options.js","../src/plugin-extension.js","../src/plugin.js"],"sourcesContent":["export function createPublicPromise () {\n  let res, rej\n  const promise = new Promise((resolve, reject) => {\n    res = resolve\n    rej = reject\n  })\n  promise.used = false\n  promise.resolve = (...args) => {\n    promise.used = true\n    return res(...args)\n  }\n  promise.reject = (...args) => {\n    promise.used = true\n    return rej(...args)\n  }\n  return promise\n}\n\nexport function nowTime () {\n  try {\n    return parseInt(performance.now(), 10)\n  } catch (e) {\n    return new Date().getTime()\n  }\n}\n","export class Buffer {\n  /**\n   * @param {TimeRanges} buf\n   * @returns {number}\n   */\n  static start (buf) {\n    if (!buf || !buf.length) return 0\n\n    // Safari bug: https://bit.ly/2trx6O8\n    if (buf.length === 1 && buf.end(0) - buf.start(0) < 1e-6) return 0\n    // Edge bug: https://bit.ly/2JYLPeB\n    if (buf.length === 1 && buf.start(0) < 0) return 0\n\n    return buf.start(0)\n  }\n\n  /**\n   * @param {TimeRanges} buf\n   * @returns {number}\n   */\n  static end (buf) {\n    if (!buf || !buf.length) return 0\n\n    // Safari bug: https://bit.ly/2trx6O8\n    if (buf.length === 1 && buf.end(0) - buf.start(0) < 1e-6) return 0\n\n    return buf.end(buf.length - 1)\n  }\n\n  /**\n   * @param {{buffered?: TimeRanges}} b\n   * @returns {TimeRanges | void}\n   */\n  static get (b) {\n    if (!b) return\n    try {\n      return b.buffered\n    } catch (error) {\n      // ignore\n    }\n  }\n\n  /**\n   * @param {TimeRanges} buf\n   * @param {number} [maxHole]\n   * @returns {[number,number][]}\n   */\n  static buffers (buf, maxHole) {\n    if (!buf || !buf.length) return []\n\n    const buffers = []\n    for (let i = 0, l = buf.length; i < l; i++) {\n      const bufLen = buffers.length\n      if (!bufLen || !maxHole) {\n        buffers.push([buf.start(i), buf.end(i)])\n      } else {\n        const last = buffers[bufLen - 1]\n        const lastEnd = last[1]\n        const start = buf.start(i)\n        if (start - lastEnd <= maxHole) {\n          const end = buf.end(i)\n          if (end > lastEnd) {\n            last[1] = end\n          }\n        } else {\n          buffers.push([buf.start(i), buf.end(i)])\n        }\n      }\n    }\n    return buffers\n  }\n\n  /**\n   * @param {TimeRanges} buf\n   * @param {number} [maxHole]\n   * @returns {{buffers:[number,number][],length:number}}\n   */\n  static totalLength (buffers) {\n    if (!buffers || !buffers.length) return 0\n    return buffers.reduce((a, c) => (a += (c[1] - c[0])), 0)\n  }\n\n  /**\n   *\n   * @param {TimeRanges} buf\n   * @param {number} [pos=0]\n   * @param {number} [maxHole=0]\n   * @returns {{start:number,end:number,buffers:[number,number][],remaining:number,index?:number,nextStart?:number,nextEnd?:number,prevStart?:number,prevEnd?:number}}\n   */\n  static info (buf, pos = 0, maxHole = 0) {\n    if (!buf || !buf.length) return { start: 0, end: 0, buffers: [] }\n\n    let start = 0\n    let end = 0\n    let index = 0\n    let nextStart = 0\n    let nextEnd = 0\n    let prevStart = 0\n    let prevEnd = 0\n    const buffers = Buffer.buffers(buf, maxHole)\n\n    for (let i = 0, l = buffers.length; i < l; i++) {\n      const item = buffers[i]\n      if (pos + maxHole >= item[0] && pos <= item[1]) {\n        start = item[0]\n        end = item[1]\n        index = i\n      } else if (pos + maxHole < item[0]) {\n        nextStart = item[0]\n        nextEnd = item[1]\n        break\n      } else if (pos + maxHole > item[1]) {\n        prevStart = item[0]\n        prevEnd = item[1]\n      }\n    }\n\n    return {\n      start,\n      end,\n      index,\n      buffers,\n      nextStart,\n      nextEnd,\n      prevStart,\n      prevEnd,\n      currentTime: pos,\n      behind: pos - start,\n      remaining: end ? end - pos : 0,\n      length: Buffer.totalLength && Buffer.totalLength(buffers)\n    }\n  }\n}\n","export const ERR = {\n  MANIFEST: 'manifest',\n  NETWORK: 'network',\n  NETWORK_TIMEOUT: 'network_timeout',\n  NETWORK_FORBIDDEN:'network_forbidden',\n  NETWORK_NOTFOUND: 'network_notfound',\n  NETWROK_RANGE_NOT_SATISFIABLE:'network_range_not_satisfiable',\n  DEMUX: 'demux',\n  REMUX: 'remux',\n  MEDIA: 'media',\n  DRM: 'drm',\n  OTHER: 'other',\n  RUNTIME:'runtime',\n\n  SUB_TYPES: {\n    FLV: 'FLV',\n    HLS: 'HLS',\n    MP4: 'MP4',\n    FMP4: 'FMP4',\n    MSE_ADD_SB: 'MSE_ADD_SB',\n    MSE_APPEND_BUFFER: 'MSE_APPEND_BUFFER',\n    MSE_OTHER: 'MSE_OTHER',\n    MSE_FULL: 'MSE_FULL',\n    OPTION: 'OPTION',\n    DASH:'DASH',\n    LICENSE:'LICENSE',\n    CUSTOM_LICENSE:'CUSTOM_LICENSE',\n    MSE_HIJACK:'MSE_HIJACK',\n    EME_HIJACK:'EME_HIJACK',\n    SIDX:'SIDX',\n    NO_CANPLAY_ERROR:'NO_CANPLAY_ERROR',\n    BUFFERBREAK_ERROR:'BUFFERBREAK_ERROR',\n    WAITING_TIMEOUT_ERROR: 'WAITING_TIMEOUT_ERROR',\n    MEDIA_ERR_ABORTED:'MEDIA_ERR_ABORTED',\n    MEDIA_ERR_NETWORK:'MEDIA_ERR_NETWORK',\n    MEDIA_ERR_DECODE:'MEDIA_ERR_DECODE',\n    MEDIA_ERR_SRC_NOT_SUPPORTED:'MEDIA_ERR_SRC_NOT_SUPPORTED',\n    MEDIA_ERR_CODEC_NOT_SUPPORTED:'MEDIA_ERR_CODEC_NOT_SUPPORTED',\n    MEDIA_ERR_URL_EMPTY:'MEDIA_ERR_URL_EMPTY'\n  }\n}\n\nexport const ERR_CODE = {\n  [ERR.MANIFEST]: {\n    HLS: 1100,\n    DASH:1200\n  },\n  [ERR.NETWORK]: 2100,\n  [ERR.NETWORK_TIMEOUT]: 2101,\n  [ERR.NETWORK_FORBIDDEN]:2103,\n  [ERR.NETWORK_NOTFOUND]:2104,\n  [ERR.NETWROK_RANGE_NOT_SATISFIABLE]:2116,\n  [ERR.DEMUX]: {\n    FLV: 3100,\n    HLS: 3200,\n    MP4: 3300,\n    FMP4: 3400,\n    SIDX: 3410\n  },\n  [ERR.REMUX]: {\n    FMP4: 4100,\n    MP4: 4200\n  },\n  [ERR.MEDIA]: {\n    MEDIA_ERR_ABORTED: 5101,\n    MEDIA_ERR_NETWORK: 5102,\n    MEDIA_ERR_DECODE: 5103,\n    MEDIA_ERR_SRC_NOT_SUPPORTED: 5104,\n    MEDIA_ERR_CODEC_NOT_SUPPORTED: 5105,\n    MEDIA_ERR_URL_EMPTY: 5106,\n    MSE_ADD_SB: 5200,\n    MSE_APPEND_BUFFER: 5201,\n    MSE_OTHER: 5202,\n    MSE_FULL: 5203,\n    MSE_HIJACK:5204,\n    EME_HIJACK:5301\n  },\n  [ERR.DRM]:{\n    LICENSE:7100,\n    CUSTOM_LICENSE:7200\n  },\n  [ERR.OTHER]: 8000,\n  [ERR.RUNTIME]:{\n    NO_CANPLAY_ERROR:9001,\n    BUFFERBREAK_ERROR:9002,\n    WAITING_TIMEOUT_ERROR:9003\n  }\n}\n\n\n\nexport class StreamingError extends Error {\n  constructor (type, subType, origin, payload, msg) {\n    super(msg || origin?.message)\n    this.errorType = type === ERR.NETWORK_TIMEOUT ? ERR.NETWORK : type\n    this.originError = origin\n    this.ext = payload\n    this.errorCode = ERR_CODE[type][subType] || ERR_CODE[type]\n    this.errorMessage = this.message\n    if (!this.errorCode) {\n      this.errorType = ERR.OTHER\n      this.errorCode = ERR_CODE[this.errorType]\n    }\n  }\n\n  static create (type, subType, origin, payload, msg) {\n    if (type instanceof StreamingError) {\n      return type\n    } else if (type instanceof Error) {\n      origin = type\n      type = ''\n    }\n\n    if (!type) type = ERR.OTHER\n\n    return new StreamingError(type, subType, origin, payload, msg)\n  }\n\n  static network (error) {\n    return new StreamingError(\n      error?.isTimeout ? ERR.NETWORK_TIMEOUT : ERR.NETWORK,\n      null,\n      error instanceof Error ? error : null,\n      {\n        url: error?.url,\n        response: error?.response,\n        httpCode: error?.response?.status\n      }\n    )\n  }\n}\n","export const isBrowser = typeof window !== 'undefined'\n","\nexport const LogCacheLevel = {\n  'DEBUG': 1,\n  'LOG': 2,\n  'WARN': 3,\n  'ERROR': 4\n}\nconst LOG_MAX_SIZE = 200 * 1024\nconst SIMPLE_TYPE = ['Boolean', 'Number' ,'String', 'Undefined','Null', 'Date','Object']\nexport class Logger {\n  constructor (name,config) {\n    this.name = name || ''\n    this._prefix = `[${this.name}]`\n    this.logCacheLevel = config?.logCacheLevel || 3\n    this.logMaxSize = config?.logMaxSize || LOG_MAX_SIZE\n    this.logSize = 0\n    this.logTextArray = []\n  }\n\n  debug (...args) {\n    this.logCache(LogCacheLevel.DEBUG,...args)\n    if (Logger.disabled) return\n    console.debug(this._prefix, nowTime(), ...args)\n  }\n\n  log (...args) {\n    this.logCache(LogCacheLevel.LOG,...args)\n    if (Logger.disabled) return\n    console.log(this._prefix, nowTime(), ...args)\n  }\n\n  warn (...args) {\n    this.logCache(LogCacheLevel.WARN,...args)\n    if (Logger.disabled) return\n    console.warn(this._prefix, nowTime(), ...args)\n  }\n\n  error (...args) {\n    this.logCache(LogCacheLevel.ERROR,...args)\n    if (Logger.disabled) return\n    console.error(this._prefix, nowTime(), ...args)\n  }\n\n  logCache (logCacheLevel, ...logText) {\n    if (logCacheLevel < this.logCacheLevel) return\n    let text = ''\n    try {\n      const finLogText = logText.map( item => logable(item))\n      text = this._prefix + nowTime() + (JSON.stringify(finLogText))\n    } catch (e) {\n      return\n    }\n    if (logCacheLevel >= this.logCacheLevel) {\n      this.logSize += text.length\n      this.logTextArray.push(text)\n    }\n    if (this.logSize > this.logMaxSize) {\n      const delLog = this.logTextArray.shift()\n      this.logSize -= delLog.length\n    }\n  }\n\n  getLogCache () {\n    const logText = this.logTextArray.join('\\n')\n    this.reset()\n    return logText\n  }\n\n  reset () {\n    this.logTextArray = []\n    this.logSize = 0\n  }\n\n  table (...args) {\n    if (Logger.disabled) return\n    console.group(this._prefix)\n    console.table(...args)\n    console.groupEnd()\n  }\n\n  static disabled = true\n\n  static enable () {\n    Logger.disabled = false\n  }\n\n  static disable () {\n    Logger.disabled = true\n  }\n\n  setLogLevel (val) {\n    this.logCacheLevel = val\n  }\n}\nfunction nowTime () {\n  return new Date().toLocaleString()\n}\n\nfunction reduceDepth (val) {\n  if (typeof val !== 'object') {\n    return val\n  }\n  const objType = Object.prototype.toString.call(val).slice(8, -1)\n  switch (objType) {\n    case 'Array':\n    case 'Uint8Array':\n    case 'ArrayBuffer':\n\n      return objType + '[' + val.length + ']'\n    case 'Object':\n      return '{}'\n    default:\n      return objType\n  }\n}\n\nfunction logable (obj, maxDepth, depth) {\n  if (!depth) depth = 1\n  if (!maxDepth) maxDepth = 2\n  const result = {}\n\n  if (!obj || typeof obj !== 'object') {\n    return obj\n  }\n\n  const objType = Object.prototype.toString.call(obj).slice(8, -1)\n  if (!SIMPLE_TYPE.includes(objType)) {\n    return objType\n  }\n\n  if (depth > maxDepth) {\n    return undefined\n  }\n\n\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      if (depth === maxDepth) {\n        result[key] = reduceDepth(obj[key])\n      } else if (typeof obj[key] === 'object') {\n        result[key] = logable(obj[key], maxDepth, depth + 1)\n      } else {\n        result[key] = obj[key]\n      }\n    }\n  }\n  return result\n}\n\n","/* eslint-disable no-undef */\nimport { createPublicPromise, nowTime } from './utils'\nimport { Buffer } from './buffer'\nimport { StreamingError, ERR } from './error'\nimport { isBrowser } from './env'\nimport { Logger } from './logger'\n\nfunction getMediaSource () {\n  try {\n    return isBrowser ? window.MediaSource : null\n  } catch (e) {}\n}\n\nconst MediaSource = getMediaSource()\n\n/** @enum {string} */\nexport const MSEErrorType = {\n  UPDATE_ERROR: 'updateError'\n}\n\nconst OP_NAME = {\n  APPEND: 'appendBuffer',\n  REMOVE: 'removeBuffer',\n  UPDATE_DURATION:'updateDuration'\n}\n\nexport class MSEError extends Error {\n  /**\n   * @param {MSEErrorType} type\n   * @param {any} [msg]\n   */\n  constructor (type, msg) {\n    super(msg || type)\n    this.type = type\n    this.msg = msg\n  }\n}\n\nexport class MSE {\n  /** @type { HTMLMediaElement | null } */\n  media = null\n\n  /** @type { MediaSource | null } */\n  mediaSource = null\n\n  _openPromise = createPublicPromise()\n\n  _queue = Object.create(null)\n\n  _sourceBuffer = Object.create(null)\n\n  static VIDEO = 'video'\n\n  static AUDIO = 'audio'\n\n  _mseFullFlag = {}\n\n  _st = 0\n\n  _opst = 0\n\n  _logger = null\n\n  _config = null\n  _url = null\n\n\n  static getDefaultConfig () {\n    return {\n      openLog: false\n    }\n  }\n\n  /**\n   * @param {HTMLMediaElement} [media]\n   */\n  constructor (media, config) {\n    this._config = Object.assign(MSE.getDefaultConfig(), config)\n    if (media) this.bindMedia(media)\n    this._logger = new Logger('MSE')\n    if (this._config.openLog) {\n      Logger.enable()\n    }\n  }\n\n  get isOpened () {\n    return this.mediaSource?.readyState === 'open'\n  }\n\n  get url () {\n    return this._url\n  }\n\n  get duration () {\n    return this.mediaSource?.duration || -1\n  }\n\n  get isEnded () {\n    return this.mediaSource ? this.mediaSource.readyState === 'ended' : false\n  }\n\n  isFull (type) {\n    return type ? this._mseFullFlag[type] : this._mseFullFlag[MSE.VIDEO]\n  }\n\n  /**\n   * @param { number } duration\n   * @return { Promise }\n   */\n  updateDuration (duration) {\n    const isReduceDuration = this.mediaSource && this.mediaSource.duration > duration\n    if (this.mediaSource && this.mediaSource.duration > duration) {\n      let bufferEnd = 0\n      Object.keys(this._sourceBuffer).forEach(k => {\n        try {\n          bufferEnd = Math.max(this.bufferEnd(k) || 0, bufferEnd)\n        } catch (error) {\n          // ignore\n        }\n      })\n      if (duration < bufferEnd) {\n        // 设置值比bufferEnd值小，会导致异常\n        return Promise.resolve()\n      }\n    }\n\n    return this._enqueueBlockingOp(() => {\n      if (this.isEnded) {\n        this._logger.debug('[debug mse] setDuration ended')\n        return\n      }\n      if (this.mediaSource) {\n        this.mediaSource.duration = duration\n        this._logger.debug('[debug mse] setDuration')\n      }\n    }, OP_NAME.UPDATE_DURATION, {isReduceDuration})\n  }\n\n  /** @return { Promise } */\n  open () {\n    if (this._openPromise.used && !this.isOpened && this.mediaSource) {\n      const ms = this.mediaSource\n      const onOpen = () => {\n        const costtime = nowTime() - this._st\n        this._logger.debug('MSE OPEN', costtime)\n        ms.removeEventListener('sourceopen', onOpen)\n        this._openPromise.resolve({costtime})\n      }\n      ms.addEventListener('sourceopen', onOpen)\n      this._openPromise = createPublicPromise()\n    }\n\n    return this._openPromise\n  }\n\n  /**\n   * @param { HTMLMediaElement } media\n   * @return { Promise }\n   */\n  async bindMedia (media) {\n    if (this.mediaSource || this.media) await this.unbindMedia()\n    if (!media || !MediaSource) throw new Error('Param media or MediaSource does not exist')\n    this.media = media\n    const ms = this.mediaSource = new MediaSource()\n    this._st = nowTime()\n\n    const onOpen = () => {\n      const costtime = nowTime() - this._st\n      this._logger.debug('MSE OPEN')\n      ms.removeEventListener('sourceopen', onOpen)\n      URL.revokeObjectURL(media.src)\n      this._openPromise.resolve({costtime})\n    }\n    ms.addEventListener('sourceopen', onOpen)\n    this._url = URL.createObjectURL(ms)\n    media.src = this._url\n    return this._openPromise\n  }\n\n  /** @return { Promise } */\n  async unbindMedia () {\n    if (!this._openPromise.used) this._openPromise.resolve()\n    const ms = this.mediaSource\n\n    if (ms) {\n      Object.keys(this._queue).forEach((t) => {\n        const queue = this._queue[t]\n        if (queue) {\n          queue.forEach(x => x.promise?.resolve?.())\n        }\n      })\n\n      const hasMetadata = !!this.media && this.media.readyState >= 1\n      const mseOpen = ms.readyState === 'open'\n\n      if (hasMetadata && mseOpen) {\n        try {\n          ms.endOfStream()\n        } catch (error) {\n          // ignore\n        }\n      }\n\n      Object.keys(this._sourceBuffer).forEach(k => {\n        try {\n          ms.removeSourceBuffer(this._sourceBuffer[k])\n        } catch (error) {\n          // ignore\n        }\n      })\n    }\n\n    if (this.media) {\n      this.media.removeAttribute('src')\n      try {\n        this.media.load()\n      } catch (error) {\n        // ignore\n      }\n      this.media = null\n    }\n\n    this.mediaSource = null\n    this._openPromise = createPublicPromise()\n    this._queue = Object.create(null)\n    this._sourceBuffer = Object.create(null)\n  }\n\n  /**\n   * @param { string } type\n   * @param { string } mimeType\n   */\n  createSource (type, mimeType) {\n    if (this._sourceBuffer[type] || !this.mediaSource) return\n    let sb\n    try {\n      sb = this._sourceBuffer[type] = this.mediaSource.addSourceBuffer(mimeType)\n    } catch (error) {\n      throw new StreamingError(ERR.MEDIA, ERR.SUB_TYPES.MSE_ADD_SB, error)\n    }\n    sb.mimeType = mimeType\n    sb.addEventListener('updateend', this._onSBUpdateEnd.bind(this, type))\n    sb.addEventListener('error', this._onSBUpdateError.bind(this, type))\n  }\n\n  /**\n   * @param { string } type\n   * @param { string } mimeType\n   * @return { Promise }\n   */\n  changeType (type, mimeType) {\n    const sb = this._sourceBuffer[type]\n    if (!this.mediaSource || !sb || sb.mimeType === mimeType) return Promise.resolve()\n\n    if (typeof sb.changeType !== 'function') return Promise.reject()\n\n    return this._enqueueOp(type, () => {\n      sb.changeType(mimeType)\n      sb.mimeType = mimeType\n      this._onSBUpdateEnd(type)\n    }, 'changeType', {mimeType})\n  }\n\n  /**\n   * @param { string } type\n   * @param { string } mimeType\n   * @return { Promise }\n   */\n  createOrChangeSource (type, mimeType) {\n    this.createSource(type, mimeType)\n    return this.changeType(type, mimeType)\n  }\n\n  /**\n   * @param { string } type\n   * @param { BufferSource } buffer\n   * @return { Promise }\n   */\n  append (type, buffer, context) {\n    if (!buffer || !buffer.byteLength) {\n      return Promise.resolve()\n    }\n\n    if (!this._sourceBuffer[type]) return Promise.resolve()\n\n    return this._enqueueOp(type, () => {\n      if (!this.mediaSource || this.media.error) return\n      this._logger.debug('MSE APPEND START', context)\n      this._opst = nowTime()\n      this._sourceBuffer[type]?.appendBuffer(buffer)\n    }, OP_NAME.APPEND, context)\n\n  }\n\n  /**\n   * @param { string } type\n   * @param { number } startTime\n   * @param { number } endTime\n   * @return { Promise }\n   */\n  remove (type, startTime, endTime, context) {\n    // if (Object.keys(this._sourceBuffer).length === 1) return Promise.resolve()\n    let isInsertHead = false\n    if (this._mseFullFlag[type]) {\n      isInsertHead = true\n    }\n    return this._enqueueOp(type, () => {\n      if (!this.mediaSource || this.media.error) return\n      const sb = this._sourceBuffer[type]\n      if (startTime >= endTime || !sb) {\n        this._onSBUpdateEnd(type)\n        return\n      }\n      this._opst = nowTime()\n      this._logger.debug('MSE REMOVE START', type, startTime, endTime, context)\n      sb.remove(startTime, endTime)\n    }, OP_NAME.REMOVE, context, isInsertHead)\n  }\n\n  clearBuffer (startTime, endTime) {\n    let p\n    Object.keys(this._sourceBuffer).forEach(k => {\n      p = this._enqueueOp(k, () => {\n        if (!this.mediaSource || this.media.error) return\n        const sb = this._sourceBuffer[k]\n        this._logger.debug('MSE clearBuffer START', k, startTime, endTime)\n        sb.remove(startTime, endTime)\n      }, OP_NAME.REMOVE)\n    })\n    return p || Promise.resolve()\n  }\n\n  clearAllBuffer () {\n    let p\n    Object.keys(this._sourceBuffer).forEach(k => {\n      p = this._enqueueOp(k, () => {\n        if (!this.mediaSource || this.media.error) return\n        const sb = this._sourceBuffer[k]\n        this._logger.debug('MSE clearAllBuffer START', k)\n        sb.remove(0, Buffer.end(Buffer.get(sb)))\n      })\n    })\n    return p\n  }\n\n  clearOpQueues (type, allClear) {\n    this._logger.debug('MSE clearOpQueue START')\n    const queue = this._queue[type]\n    if (allClear && queue) {\n      this._queue[type] = []\n      return\n    }\n    if (!queue || !queue[type] || queue.length < 5) return\n    const initOpque = []\n    queue.forEach(op => {\n      if (op.context && op.context.isinit) {\n        initOpque.push(op)\n      }\n    })\n    this._queue[type] = queue.slice(0, 2)\n    initOpque.length > 0 && this._queue[type].push(...initOpque)\n  }\n\n  /**\n   * @param {EndOfStreamError} [reason]\n   * @returns {Promise}\n   */\n  endOfStream (reason) {\n    if (!this.mediaSource || this.mediaSource.readyState !== 'open') return Promise.resolve()\n    return this._enqueueBlockingOp(() => {\n      const ms = this.mediaSource\n      if (!ms || ms.readyState !== 'open') return\n      this._logger.debug('MSE endOfStream START')\n      if (reason) {\n        ms.endOfStream(reason)\n      } else {\n        ms.endOfStream()\n      }\n    }, 'endOfStream')\n  }\n\n  setLiveSeekableRange (start, end) {\n    const ms = this.mediaSource\n    if (start < 0 || end < start || !ms?.setLiveSeekableRange || ms.readyState !== 'open') return\n    ms.setLiveSeekableRange(start, end)\n  }\n\n  /**\n   * @param {string} type\n   * @returns {?SourceBuffer}\n   */\n  getSourceBuffer (type) {\n    return this._sourceBuffer[type]\n  }\n\n  /**\n   * @param { string } type\n   * @return { TimeRanges | void }\n   */\n  buffered (type) {\n    return Buffer.get(this._sourceBuffer[type])\n  }\n\n  /**\n   * @param { string } type\n   * @return { number }\n   */\n  bufferStart (type) {\n    return Buffer.start(this.buffered(type))\n  }\n\n  /**\n   * @param { string } type\n   * @return { number }\n   */\n  bufferEnd (type) {\n    return Buffer.end(this.buffered(type))\n  }\n\n  _enqueueOp (type, exec, opName, context, isInsertHead) {\n    if (!this.mediaSource) return Promise.resolve()\n    const queue = this._queue[type] = this._queue[type] || []\n    const op = {\n      exec,\n      promise: createPublicPromise(),\n      opName,\n      context\n    }\n\n    if (isInsertHead) {\n      queue.splice(0, 0, op)\n      this._mseFullFlag[type] = false\n      this._startQueue(type)\n    } else {\n      queue.push(op)\n    }\n\n    if (this.isOpened || this.isEnded) {\n      if (queue.length === 1) {\n        this._startQueue(type)\n      }\n    } else {\n      this._openPromise.then(() => {\n        if (queue.length === 1) {\n          this._startQueue(type)\n        }\n      })\n    }\n\n\n    return op.promise\n  }\n\n  async _enqueueBlockingOp (exec, opName, context) {\n    if (!this.mediaSource) return Promise.resolve()\n    const types = Object.keys(this._sourceBuffer)\n    if (!types.length) {\n      return exec()\n    }\n\n    const waiters = []\n    types.forEach(t => {\n      const queue = this._queue[t]\n      const prom = createPublicPromise()\n      waiters.push(prom)\n      queue.push({exec: () => {\n        prom.resolve()}, promise: prom, opName, context})\n      if (queue.length === 1) {\n        this._startQueue(t)\n      }\n    })\n\n    return Promise.all(waiters).then(() => {\n      try {\n        return exec()\n      } finally {\n        types.forEach(t => {\n          const queue = this._queue[t]\n          const sb = this._sourceBuffer[t]\n          queue?.shift()\n          if (!sb || !sb.updating) {\n            this._startQueue(t)\n          }\n        })\n      }\n    })\n  }\n\n  _startQueue (type) {\n    const queue = this._queue[type]\n    if (queue) {\n      const op = queue[0]\n      if (op && !this._mseFullFlag[type]) {\n        try {\n          op.exec()\n        } catch (error) {\n          if (error && error.message && error.message.indexOf('SourceBuffer is full') >= 0) {\n            this._mseFullFlag[type] = true\n            this._logger.error('[MSE error],  context,', op.context, ' ,name,', op.opName, ',err,SourceBuffer is full')\n            op.promise.reject(new StreamingError(ERR.MEDIA, ERR.SUB_TYPES.MSE_FULL, error))\n          } else {\n            this._logger.error(error)\n            op.promise.reject(new StreamingError(ERR.MEDIA, ERR.SUB_TYPES.MSE_OTHER, error))\n            queue.shift()\n            this._startQueue(type)\n          }\n        }\n      }\n    }\n  }\n\n  _onSBUpdateEnd = (type) => {\n    const queue = this._queue[type]\n    if (queue) {\n      const op = queue[0]\n      if (!(op?.opName === OP_NAME.UPDATE_DURATION)) {\n        queue.shift()\n      }\n      if (op) {\n        const costtime = nowTime() - this._opst\n        this._logger.debug('UpdateEnd', op.opName, costtime, op.context)\n        op.promise.resolve({name: op.opName, context: op.context, costtime})\n        this._startQueue(type)\n      }\n    }\n  }\n\n  _onSBUpdateError = (type, event) => {\n    const queue = this._queue[type]\n    if (queue) {\n      const op = queue[0]\n      if (op) {\n        this._logger.error('UpdateError', type, op.opName, op.context)\n        op.promise.reject(new StreamingError(ERR.MEDIA, ERR.SUB_TYPES.MSE_APPEND_BUFFER, event))\n        // Do not shift from queue, 'updateend' event will fire next\n      }\n    }\n  }\n\n  /**\n   * @param {string} [mime='video/mp4; codecs=\"avc1.42E01E,mp4a.40.2\"']\n   * @returns {boolean}\n   */\n  static isSupported (mime = 'video/mp4; codecs=\"avc1.42E01E,mp4a.40.2\"') {\n    if (!MediaSource) return false\n    try {\n      return MediaSource.isTypeSupported(mime)\n    } catch (error) {\n      this._logger.error(mime, error)\n      return false\n    }\n  }\n\n  setTimeoffset (type, timestampOffset, context) {\n    return this._enqueueOp(type, () => {\n      if (timestampOffset < 0) {\n        timestampOffset += 0.001\n      }\n      this._sourceBuffer[type].timestampOffset = timestampOffset\n      this._onSBUpdateEnd(type)\n    }, 'setTimeoffset', context)\n  }\n\n  /** *重置decode时间戳 */\n  abort (type, context) {\n    if (!this.isOpened) {\n      return Promise.resolve()\n    }\n    return this._enqueueOp(type, () => {\n      this._sourceBuffer[type].abort()\n      this._onSBUpdateEnd(type)\n    }, 'abort', context)\n  }\n}\n","export const LoaderType = {\n  FETCH: 'fetch',\n  XHR: 'xhr',\n  WS:'ws'\n}\n\nexport const ResponseType = {\n  ARRAY_BUFFER: 'arraybuffer',\n  TEXT: 'text',\n  JSON: 'json'\n}\n","import { LoaderType } from './types'\n\nexport class NetError extends Error {\n  retryCount = 0\n  isTimeout = false\n  loaderType = LoaderType.FETCH\n  startTime = 0\n  endTime = 0\n  options = {}\n\n  constructor (url, request, response, msg) {\n    super(msg)\n    this.url = url\n    this.request = request\n    this.response = response\n  }\n}\n","const toString = Object.prototype.toString\n\nexport function isObject (a) {\n  return a !== null && typeof a === 'object'\n}\n\nexport function isPlainObject (val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(val)\n  return prototype === null || prototype === Object.prototype\n}\n\nexport function isDate (a) {\n  return toString.call(a) === '[object Date]'\n}\n\nexport function isNumber (n) {\n  return typeof n === 'number' && !Number.isNaN(n)\n}\n","import { isDate, isObject } from '../is'\n\nexport function getRangeValue (value) {\n  if (!value || value[0] === null || value[0] === undefined || (value[0] === 0 && (value[1] === null || value[1] === undefined))) {\n    return\n  }\n  let ret = 'bytes=' + value[0] + '-'\n  if (value[1]) ret += value[1]\n  return ret\n}\n\nfunction encode (val) {\n  return encodeURIComponent(val)\n    .replace(/%3A/gi, ':')\n    .replace(/%24/g, '$')\n    .replace(/%2C/gi, ',')\n    .replace(/%20/g, '+')\n    .replace(/%5B/gi, '[')\n    .replace(/%5D/gi, ']')\n}\n\nexport function setUrlParams (url, params) {\n  if (!url) return\n  if (!params) return url\n  let v\n  const str = Object.keys(params).map(k => {\n    v = params[k]\n    if (v === null || v === undefined) return\n    if (Array.isArray(v)) {\n      k = k + '[]'\n    } else {\n      v = [v]\n    }\n\n    return v.map(x => {\n      if (isDate(x)) {\n        x = x.toISOString()\n      } else if (isObject(x)) {\n        x = JSON.stringify(x)\n      }\n      return `${encode(k)}=${encode(x)}`\n    }).join('&')\n  }).filter(Boolean).join('&')\n\n  if (str) {\n    const hashIndex = url.indexOf('#')\n    if (hashIndex !== -1) {\n      url = url.slice(0, hashIndex)\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + str\n  }\n\n  return url\n}\n\nexport function createResponse (\n  data,\n  done,\n  response,\n  contentLength,\n  age,\n  startTime,\n  firstByteTime,\n  index,\n  range,\n  vid,\n  priOptions\n) {\n  age = (age !== null && age !== undefined) ? parseFloat(age) : null\n  contentLength = parseInt(contentLength || '0', 10)\n  if (Number.isNaN(contentLength)) contentLength = 0\n  const options = { range, vid, index, contentLength, age, startTime, firstByteTime, endTime: Date.now(), priOptions }\n  return { data, done, options, response }\n}\n\nexport function calculateSpeed (byteLen, millisec) {\n  return Math.round(byteLen * 8 * 1000 / millisec / 1024)\n}\n","export const EVENT = {\n  ERROR: 'error',\n\n  TTFB: 'core.ttfb',\n  LOAD_START: 'core.loadstart',\n  LOAD_RESPONSE_HEADERS: 'core.loadresponseheaders',\n  LOAD_COMPLETE: 'core.loadcomplete',\n  LOAD_RETRY: 'core.loadretry',\n  SOURCEBUFFER_CREATED: 'core.sourcebuffercreated',\n  ANALYZE_DURATION_EXCEEDED: 'core.analyzedurationexceeded',\n  REMOVE_BUFFER: 'core.removebuffer',\n  BUFFEREOS: 'core.buffereos',\n  KEYFRAME: 'core.keyframe',\n  METADATA_PARSED: 'core.metadataparsed',\n  SEI: 'core.sei',\n  SEI_IN_TIME: 'core.seiintime',\n  FLV_SCRIPT_DATA: 'core.flvscriptdata',\n  LOWDECODE: 'core.lowdecode',\n  SWITCH_URL_SUCCESS: 'core.switchurlsuccess',\n  SWITCH_URL_FAILED: 'core.switchurlfailed',\n  SPEED: 'core.speed',\n  HLS_MANIFEST_LOADED: 'core.hlsmanifestloaded',\n  HLS_LEVEL_LOADED: 'core.hlslevelloaded',\n  DEMUXED_TRACK:'core.demuxedtrack',\n\n  STREAM_EXCEPTION: 'core.streamexception',\n  LARGE_AV_FIRST_FRAME_GAP_DETECT: 'LARGE_AV_FIRST_FRAME_GAP_DETECT',\n  LARGE_VIDEO_DTS_GAP_DETECT: 'LARGE_VIDEO_DTS_GAP_DETECT',\n  LARGE_AUDIO_DTS_GAP_DETECT: 'LARGE_AUDIO_DTS_GAP_DETECT',\n  AUDIO_GAP_DETECT: 'AUDIO_GAP_DETECT',\n  AUDIO_OVERLAP_DETECT: 'AUDIO_OVERLAP_DETECT',\n  MAX_DTS_DELTA_WITH_NEXT_SEGMENT_DETECT: 'MAX_DTS_DELTA_WITH_NEXT_SEGMENT_DETECT',\n  REAL_TIME_SPEED: 'real_time_speed'\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","import { NetError } from './error'\nimport { createResponse, getRangeValue, setUrlParams, calculateSpeed } from './helper'\nimport { ResponseType } from './types'\nimport { EVENT } from '../event'\nimport EventEmitter from 'eventemitter3'\nconst CACHESIZE = 2 * 1024 * 1024\nexport class FetchLoader extends EventEmitter {\n  _abortController = null\n  _timeoutTimer = null\n  _reader = null\n  _response = null\n  _aborted = false\n  _index = -1\n  _range = null\n  _receivedLength = 0\n  _running = false\n  _logger = null\n  _vid = ''\n  _onProcessMinLen = 0\n  _onCancel = null\n  _priOptions = null // 比较私有化的参数传递，回调时候透传\n\n  constructor () {\n    super()\n  }\n\n  load ({\n    url,\n    vid,\n    timeout, // ms\n    responseType,\n    onProgress,\n    index,\n    onTimeout,\n    onCancel,\n    range,\n    transformResponse,\n    request,\n    params,\n    logger,\n\n    method,\n    headers,\n    body,\n    mode,\n    credentials,\n    cache,\n    redirect,\n    referrer,\n    referrerPolicy,\n    onProcessMinLen,\n    priOptions\n  }) {\n    this._logger = logger\n    this._aborted = false\n    this._onProcessMinLen = onProcessMinLen\n    this._onCancel = onCancel\n    this._abortController = typeof AbortController !== 'undefined' && new AbortController()\n    this._running = true\n    this._index = index\n    this._range = range || [0, 0]\n    this._vid = vid || url\n    this._priOptions = priOptions || {}\n    const init = {\n      method,\n      headers,\n      body,\n      mode,\n      credentials,\n      cache,\n      redirect,\n      referrer,\n      referrerPolicy,\n      signal: this._abortController?.signal\n    }\n\n    let isTimeout = false\n    clearTimeout(this._timeoutTimer)\n\n    url = setUrlParams(url, params)\n\n    const rangeValue = getRangeValue(range)\n    if (rangeValue) {\n      if (request) {\n        headers = request.headers\n      } else {\n        headers = init.headers = init.headers || (Headers ? new Headers() : {})\n      }\n      if (Headers && headers instanceof Headers) {\n        headers.append('Range', rangeValue)\n      } else {\n        headers.Range = rangeValue\n      }\n    }\n\n    if (timeout) {\n      this._timeoutTimer = setTimeout(() => {\n        isTimeout = true\n        this.cancel()\n        if (onTimeout) {\n          const error = new NetError(url, init, null, 'timeout')\n          error.isTimeout = true\n          onTimeout(error, {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions})\n        }\n      }, timeout)\n    }\n\n    const startTime = Date.now()\n    this._logger.debug('[fetch load start], index,', index, ',range,', range)\n    return new Promise((resolve, reject) => {\n      fetch(request || url, request ? undefined : init).then(async (response) => {\n        clearTimeout(this._timeoutTimer)\n        this._response = response\n        if (this._aborted || !this._running) return\n        if (transformResponse) {\n          response = transformResponse(response, url) || response\n        }\n        if (!response.ok) {\n          throw new NetError(url, init, response, 'bad network response')\n        }\n\n        const firstByteTime = Date.now()\n        let data\n        if (responseType === ResponseType.TEXT) {\n          data = await response.text()\n          this._running = false\n        } else if (responseType === ResponseType.JSON) {\n          data = await response.json()\n          this._running = false\n        } else {\n          if (onProgress) {\n            this.resolve = resolve\n            this.reject = reject\n            this._loadChunk(response, onProgress, startTime, firstByteTime)\n            return\n          } else {\n            data = await response.arrayBuffer()\n            data = new Uint8Array(data)\n            this._running = false\n            const costTime = Date.now() - startTime\n            const speed = calculateSpeed(data.byteLength, costTime)\n            this.emit(EVENT.REAL_TIME_SPEED, {speed,len: data.byteLength, time: costTime, vid: this._vid, index: this._index, range: this._range, priOptions: this._priOptions})\n          }\n        }\n        this._logger.debug('[fetch load end], index,', index, ',range,', range)\n        resolve(createResponse(\n          data,\n          true,\n          response,\n          response.headers.get('Content-Length'),\n          response.headers.get('age'),\n          startTime,\n          firstByteTime,\n          index,\n          range,\n          this._vid,\n          this._priOptions\n        ))\n      }).catch((error) => {\n        clearTimeout(this._timeoutTimer)\n        this._running = false\n        if (this._aborted && !isTimeout) return\n        error = error instanceof NetError ? error : new NetError(url, init, null, error?.message)\n        error.startTime = startTime\n        error.endTime = Date.now()\n        error.isTimeout = isTimeout\n        error.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n        reject(error)\n      })\n    })\n  }\n\n  async cancel () {\n    if (this._aborted) return\n    this._aborted = true\n    this._running = false\n    if (this._response) {\n      try {\n        // await this._response.body.cancel()\n        if (this._reader) {\n          await this._reader.cancel()\n        }\n      } catch (error) {\n        // ignore\n      }\n      this._response = this._reader = null\n    }\n\n    if (this._abortController) {\n      try {\n        this._abortController.abort()\n      } catch (error) {\n        // ignore\n      }\n      this._abortController = null\n    }\n    if (this._onCancel) {\n      this._onCancel({index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions})\n    }\n  }\n\n  _loadChunk (response, onProgress, st, firstByteTime) {\n    if (!response.body || !response.body.getReader) {\n      this._running = false\n      const err = new NetError(response.url, '', response, 'onProgress of bad response.body.getReader')\n      err.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n      this.reject(err)\n      return\n    }\n    if (this._onProcessMinLen > 0) {\n      this._cache = new Uint8Array(CACHESIZE)\n      this._writeIdx = 0\n    }\n    const reader = this._reader = response.body.getReader()\n    let data\n\n    let startTime\n    let endTime\n    const pump = async () => {\n      startTime = Date.now()\n      try {\n        data = await reader.read()\n        console.log(data)\n        endTime = Date.now()\n      } catch (e) {\n        // request aborted\n        endTime = Date.now()\n        if (!this._aborted) {\n          this._running = false\n          e.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n          this.reject(e)\n        }\n        return\n      }\n      const startRange = this._range?.length > 0 ? this._range[0] : 0\n      const startByte = startRange + this._receivedLength\n      if (this._aborted) {\n        this._running = false\n        onProgress(undefined, false, { range: [startByte, startByte], vid: this._vid, index: this._index, startTime, endTime, st, firstByteTime, priOptions:this._priOptions }, response)\n        return\n      }\n      const curLen = data.value ? data.value.byteLength : 0\n      this._receivedLength += curLen\n      this._logger.debug('【fetchLoader,onProgress call】,task,', this._range, ', start,', startByte, ', end,', startRange + this._receivedLength, ', done,', data.done)\n      let retData\n      if (this._onProcessMinLen > 0) {\n        if (this._writeIdx + curLen >= this._onProcessMinLen || data.done) {\n          retData = new Uint8Array(this._writeIdx + curLen)\n          retData.set(this._cache.slice(0, this._writeIdx), 0)\n          curLen > 0 && retData.set(data.value, this._writeIdx)\n          this._writeIdx = 0\n          this._logger.debug('【fetchLoader,onProgress enough】,done,', data.done, ',len,', retData.byteLength, ', writeIdx,', this._writeIdx)\n        } else {\n          if (curLen > 0 && this._writeIdx + curLen < CACHESIZE) {\n            this._cache.set(data.value, this._writeIdx)\n            this._writeIdx += curLen\n            this._logger.debug('【fetchLoader,onProgress cache】,len,', curLen, ', writeIdx,', this._writeIdx)\n          } else if (curLen > 0) {\n            const temp = new Uint8Array(this._writeIdx + curLen + 2048)\n            this._logger.debug('【fetchLoader,onProgress extra start】,size,', this._writeIdx + curLen + 2048, ', datalen,', curLen, ', writeIdx,', this._writeIdx)\n            temp.set(this._cache.slice(0, this._writeIdx), 0)\n            curLen > 0 && temp.set(data.value, this._writeIdx)\n            this._writeIdx += curLen\n            delete this._cache\n            this._cache = temp\n            this._logger.debug('【fetchLoader,onProgress extra end】,len,', curLen, ', writeIdx,', this._writeIdx)\n          }\n        }\n      } else {\n        retData = data.value\n      }\n      if (retData && retData.byteLength > 0 || data.done) {\n        console.log(retData,'fetch')\n        onProgress(retData, data.done, {\n          range: [this._range[0] + this._receivedLength - (retData ? retData.byteLength : 0), this._range[0] + this._receivedLength],\n          vid: this._vid,\n          index: this._index,\n          startTime,\n          endTime,\n          st,\n          firstByteTime,\n          priOptions:this._priOptions\n        }, response)\n      }\n      if (!data.done) {\n        pump()\n      } else {\n        const costTime = Date.now() - st\n        const speed = calculateSpeed(this._receivedLength, costTime)\n        this.emit(EVENT.REAL_TIME_SPEED, {speed,len: this._receivedLength, time: costTime, vid: this._vid, index: this._index, range: this._range, priOptions: this._priOptions})\n        this._running = false\n        this._logger.debug('[fetchLoader onProgress end],task,', this._range, ',done,', data.done)\n        this.resolve(createResponse(\n          data,\n          true,\n          response,\n          response.headers.get('Content-Length'),\n          response.headers.get('age'),\n          st,\n          firstByteTime,\n          this._index,\n          this._range,\n          this._vid,\n          this._priOptions\n        ))\n      }\n    }\n    pump()\n  }\n\n  get receiveLen () {\n    return this._receivedLength\n  }\n\n  get running () {\n    return this._running\n  }\n\n  set running (status) {\n    this._running = status\n  }\n\n  static isSupported () {\n    return !!(typeof fetch !== 'undefined')\n  }\n}\n","import { NetError } from './error'\r\nimport { createResponse, setUrlParams, calculateSpeed } from './helper'\r\nimport { ResponseType } from './types'\r\nimport { EVENT } from '../event'\r\nimport EventEmitter from 'eventemitter3'\r\n\r\nconst CACHESIZE = 2 * 1024 * 1024\r\n\r\nexport class WsLoader extends EventEmitter {\r\n  _socket = null\r\n  _timeoutTimer = null\r\n  _response = null\r\n  _aborted = false\r\n  _index = -1\r\n  _range = null\r\n  _receivedLength = 0\r\n  _running = false\r\n  _logger = null\r\n  _vid = ''\r\n  _onProcessMinLen = 0\r\n  _onCancel = null\r\n  _priOptions = null // 比较私有化的参数传递，回调时候透传\r\n  _startTime = null\r\n  _endTime = null\r\n\r\n  constructor () {\r\n    super()\r\n  }\r\n\r\n  load ({\r\n    url,\r\n    vid,\r\n    timeout, // ms\r\n    responseType,\r\n    onProgress,\r\n    index,\r\n    onTimeout,\r\n    onCancel,\r\n    range,\r\n    transformResponse,\r\n    request,\r\n    params,\r\n    logger,\r\n    method,\r\n    headers,\r\n    body,\r\n    mode,\r\n    credentials,\r\n    cache,\r\n    redirect,\r\n    referrer,\r\n    referrerPolicy,\r\n    onProcessMinLen,\r\n    priOptions\r\n  }) {\r\n    this._logger = logger\r\n    this._aborted = false\r\n    this._onProcessMinLen = onProcessMinLen\r\n    this._onCancel = onCancel\r\n    this._running = true\r\n    this._index = index\r\n    this._range = range || [0, 0]\r\n    this._vid = vid || url\r\n    this._priOptions = priOptions || {}\r\n\r\n    let isTimeout = false\r\n    clearTimeout(this._timeoutTimer)\r\n    url = setUrlParams(url, params)\r\n\r\n    if (timeout) {\r\n      this._timeoutTimer = setTimeout(() => {\r\n        isTimeout = true\r\n        this.cancel()\r\n        if (onTimeout) {\r\n          const error = new NetError(url, null, 'timeout')\r\n          error.isTimeout = true\r\n          onTimeout(error, { index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions })\r\n        }\r\n      }, timeout)\r\n    }\r\n\r\n    const startTime = Date.now()\r\n\r\n    return new Promise((resolve, reject) => {\r\n      this._socket = new WebSocket(url)\r\n      this._socket.binaryType = responseType\r\n      this._logger.debug('[websocket load start], index,', index, ',ws,', this._socket)\r\n      this._socket.onopen = () => {\r\n        clearTimeout(this._timeoutTimer)\r\n        if (this._aborted || !this._running) return\r\n        this._logger.debug('[websocket connected],ws',this._socket)\r\n\r\n        this._startTime = Date.now()\r\n        const firstByteTime = Date.now()\r\n\r\n        this._socket.onmessage = (event) => {\r\n          this._startTime = this._endTime || this._startTime\r\n          this._endTime = Date.now()\r\n          if (this._aborted || !this._running) return\r\n          let data\r\n          if (responseType === ResponseType.TEXT) {\r\n            data = event.data\r\n            this._running = false\r\n          } else if (responseType === ResponseType.JSON) {\r\n            data = JSON.parse(event.data)\r\n            this._running = false\r\n          } else {\r\n            if (onProgress) {\r\n              this.resolve = resolve\r\n              this.reject = reject\r\n              this._loadChunk(new Uint8Array(event.data), onProgress,startTime,firstByteTime)\r\n              return\r\n            } else {\r\n              data = new Uint8Array(event.data)\r\n              this._running = false\r\n              const costTime = Date.now() - startTime\r\n              const speed = calculateSpeed(data.byteLength, costTime)\r\n              this.emit(EVENT.REAL_TIME_SPEED, { speed, len: data.byteLength, time: costTime, vid: this._vid, index: this._index, range: this._range, priOptions: this._priOptions })\r\n            }\r\n          }\r\n\r\n          this._logger.debug('[websocket load end], index,', index, ',range,', range)\r\n\r\n          resolve(createResponse(\r\n            data,\r\n            true,\r\n            null,\r\n            null,\r\n            null,\r\n            startTime,\r\n            firstByteTime,\r\n            index,\r\n            range,\r\n            this._vid,\r\n            this._priOptions\r\n          ))\r\n        }\r\n      }\r\n      this._socket.onclose = (e)=>{\r\n        this._endTime = null\r\n        this._startTime = null\r\n      }\r\n      this._socket.onerror = (error) => {\r\n        this._endTime = Date.now()\r\n        clearTimeout(this._timeoutTimer)\r\n        this._running = false\r\n        if (this._aborted && !isTimeout) return\r\n        error = new NetError(url, null, error?.message)\r\n        error.startTime = startTime\r\n        error.endTime = Date.now()\r\n        error.isTimeout = isTimeout\r\n        error.options = { index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions }\r\n        reject(error)\r\n      }\r\n    })\r\n  }\r\n\r\n  async cancel () {\r\n    if (this._aborted) return\r\n    this._aborted = true\r\n    this._running = false\r\n\r\n    if (this._socket) {\r\n      try {\r\n        this._socket.close()\r\n      } catch (error) {\r\n        // ignore\r\n      }\r\n      this._socket = null\r\n    }\r\n\r\n    if (this._onCancel) {\r\n      this._onCancel({ index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions })\r\n    }\r\n  }\r\n\r\n  _loadChunk (data, onProgress,st, firstByteTime,intervalTime) {\r\n    if (this._onProcessMinLen > 0) {\r\n      this._cache = new Uint8Array(CACHESIZE)\r\n      this._writeIdx = 0\r\n    }\r\n    const startRange = this._range?.length > 0 ? this._range[0] : 0\r\n    const startByte = startRange + this._receivedLength\r\n    if (this._aborted) {\r\n      this._running = false\r\n      onProgress(undefined, false, { range: [startByte, startByte], vid: this._vid, index: this._index, startTime:this._startTime, endTime: this._endTime, st, firstByteTime, priOptions: this._priOptions })\r\n      return\r\n    }\r\n\r\n    const curLen = data.byteLength\r\n    this._receivedLength += curLen\r\n\r\n    const _done = [2,3].indexOf(this._socket.readyState) > 0\r\n    this._logger.debug('【WsLoader,onProgress call】,task,', this._range, ', start,', startByte, ', end,', startRange + this._receivedLength, ', done,', _done)\r\n\r\n    let retData\r\n\r\n\r\n    if (this._onProcessMinLen > 0) {\r\n      if (this._writeIdx + curLen >= this._onProcessMinLen || _done) {\r\n        retData = new Uint8Array(this._writeIdx + curLen)\r\n        retData.set(this._cache.slice(0, this._writeIdx), 0)\r\n        curLen > 0 && retData.set(data, this._writeIdx)\r\n        this._writeIdx = 0\r\n        this._logger.debug('【WsLoader,onProgress enough】,done,', _done, ',len,', retData.byteLength, ', writeIdx,', this._writeIdx)\r\n      } else {\r\n        if (curLen > 0 && this._writeIdx + curLen < CACHESIZE) {\r\n          this._cache.set(data, this._writeIdx)\r\n          this._writeIdx += curLen\r\n          this._logger.debug('【WsLoader,onProgress cache】,len,', curLen, ', writeIdx,', this._writeIdx)\r\n        } else if (curLen > 0) {\r\n          const temp = new Uint8Array(this._writeIdx + curLen + 2048)\r\n          this._logger.debug('【WsLoader,onProgress extra start】,size,', this._writeIdx + curLen + 2048, ', datalen,', curLen, ', writeIdx,', this._writeIdx)\r\n          temp.set(this._cache.slice(0, this._writeIdx), 0)\r\n          curLen > 0 && temp.set(data, this._writeIdx)\r\n          this._writeIdx += curLen\r\n          delete this._cache\r\n          this._cache = temp\r\n          this._logger.debug('【WsLoader,onProgress extra end】,len,', curLen, ', writeIdx,', this._writeIdx)\r\n        }\r\n      }\r\n    } else {\r\n      retData = data\r\n    }\r\n\r\n    if (retData && retData.byteLength > 0 || _done) {\r\n      onProgress(retData, _done, {\r\n        range: [this._range[0] + this._receivedLength - (retData ? retData.byteLength : 0), this._range[0] + this._receivedLength],\r\n        vid: this._vid,\r\n        index: this._index,\r\n        startTime:this._startTime,\r\n        endTime:this._endTime,\r\n        st,\r\n        firstByteTime,\r\n        priOptions: this._priOptions\r\n      }, null)\r\n    }\r\n\r\n    if (_done){\r\n      const costTime = Date.now() - st\r\n      const speed = calculateSpeed(this._receivedLength, costTime)\r\n      this.emit(EVENT.REAL_TIME_SPEED, { speed, len: this._receivedLength, time: costTime, vid: this._vid, index: this._index, range: this._range, priOptions: this._priOptions })\r\n\r\n      this._running = false\r\n      this._logger.debug('[WsLoader onProgress end],task,', this._range, ',done,', true)\r\n\r\n      this.resolve(createResponse(\r\n        retData,\r\n        true,\r\n        null,\r\n        null,\r\n        null,\r\n        st,\r\n        firstByteTime,\r\n        this._index,\r\n        this._range,\r\n        this._vid,\r\n        this._priOptions\r\n      ))\r\n    }\r\n  }\r\n\r\n  get receiveLen () {\r\n    return this._receivedLength\r\n  }\r\n\r\n  get running () {\r\n    return this._running\r\n  }\r\n\r\n  set running (status) {\r\n    this._running = status\r\n  }\r\n\r\n  static isSupported () {\r\n    return !!(typeof WebSocket !== 'undefined')\r\n  }\r\n}","import { NetError } from './error'\nimport { createResponse, getRangeValue, setUrlParams, calculateSpeed } from './helper'\nimport { ResponseType } from './types'\nimport { EVENT } from '../event'\nimport EventEmitter from 'eventemitter3'\nexport class XhrLoader extends EventEmitter {\n\n  _xhr = null\n  _aborted = false\n  _timeoutTimer = null\n  _range = null\n  _receivedLength = 0\n  _url = null\n  _onProgress = null\n  _index = -1\n  _headers = null\n  // _chunkSizeKBList = [\n  //   128, 256, 384, 512, 768, 1024, 1536, 2048, 3072, 4096, 5120, 6144, 7168, 8192\n  // ]\n\n  _currentChunkSizeKB = 384\n  _timeout = null\n  _xhr = null\n  _withCredentials = null\n  _startTime = -1\n  // _speedSampler = new SpeedSampler()\n  _loadCompleteResolve = null\n  _loadCompleteReject = null\n  _runing = false\n  _logger = false\n  _vid = ''\n  _responseType\n  _credentials\n  _method\n  _transformResponse\n  _firstRtt\n  _onCancel = null\n  _priOptions = null // 比较私有化的参数传递，回调时候透传\n\n\n  constructor () {\n    super()\n  }\n\n  load (req) {\n    clearTimeout(this._timeoutTimer)\n    this._logger = req.logger\n    this._range = req.range\n    this._onProgress = req.onProgress\n    this._index = req.index\n    this._headers = req.headers\n    this._withCredentials = req.credentials === 'include' || req.credentials === 'same-origin'\n    this._body = req.body || null\n    req.method && (this._method = req.method)\n    this._timeout = req.timeout || null\n    this._runing = true\n    this._vid = req.vid || req.url\n    this._responseType = req.responseType\n    this._firstRtt = -1\n    this._onTimeout = req.onTimeout\n    this._onCancel = req.onCancel\n    this._request = req.request\n    this._priOptions = req.priOptions || {}\n    this._logger.debug('【xhrLoader task】, range', this._range)\n\n    this._url = setUrlParams(req.url, req.params)\n\n    const startTime = Date.now()\n    return new Promise((resolve, reject) => {\n      this._loadCompleteResolve = resolve\n      this._loadCompleteReject = reject\n      this._startLoad()\n    }).catch((error) => {\n      clearTimeout(this._timeoutTimer)\n      this._runing = false\n      if (this._aborted) return\n      error = error instanceof NetError ? error : new NetError(this._url, this._request)\n      error.startTime = startTime\n      error.endTime = Date.now()\n      error.options = {index: this._index, vid: this._vid, priOptions: this._priOptions}\n      throw error\n    })\n  }\n\n  _startLoad () {\n    let range = null\n    if (this._responseType === ResponseType.ARRAY_BUFFER && this._range && this._range.length > 1) {\n      if (this._onProgress) {\n        this._firstRtt = -1\n        const chunkSize = this._currentChunkSizeKB * 1024\n        const from = this._range[0] + this._receivedLength\n        let to = this._range[1]\n        if (chunkSize < this._range[1] - from) {\n          to = from + chunkSize\n        }\n        range = [from, to]\n        this._logger.debug('[xhr_loader->],tast :', this._range, ', SubRange, ', range)\n      } else {\n        range = this._range\n        this._logger.debug('[xhr_loader->],tast :', this._range, ', allRange, ', range)\n      }\n    }\n    this._internalOpen(range)\n  }\n\n  _internalOpen (range) {\n    try {\n      this._startTime = Date.now()\n      const xhr = this._xhr = new XMLHttpRequest()\n      xhr.open(this._method || 'GET', this._url, true)\n      xhr.responseType = this._responseType\n      this._timeout && (xhr.timeout = this._timeout)\n      xhr.withCredentials = this._withCredentials\n      xhr.onload = this._onLoad.bind(this)\n      xhr.onreadystatechange = this._onReadyStatechange.bind(this)\n      xhr.onerror = (errorEvent) => {\n        this._running = false\n        const error = new NetError(this._url, this._request, errorEvent?.currentTarget?.response, ('xhr.onerror.status:' + errorEvent?.currentTarget?.status + ',statusText,' + errorEvent?.currentTarget?.statusText))\n        error.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n        this._loadCompleteReject(error)\n      }\n      xhr.ontimeout = (event) => {\n        this.cancel()\n        const error = new NetError(this._url, this._request, {status:408}, 'timeout')\n        if (this._onTimeout) {\n          error.isTimeout = true\n          this._onTimeout(error,{index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions})\n        }\n        error.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n        this._loadCompleteReject(error)\n      }\n      const headers = this._headers || {}\n      const rangeValue = getRangeValue(range)\n      if (rangeValue) {\n        headers.Range = rangeValue\n      }\n      if (headers) {\n        Object.keys(headers).forEach(k => {\n          xhr.setRequestHeader(k, headers[k])\n        })\n      }\n      this._logger.debug('[xhr.send->] tast,', this._range, ',load sub range, ', range)\n      xhr.send(this._body)\n    } catch (e) {\n      e.options = {index: this._index, range, vid: this._vid, priOptions: this._priOptions}\n      this._loadCompleteReject(e)\n    }\n  }\n\n  _onReadyStatechange (e) {\n    const xhr = e.target\n    if (xhr.readyState === 2) {\n      this._firstRtt < 0 && (this._firstRtt = Date.now())\n    }\n  }\n\n  _onLoad (e) {\n    const status = e.target.status\n    if (status < 200 || status > 299) {\n      const error = new NetError(this._url, null, { ...e.target.response, status }, 'bad response,status:' + status)\n      error.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n      return this._loadCompleteReject(error)\n    }\n    let data = null\n    let done = false\n    let byteStart\n    const startRange = (this._range?.length > 0 ? this._range [0] : 0 )\n    if (this._responseType === ResponseType.ARRAY_BUFFER) {\n      const chunk = new Uint8Array(e.target.response)\n      byteStart = startRange + this._receivedLength\n      if (chunk && chunk.byteLength > 0) {\n        this._receivedLength += chunk.byteLength\n        const costTime = Date.now() - this._startTime\n        const speed = calculateSpeed(this._receivedLength, costTime)\n        this.emit(EVENT.REAL_TIME_SPEED, {speed, len: this._receivedLength, time: costTime, vid: this._vid, index: this._index, range: [byteStart, startRange + this._receivedLength], priOptions: this._priOptions})\n      }\n      data = chunk\n      if (this._range?.length > 1 && this._range[1] && this._receivedLength < this._range[1] - this._range[0]) {\n        done = false\n      } else {\n        done = true\n      }\n      this._logger.debug('[xhr load done->], tast :', this._range, ', start', byteStart, 'end ', startRange + this._receivedLength, ',dataLen,', (chunk ? chunk.byteLength : 0), ',receivedLength', this._receivedLength, ',index,', this._index, ', done,', done)\n    } else {\n      done = true\n      data = e.target.response\n    }\n    let response = {\n      ok: status >= 200 && status < 300,\n      status,\n      statusText: this._xhr.statusText,\n      url: this._xhr.responseURL,\n      headers: this._getHeaders(this._xhr),\n      body: this._xhr.response\n    }\n    if (this._transformResponse) {\n      response = this._transformResponse(response, this._url) || response\n    }\n    if (this._onProgress) {\n      this._onProgress(data, done, { index: this._index, vid: this._vid, range: [byteStart, startRange + this._receivedLength], startTime: this._startTime, endTime: Date.now(), priOptions: this._priOptions }, response)\n    }\n\n    if (!done) {\n      this._startLoad()\n    } else {\n      this._runing = false\n      this._loadCompleteResolve && this._loadCompleteResolve(createResponse(\n        this._onProgress ? null : data,\n        done,\n        response,\n        response.headers['content-length'],\n        response.headers.age,\n        this._startTime,\n        this._firstRtt,\n        this._index,\n        this._range,\n        this._vid,\n        this._priOptions\n      ))\n    }\n  }\n\n  cancel () {\n    if (this._aborted) return\n    this._aborted = true\n    this._runing = false\n    super.removeAllListeners()\n    if (this._onCancel) {\n      this._onCancel({index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions})\n    }\n    if (this._xhr) {\n      return this._xhr.abort()\n    }\n  }\n\n  static isSupported () {\n    return typeof XMLHttpRequest !== 'undefined'\n  }\n\n  get receiveLen () {\n    return this._receivedLength\n  }\n\n  get running () {\n    return this._running\n  }\n\n  set running (status) {\n    this._running = status\n  }\n\n  _getHeaders (xhr) {\n    const headerLines = xhr.getAllResponseHeaders().trim().split('\\r\\n')\n    const headers = {}\n    for (const header of headerLines) {\n      const parts = header.split(': ')\n      headers[parts[0].toLowerCase()] = parts.slice(1).join(': ')\n    }\n    return headers\n  }\n}\n","import { FetchLoader } from './fetch'\nimport { XhrLoader } from './xhr'\nimport { WsLoader } from './ws'\nimport { LoaderType } from './types'\nimport { createPublicPromise } from '../utils'\nimport { Logger } from '../logger'\n\nexport class Task {\n  constructor (type, config) {\n    this.promise = createPublicPromise()\n    this.alive = !!config.onProgress\n    !config.logger && (config.logger = new Logger('Loader'))\n    this._loaderType = type\n    this._loader = type === LoaderType.FETCH && !!window.fetch ? new FetchLoader() : type === LoaderType.WS && !!window.WebSocket ? new WsLoader() : new XhrLoader()\n    this._config = config\n    this._retryCount = 0\n    this._retryTimer = null\n    this._canceled = false\n    this._retryCheckFunc = config.retryCheckFunc\n    this._logger = config.logger\n  }\n\n  exec () {\n    const {\n      retry,\n      retryDelay,\n      onRetryError,\n      transformError,\n      ...rest\n    } = this._config\n\n    const request = async () => {\n      try {\n        const response = await this._loader.load(rest)\n        this.promise.resolve(response)\n      } catch (e) {\n        this._loader.running = false\n        this._logger.debug('[task request catch err]', e)\n        if (this._canceled) return\n\n        e.loaderType = this._loaderType\n        e.retryCount = this._retryCount\n\n        let error = e\n        if (transformError) {\n          error = transformError(error) || error\n        }\n\n        if (onRetryError && this._retryCount > 0) onRetryError(error, this._retryCount, {index: rest.index, vid: rest.vid, range: rest.range, priOptions: rest.priOptions})\n\n        this._retryCount++\n        let isRetry = true\n        if (this._retryCheckFunc) {\n          isRetry = this._retryCheckFunc(e)\n        }\n        if (isRetry && this._retryCount <= retry) {\n          clearTimeout(this._retryTimer)\n          this._logger.debug('[task request setTimeout],retry', this._retryCount, ',retry range,', rest.range)\n          this._retryTimer = setTimeout(request, retryDelay)\n          return\n        }\n        this.promise.reject(error)\n      }\n    }\n\n    request()\n    return this.promise\n  }\n\n  async cancel () {\n    clearTimeout(this._retryTimer)\n    this._canceled = true\n    this._loader.running = false\n    return this._loader.cancel()\n  }\n\n  get running () {\n    return this._loader && this._loader.running\n  }\n\n  get loader () {\n    return this._loader\n  }\n}\n","export function isMediaPlaying (media) {\n  return media && !media.paused && !media.ended && media.playbackRate !== 0 && media.readyState !== 0\n}\n\nexport function getVideoPlaybackQuality (video) {\n  if (!video) return {}\n  if (typeof video.getVideoPlaybackQuality === 'function') {\n    const info = video.getVideoPlaybackQuality()\n    return {\n      droppedVideoFrames: info.droppedVideoFrames || info.corruptedVideoFrames,\n      totalVideoFrames: info.totalVideoFrames,\n      creationTime: info.creationTime\n    }\n  }\n\n  return {\n    droppedVideoFrames: video.webkitDroppedFrameCount,\n    totalVideoFrames: video.webkitDecodedFrameCount,\n    creationTime: performance.now()\n  }\n}\n\n/**\n * @param {Array.<Uint8Array>} arr\n * @returns\n */\nexport function concatUint8Array (...arr) {\n  arr = arr.filter(Boolean)\n  if (arr.length < 2) return arr[0]\n  const data = new Uint8Array(arr.reduce((p, c) => p + c.byteLength, 0))\n  let prevLen = 0\n  arr.forEach((d) => {\n    data.set(d, prevLen)\n    prevLen += d.byteLength\n  })\n  return data\n}\n\nexport function sleep (t = 0) {\n  return new Promise((resolve) => setTimeout(resolve, t))\n}\n","import { FetchLoader } from './fetch'\nimport { WsLoader } from './ws'\nimport { LoaderType, ResponseType } from './types'\nimport { getConfig } from './config'\nimport { Task } from './task'\nimport { isPlainObject } from '../is'\nimport { sleep } from '../streaming-helper'\nimport { EVENT } from '../event'\nimport EventEmitter from 'eventemitter3'\n\nexport {\n  LoaderType,\n  ResponseType\n}\n\nexport class NetLoader extends EventEmitter {\n  type = LoaderType.FETCH\n\n  _queue = []\n\n  _alive = []\n\n  _currentTask = null\n\n  _config\n\n  constructor (cfg) {\n    super(cfg)\n    this._config = getConfig(cfg)\n    if (\n      this._config.loaderType === LoaderType.XHR ||\n      (!FetchLoader.isSupported() && !WsLoader.isSupported())\n    ) {\n      this.type = LoaderType.XHR\n    }\n    this.log = cfg.logger\n  }\n\n  isFetch () {\n    return this.type === LoaderType.FETCH\n  }\n\n  isWs (){\n    return this.type === LoaderType.WS\n  }\n\n  isWebSocketURL (url){\n    return /wss?:\\/\\/(.+?)/.test(url)\n  }\n\n  static isFetchSupport () {\n    return FetchLoader.isSupported()\n  }\n\n  static isWsSupport () {\n    return WsLoader.isSupported()\n  }\n\n  load (url, config = {}) {\n    let _isWebSocketURL = false\n    if (typeof url === 'string' || !url) {\n      config.url = url || config.url || this._config.url\n      _isWebSocketURL = !!this.isWebSocketURL(config.url)\n    } else {\n      config = url\n      _isWebSocketURL = !!this.isWebSocketURL(config.url)\n    }\n    if ((this._config.loaderType === LoaderType.WS || _isWebSocketURL ) && WsLoader.isSupported()){\n      this.type = LoaderType.WS\n      this._config.loaderType = config.loaderType = LoaderType.WS\n    }\n    config = Object.assign({}, this._config, config)\n    if (config.params) config.params = Object.assign({}, config.params)\n    if (config.headers && isPlainObject(config.headers)) config.headers = Object.assign({}, config.headers)\n    if (config.body && isPlainObject(config.body)) config.body = Object.assign({}, config.body)\n\n    if (config.transformRequest) {\n      config = config.transformRequest(config) || config\n    }\n    config.logger = this.log\n\n    const task = new Task(this.type, config)\n    task.loader.on(EVENT.REAL_TIME_SPEED, (data) => {\n      this.emit(EVENT.REAL_TIME_SPEED, data)\n    })\n    this._queue.push(task)\n    if (this._queue.length === 1 && (!this._currentTask || !this._currentTask.running)) {\n      this._processTask()\n    }\n\n    return task.promise\n  }\n\n  async cancel () {\n    const cancels = this._queue.map(t => t.cancel()).concat(this._alive.map(t => t.cancel()))\n    if (this._currentTask) {\n      cancels.push(this._currentTask.cancel())\n    }\n    this._queue = []\n    this._alive = []\n    await Promise.all(cancels)\n    await sleep()\n  }\n\n  _processTask () {\n    this._currentTask = this._queue.shift()\n    if (!this._currentTask) return\n\n    if (this._currentTask.alive) {\n      this._alive.push(this._currentTask)\n    }\n    const req = this._currentTask.exec().catch(e => {})\n\n    if (!(req && typeof req.finally === 'function')) return\n\n    req.finally(() => {\n      if (this._currentTask?.alive && this._alive?.length > 0) {\n        this._alive = this._alive.filter(task => task && task !== this._currentTask)\n      }\n      this._processTask()\n    })\n\n  }\n}\n","import { LoaderType, ResponseType } from './types'\n\nexport function getConfig (cfg) {\n  return {\n    loaderType: LoaderType.FETCH,\n    retry: 0,\n    retryDelay: 0, // ms\n    timeout: 0,\n    request: null, // Request\n    onTimeout: undefined,\n    onProgress: undefined,\n    onRetryError: undefined,\n    transformRequest: undefined,\n    transformResponse: undefined,\n    transformError: undefined,\n    responseType: ResponseType.TEXT,\n    range: undefined,\n    url: '',\n    params: undefined,\n    method: 'GET',\n    headers: {},\n    body: undefined,\n    mode: undefined,\n    credentials: undefined,\n    cache: undefined,\n    redirect: undefined,\n    referrer: undefined,\n    referrerPolicy: undefined,\n    integrity: undefined,\n    onProcessMinLen: 0,\n    ...cfg\n  }\n}\n","import { Buffer } from '../buffer'\n\nexport class GapService {\n  _prevCurrentTime = 0\n\n  do (media, maxJumpDistance = 3, isLive, seekThreshold = 1) {\n    if (!media) return\n\n    const currentTime = media.currentTime\n    let jumpTo = 0\n\n    if (this._prevCurrentTime === currentTime) {\n      const info = Buffer.info(Buffer.get(media), currentTime)\n      if (!info.buffers.length) return\n\n      if (\n        (isLive && info.nextStart) ||\n        (info.nextStart && info.nextStart - currentTime < maxJumpDistance)\n      ) {\n        jumpTo = info.nextStart + 0.1\n      } else if (info.end && info.end - currentTime > seekThreshold && !media.seeking) {\n        jumpTo = currentTime + 0.1\n      }\n    }\n\n    this._prevCurrentTime = currentTime\n\n    if (jumpTo && currentTime !== jumpTo) {\n      media.currentTime = jumpTo\n    }\n  }\n}\n","import { EVENT } from '../event'\n\nexport class SeiService {\n  _seiSet = new Set()\n\n  constructor (emitter) {\n    this.emitter = emitter\n\n    emitter.on(EVENT.SEI, (sei) => {\n      if (sei) this._seiSet.add(sei)\n    })\n  }\n\n  throw (currentTime) {\n    if (currentTime === null || currentTime === undefined || !this._seiSet.size) return\n    const min = currentTime - 0.2\n    const max = currentTime + 0.2\n    const toThrow = []\n    this._seiSet.forEach(sei => {\n      if (sei.time >= min && sei.time <= max) {\n        toThrow.push(sei)\n      }\n    })\n\n    toThrow.forEach((sei) => {\n      this._seiSet.delete(sei)\n      this.emitter.emit(EVENT.SEI_IN_TIME, sei)\n    })\n  }\n\n  reset () {\n    this._seiSet.clear()\n  }\n}\n","export class BandwidthService {\n  _chunkSpeeds = [] // bps\n  _speeds = [] // bps\n\n  addRecord (totalByte, ms) {\n    if (!totalByte || !ms) return\n    this._speeds.push(8000 * totalByte / ms)\n    this._speeds = this._speeds.slice(-3)\n  }\n\n  addChunkRecord (totalByte, ms) {\n    if (!totalByte || !ms) return\n    this._chunkSpeeds.push(8000 * totalByte / ms)\n    this._chunkSpeeds = this._chunkSpeeds.slice(-100)\n  }\n\n  getAvgSpeed () {\n    if (!this._chunkSpeeds.length && !this._speeds.length) return 0\n    if (this._speeds.length) {\n      return this._speeds.reduce((a, c) => (a += c)) / this._speeds.length\n    }\n    return this._chunkSpeeds.reduce((a, c) => (a += c)) / this._chunkSpeeds.length\n  }\n\n  getLatestSpeed () {\n    if (!this._chunkSpeeds.length && !this._speeds.length) return 0\n    if (this._speeds.length) {\n      return this._speeds[this._speeds.length - 1]\n    }\n    return this._chunkSpeeds[this._chunkSpeeds.length - 1]\n  }\n\n  reset () {\n    this._chunkSpeeds = []\n    this._speeds = []\n  }\n}\n","import { EVENT } from 'xgplayer-streaming-shared'\n\nclass Stats {\n  encodeType = '' // hevc | avc\n  audioCodec = ''\n  videoCodec = ''\n  domain = '' // stream url domain\n  fps = 0\n  bitrate = 0 // 最新1s下载数据的码率\n  width = 0\n  height = 0\n  samplerate = 0\n  channelCount = 0\n  gop = 0 // 第一个gop帧数\n\n  _bitsAccumulateSize = 0\n  _bitsAccumulateDuration = 0\n\n  constructor (timescale) {\n    this._timescale = timescale\n  }\n\n  getStats () {\n    return {\n      encodeType: this.encodeType,\n      audioCodec: this.audioCodec,\n      videoCodec: this.videoCodec,\n      domain: this.domain,\n      fps: this.fps,\n      bitrate: this.bitrate,\n      width: this.width,\n      height: this.height,\n      samplerate: this.samplerate,\n      channelCount: this.channelCount,\n      gop: this.gop\n    }\n  }\n\n  setEncodeType (encode) {\n    this.encodeType = encode\n  }\n\n  setFpsFromScriptData ({data}) {\n    const fps = data?.onMetaData?.framerate\n    if (fps && fps > 0 && fps < 100) {\n      this.fps = fps\n    }\n  }\n\n  setVideoMeta (track) {\n    this.width = track.width\n    this.height = track.height\n    this.videoCodec = track.codec\n    this.encodeType = track.codecType\n    if (track.fpsNum && track.fpsDen) {\n      const fps = track.fpsNum / track.fpsDen\n      if (fps > 0 && fps < 100) {\n        this.fps = fps\n      }\n    }\n  }\n\n  setAudioMeta (track) {\n    this.audioCodec = track.codec\n    this.samplerate = track.sampleRate\n    this.channelCount = track.channelCount\n  }\n\n  setDomain (responseUrl) {\n    this.domain = responseUrl.split('/').slice(2, 3)[0]\n  }\n\n  updateBitrate (samples) {\n    if (!this.fps || this.fps >= 100) {\n      if (samples.length) {\n        const duration = samples.reduce((a,b) => a += b.duration, 0) / samples.length\n        this.fps = Math.round(this._timescale / duration)\n      }\n    }\n    samples.forEach(sample => {\n      if (sample.gopId === 1) {\n        this.gop++\n      }\n      this._bitsAccumulateDuration += sample.duration / (this._timescale / 1000)\n      this._bitsAccumulateSize += sample.units.reduce((a, c) => (a += c.length), 0)\n      if (this._bitsAccumulateDuration >= 1000) {\n        this.bitrate = this._bitsAccumulateSize * 8\n        this._bitsAccumulateDuration = 0\n        this._bitsAccumulateSize = 0\n      }\n    })\n  }\n}\n\n\n/**\n * @typedef {Object} StatsInfo\n * @property {number} downloadSpeed\n * @property {number} avgSpeed\n * @property {number} currentTime\n * @property {number} bufferEnd\n * @property {number} decodeFps\n * @property {string} encodeType\n * @property {string} audioCodec\n * @property {string} videoCodec\n * @property {string} domain\n * @property {number} fps\n * @property {number} bitrate\n * @property {number} width\n * @property {number} height\n * @property {number} samplerate\n * @property {number} channelCount\n * @property {number} gop\n */\nclass MediaStatsService {\n\n  _core = null\n\n  _samples = []\n\n  constructor (core, timescale = 1000) {\n    this._core = core\n    this._timescale = timescale\n    this._stats = new Stats(timescale)\n    this._bindEvents()\n  }\n\n\n  /** @returns {StatsInfo} */\n  getStats () {\n    const { currentTime = 0, decodeFps = 0 } = this._core?.media || {}\n    return {\n      ...this._stats.getStats(),\n      downloadSpeed: this._core?.speedInfo?.().speed || 0,\n      avgSpeed: this._core?.speedInfo?.().avgSpeed || 0,\n      currentTime,\n      bufferEnd: this._core?.bufferInfo()?.remaining || 0,\n      decodeFps\n    }\n  }\n\n  _bindEvents () {\n    this._core.on(EVENT.DEMUXED_TRACK, ({videoTrack}) => this._stats.updateBitrate(videoTrack.samples))\n\n    this._core.on(EVENT.FLV_SCRIPT_DATA, data => {\n      this._stats.setFpsFromScriptData(data)\n    })\n\n    this._core.on(EVENT.METADATA_PARSED, e => {\n      if (e.type === 'video') {\n        this._stats.setVideoMeta(e.track)\n      } else {\n        this._stats.setAudioMeta(e.track)\n      }\n    })\n\n    this._core.on(EVENT.TTFB, e => {\n      this._stats.setDomain(e.responseUrl)\n    })\n\n  }\n\n  reset () {\n    this._samples = []\n    this._stats = new Stats(this._timescale)\n  }\n\n}\n\nexport { MediaStatsService }\n","/** @enum {string} */\nexport const TrackType = {\n  VIDEO: 'video',\n  AUDIO: 'audio',\n  METADATA: 'metadata'\n}\n\n/** @enum {string} */\nexport const VideoCodecType = {\n  AVC: 'avc',\n  HEVC: 'hevc'\n}\n\n/** @enum {string} */\nexport const AudioCodecType = {\n  AAC: 'aac',\n  G711PCMA: 'g7110a',\n  G711PCMU: 'g7110m'\n}\n\n/** @enum {string} */\nexport const WarningType = {\n  LARGE_AV_SHIFT: 'LARGE_AV_SHIFT',\n  LARGE_VIDEO_GAP: 'LARGE_VIDEO_GAP',\n  LARGE_VIDEO_GAP_BETWEEN_CHUNK: 'LARGE_VIDEO_GAP_BETWEEN_CHUNK',\n  LARGE_AUDIO_GAP: 'LARGE_AUDIO_GAP',\n  AUDIO_FILLED: 'AUDIO_FILLED',\n  AUDIO_DROPPED: 'AUDIO_DROPPED'\n}\n","import { TrackType, VideoCodecType } from './types'\n\nexport class VideoTrack {\n  id = 1\n\n  /** @readonly */\n  type = TrackType.VIDEO\n\n  codecType = VideoCodecType.AVC\n\n  pid = -1 // ts use\n\n  /** @type {Uint8Array | Object} */\n  hvcC = undefined\n\n  codec = ''\n\n  timescale = 0\n\n  formatTimescale = 0\n\n  sequenceNumber = 0\n\n  baseMediaDecodeTime = 0\n\n  baseDts = 0\n\n  duration = 0\n\n  warnings = []\n\n  /** @type {import('./video-sample').VideoSample[]} */\n  samples = []\n\n  /** @type {Uint8Array[]} */\n  pps = []\n\n  /** @type {Uint8Array[]} */\n  sps = []\n\n  /** @type {Uint8Array[]} */\n  vps = []\n\n  fpsNum = 0\n\n  fpsDen = 0\n\n  /** @type {[number, number]} */\n  sarRatio = [] // [hSpacing, vSpacing]\n\n  width = 0\n\n  height = 0\n\n  nalUnitSize = 4\n\n  present = false\n\n  isVideoEncryption = false\n\n  isAudioEncryption = false\n\n  isVideo = true\n\n  kid = null\n\n  pssh = null\n\n  /** @type {any} */\n  ext\n\n  reset () {\n    this.sequenceNumber =\n    this.width =\n    this.height =\n    this.fpsDen =\n    this.fpsNum =\n    this.duration =\n    this.baseMediaDecodeTime =\n    this.timescale = 0\n    this.codec = ''\n    this.present = false\n    this.pid = -1\n    this.pps = []\n    this.sps = []\n    this.vps = []\n    this.sarRatio = []\n    this.samples = []\n    this.warnings = []\n    this.hvcC = null\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  exist () {\n    return !!(this.pps.length && this.sps.length && this.codec)\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  hasSample () {\n    return !!this.samples.length\n  }\n\n  get isEncryption (){\n    return this.isVideoEncryption\n  }\n}\n","import { TrackType, AudioCodecType } from './types'\n\nexport class AudioTrack {\n  id = 2\n\n  /** @readonly */\n  type = TrackType.AUDIO\n\n  codecType = AudioCodecType.AAC\n\n  pid = -1\n\n  codec = ''\n\n  sequenceNumber = 0\n\n  sampleDuration = 0\n\n  timescale = 0\n\n  formatTimescale = 0\n\n  baseMediaDecodeTime = 0\n\n  duration = 0\n\n  warnings = []\n\n  /** @type {import('./audio-sample').AudioSample[]} */\n  samples = []\n\n  baseDts = 0\n\n  sampleSize = 16\n\n  sampleRate = 0\n\n  channelCount = 0\n\n  objectType = 0\n\n  sampleRateIndex = 0\n\n  /** @type {number[]} */\n  config = []\n\n  present = false\n\n  isVideoEncryption = false\n\n  isAudioEncryption = false\n\n  kid = null\n\n  /** @type {any} */\n  ext\n\n  reset () {\n    this.sequenceNumber = 0\n    this.timescale = 0\n    this.sampleDuration = 0\n    this.sampleRate = 0\n    this.channelCount = 0\n    this.baseMediaDecodeTime = 0\n    this.present = false\n    this.pid = -1\n    this.codec = ''\n    this.samples = []\n    this.config = []\n    this.warnings = []\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  exist () {\n    return !!(this.sampleRate && this.channelCount && this.codec && this.codecType === AudioCodecType.AAC)\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  hasSample () {\n    return !!this.samples.length\n  }\n\n  get isEncryption (){\n    return this.isAudioEncryption\n  }\n}\n","/**\n * @typedef {Object} VideoFlag\n * @property {number} [isLeading=0]\n * @property {number} [dependsOn=1]\n * @property {number} [isDependedOn=0]\n * @property {number} [hasRedundancy=0]\n * @property {number} [paddingValue=0]\n * @property {number} [degradationPriority=0]\n * @property {number} [isNonSyncSample=1]\n */\n\nexport class VideoSample {\n  /** @type {VideoFlag} */\n  flag = {}\n\n  keyframe = false\n\n  gopId = 0\n\n  duration = 0\n\n  size = 0\n\n  units = []\n\n  chromaFormat = 420\n\n  // sampleOffset = 0\n\n  /**\n   * @param {number} pts\n   * @param {number} dts\n   * @param {Uint8Array[]} [units]\n   */\n  constructor (pts, dts, units) {\n    this.originPts = this.pts = pts\n    this.originDts = this.dts = dts\n    if (units) this.units = units\n  }\n\n  /**\n   * @returns {number}\n   */\n  get cts () {\n    return this.pts - this.dts\n  }\n\n  setToKeyframe () {\n    this.keyframe = true\n    this.flag.dependsOn = 2\n    this.flag.isNonSyncSample = 0\n  }\n}\n","export class AudioSample {\n  duration = 1024\n\n  flag = { dependsOn: 2, isNonSyncSample: 0 }\n  keyframe = true\n\n  /**\n   * @param {number} pts\n   * @param {Uint8Array} data\n   * @param {number} [duration=1024]\n   */\n  constructor (pts, data, duration, sampleOffset) {\n    this.originPts = this.pts = this.dts = pts\n    this.data = data\n    this.size = data.byteLength\n    this.sampleOffset = sampleOffset\n    if (duration) this.duration = duration\n  }\n}\n","import { TrackType } from './types'\n\nclass Sample {\n  time = 0 // second\n\n  /**\n   * @param {Object} data\n   * @param {number} pts\n   */\n  constructor (data, pts) {\n    this.data = data\n    this.originPts = this.pts = pts\n  }\n}\n\nexport class FlvScriptSample extends Sample {}\n\nexport class SeiSample extends Sample {}\n\nexport class MetadataTrack {\n  /** @readonly */\n  id = 3\n\n  /** @readonly */\n  type = TrackType.METADATA\n\n  timescale = 0\n\n  /** @type {FlvScriptSample[]} */\n  flvScriptSamples = []\n\n  /** @type {SeiSample[]} */\n  seiSamples = []\n\n  /**\n   * @returns {boolean}\n   */\n  exist () {\n    return !!((this.flvScriptSamples.length || this.seiSamples.length) && this.timescale)\n  }\n\n  reset () {\n    this.timescale = 0\n    this.flvScriptSamples = []\n    this.seiSamples = []\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  hasSample () {\n    return !!(this.flvScriptSamples.length || this.seiSamples.length)\n  }\n}\n","export class ExpGolomb {\n  _bytesAvailable\n\n  _bitsAvailable = 0\n\n  _word = 0\n\n  constructor (data) {\n    if (!data) throw new Error('ExpGolomb data params is required')\n    this._data = data\n    this._bytesAvailable = data.byteLength\n    if (this._bytesAvailable) this._loadWord()\n  }\n\n  _loadWord () {\n    const position = this._data.byteLength - this._bytesAvailable\n    const availableBytes = Math.min(4, this._bytesAvailable)\n    if (availableBytes === 0) throw new Error('No bytes available')\n\n    const workingBytes = new Uint8Array(4)\n    workingBytes.set(this._data.subarray(position, position + availableBytes))\n\n    this._word = new DataView(workingBytes.buffer).getUint32(0)\n    this._bitsAvailable = availableBytes * 8\n    this._bytesAvailable -= availableBytes\n  }\n\n  skipBits (count) {\n    if (this._bitsAvailable > count) {\n      this._word <<= count\n      this._bitsAvailable -= count\n    } else {\n      count -= this._bitsAvailable\n      const skipBytes = Math.floor(count / 8)\n      count -= (skipBytes * 8)\n      this._bytesAvailable -= skipBytes\n      this._loadWord()\n      this._word <<= count\n      this._bitsAvailable -= count\n    }\n  }\n\n  readBits (size) {\n    if (size > 32) {\n      throw new Error('Cannot read more than 32 bits')\n    }\n\n    let bits = Math.min(this._bitsAvailable, size)\n    const val = this._word >>> (32 - bits)\n\n    this._bitsAvailable -= bits\n    if (this._bitsAvailable > 0) {\n      this._word <<= bits\n    } else if (this._bytesAvailable > 0) {\n      this._loadWord()\n    }\n\n    bits = size - bits\n    if (bits > 0 && this._bitsAvailable) {\n      return (val << bits) | this.readBits(bits)\n    }\n    return val\n  }\n\n  skipLZ () {\n    let leadingZeroCount\n    for (\n      leadingZeroCount = 0;\n      leadingZeroCount < this._bitsAvailable;\n      ++leadingZeroCount\n    ) {\n      if ((this._word & (0x80000000 >>> leadingZeroCount)) !== 0) {\n        this._word <<= leadingZeroCount\n        this._bitsAvailable -= leadingZeroCount\n        return leadingZeroCount\n      }\n    }\n    this._loadWord()\n    return leadingZeroCount + this.skipLZ()\n  }\n\n  skipUEG () {\n    this.skipBits(1 + this.skipLZ())\n  }\n\n  readUEG () {\n    const clz = this.skipLZ()\n    return this.readBits(clz + 1) - 1\n  }\n\n  readEG () {\n    const val = this.readUEG()\n    if (1 & val) {\n      return (1 + val) >>> 1\n    }\n    return -1 * (val >>> 1)\n  }\n\n  readBool () {\n    return this.readBits(1) === 1\n  }\n\n  readUByte () {\n    return this.readBits(8)\n  }\n\n  skipScalingList (count) {\n    let lastScale = 8\n    let nextScale = 8\n    let deltaScale\n    for (let j = 0; j < count; j++) {\n      if (nextScale !== 0) {\n        deltaScale = this.readEG()\n        nextScale = (lastScale + deltaScale + 256) % 256\n      }\n      lastScale = nextScale === 0 ? lastScale : nextScale\n    }\n  }\n}\n","export class Logger {\n  constructor (name) {\n    this.name = name || ''\n    this._prefix = `[${this.name}]`\n  }\n\n  warn (...args) {\n    if (Logger.disabled) return\n    console.warn(this._prefix, ...args)\n  }\n\n  static disabled = true\n\n  static enable () {\n    Logger.disabled = false\n  }\n\n  static disable () {\n    Logger.disabled = true\n  }\n}\n","export class UTF8 {\n  /**\n   *\n   * @param {Uint8Array} uint8array\n   * @return {string}\n   */\n  static decode (uint8array) {\n    const out = []\n    const input = uint8array\n    let i = 0\n    const length = uint8array.length\n\n    while (i < length) {\n      if (input[i] < 0x80) {\n        out.push(String.fromCharCode(input[i]))\n        ++i\n        continue\n      } else if (input[i] < 0xC0) {\n        // fallthrough\n      } else if (input[i] < 0xE0) {\n        if (UTF8._checkContinuation(input, i, 1)) {\n          const ucs4 = (input[i] & 0x1F) << 6 | (input[i + 1] & 0x3F)\n          if (ucs4 >= 0x80) {\n            out.push(String.fromCharCode(ucs4 & 0xFFFF))\n            i += 2\n            continue\n          }\n        }\n      } else if (input[i] < 0xF0) {\n        if (UTF8._checkContinuation(input, i, 2)) {\n          const ucs4 = (input[i] & 0xF) << 12 | (input[i + 1] & 0x3F) << 6 | input[i + 2] & 0x3F\n          if (ucs4 >= 0x800 && (ucs4 & 0xF800) !== 0xD800) {\n            out.push(String.fromCharCode(ucs4 & 0xFFFF))\n            i += 3\n            continue\n          }\n        }\n      } else if (input[i] < 0xF8) {\n        if (UTF8._checkContinuation(input, i, 3)) {\n          let ucs4 = (input[i] & 0x7) << 18 | (input[i + 1] & 0x3F) << 12 |\n                    (input[i + 2] & 0x3F) << 6 | (input[i + 3] & 0x3F)\n          if (ucs4 > 0x10000 && ucs4 < 0x110000) {\n            ucs4 -= 0x10000\n            out.push(String.fromCharCode((ucs4 >>> 10) | 0xD800))\n            out.push(String.fromCharCode((ucs4 & 0x3FF) | 0xDC00))\n            i += 4\n            continue\n          }\n        }\n      }\n      out.push(String.fromCharCode(0xFFFD))\n      ++i\n    }\n\n    return out.join('')\n  }\n\n  static _checkContinuation (uint8array, start, checkLength) {\n    const array = uint8array\n    if (start + checkLength < array.length) {\n      while (checkLength--) {\n        if ((array[++start] & 0xC0) !== 0x80) {\n          return false\n        }\n      }\n      return true\n    } else {\n      return false\n    }\n  }\n}\n","export const isBrowser = typeof window !== 'undefined'\n\nconst ua = isBrowser && navigator.userAgent.toLocaleLowerCase()\n\n// eslint-disable-next-line no-lookahead-lookbehind-regexp/no-lookahead-lookbehind-regexp\nexport const isSafari = isBrowser && /^((?!chrome|android).)*safari/.test(ua)\nexport const isFirefox = isBrowser && ua.includes('firefox')\nexport const isAndroid = isBrowser && ua.includes('android')\n","/* c8 ignore next 4 */\nexport { ExpGolomb } from './exp-golomb'\nexport { Logger } from './logger'\nexport { UTF8 } from './utf8'\nexport * from './env'\n\nexport function concatUint8Array (...arr) {\n  arr = arr.filter(Boolean)\n  const data = new Uint8Array(arr.reduce((p, c) => p + c.byteLength, 0))\n  let prevLen = 0\n  arr.forEach((d) => {\n    data.set(d, prevLen)\n    prevLen += d.byteLength\n  })\n  return data\n}\n\nexport const MAX_SIZE = Math.pow(2, 32)\n\nexport function readBig16 (data, i = 0) {\n  return (data[i] << 8) + (data[i + 1] || 0)\n}\n\nexport function readBig24 (data, i = 0) {\n  return (data[i] << 16) + (data[i + 1] << 8) + (data[i + 2] || 0)\n}\n\nexport function readBig32 (data, i = 0) {\n  return (data[i] << 24 >>> 0) + (data[i + 1] << 16) + (data[i + 2] << 8) + (data[i + 3] || 0)\n}\n\nexport function readBig64 (data, i = 0) {\n  return readBig32(data, i) * MAX_SIZE + readBig32(data, i + 4)\n}\n\nexport function getAvcCodec (codecs) {\n  let codec = 'avc1.'\n  let h\n  for (let i = 0; i < 3; i++) {\n    h = codecs[i].toString(16)\n    if (h.length < 2) h = `0${h}`\n    codec += h\n  }\n  return codec\n}\n\nexport function formatIV (arr) {\n  let iv = ''\n  arr.forEach(value => {\n    iv += bufferToString(value)\n  })\n  if (iv.length <= 32) {\n    const len = 32 - iv.length\n    for (let i = 0; i < len; i++) {\n      iv += '0'\n    }\n  }\n  return iv\n}\n\nexport function parse (a) {\n  if (!Array.isArray(a)) {\n    const arr = []\n    let value = ''\n    for (let i = 0; i < a.length; i++) {\n      if (i % 2) {\n        value = a[i - 1] + a[i]\n        arr.push(parseInt(value, 16))\n        value = ''\n      }\n    }\n    return arr\n  }\n  return a.map(item => { return parseInt(item, 16) })\n}\nfunction bufferToString (value) {\n  return ('0' + (Number(value).toString(16))).slice(-2).toUpperCase()\n}\n\nexport function hashVal (str) {\n  let hash = 0; let i; let chr\n  if (str.length === 0) return hash\n  for (i = 0; i < str.length; i++) {\n    chr = str.charCodeAt(i)\n    hash = ((hash << 5) - hash) + chr\n    hash |= 0\n  }\n  return hash\n}\n","import { readBig32 } from '../utils'\n\nexport class NALu {\n  static parseAnnexB (data) {\n    const len = data.length\n    let start = 2\n    let end = 0\n    while (data[start] !== null && data[start] !== undefined && data[start] !== 1) {\n      start++\n    }\n    start++\n    end = start + 2\n\n    if (end >= len) return []\n\n    const units = []\n\n    while (end < len) {\n      switch (data[end]) {\n        case 0:\n          if (data[end - 1] !== 0) {\n            end += 2\n            break\n          } else if (data[end - 2] !== 0) {\n            end++\n            break\n          }\n\n          if (start !== end - 2) units.push(data.subarray(start, end - 2))\n\n          do {\n            end++\n          } while (data[end] !== 1 && end < len)\n          start = end + 1\n          end = start + 2\n          break\n        case 1:\n          if (data[end - 1] !== 0 || data[end - 2] !== 0) {\n            end += 3\n            break\n          }\n          if (start !== end - 2) units.push(data.subarray(start, end - 2))\n          start = end + 1\n          end = start + 2\n          break\n        default:\n          end += 3\n          break\n      }\n    }\n\n    if (start < len) units.push(data.subarray(start))\n\n    return units\n  }\n\n  static parseAvcC (data, size = 4) {\n    if (data.length < 4) return\n    const dataLen = data.length\n    const units = []\n\n    let offset = 0\n    let length\n    while ((offset + size) < dataLen) {\n      length = readBig32(data, offset)\n      if (size === 3) length >>>= 8\n      offset += size\n\n      if (!length) continue\n      if (offset + length > dataLen) {\n        break\n      }\n\n      units.push(data.subarray(offset, offset + length))\n      offset += length\n    }\n\n    return units\n  }\n\n  static parseSEI (unit, isHevc) {\n    const len = unit.length\n    let i = isHevc ? 2 : 1\n    let type = 0\n    let size = 0\n    let uuid = ''\n\n    while (unit[i] === 255) {\n      type += 255\n      i++\n    }\n\n    type += unit[i++]\n\n    while (unit[i] === 255) {\n      size += 255\n      i++\n    }\n    size += unit[i++]\n\n    if (type === 5 && len > i + 16) {\n      for (let j = 0; j < 16; j++) {\n        uuid += unit[i].toString(16)\n        i++\n      }\n    }\n\n    return {\n      payload: unit.subarray(i), type, size, uuid\n    }\n  }\n\n  static removeEPB (uint) {\n    const length = uint.byteLength\n    const emulationPreventionBytesPositions = []\n    let i = 1\n\n    while (i < length - 2) {\n      if (uint[i] === 0 && uint[i + 1] === 0 && uint[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2)\n        i += 2\n      } else {\n        i++\n      }\n    }\n\n    if (!emulationPreventionBytesPositions.length) return uint\n\n    const newLength = length - emulationPreventionBytesPositions.length\n    const newData = new Uint8Array(newLength)\n\n    let sourceIndex = 0\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        sourceIndex++\n        emulationPreventionBytesPositions.shift()\n      }\n      newData[i] = uint[sourceIndex]\n    }\n\n    return newData\n  }\n}\n","import { NALu } from './nalu'\nimport { ExpGolomb, getAvcCodec } from '../utils'\n\nexport class AVC {\n  static parseAVCDecoderConfigurationRecord (data) {\n    if (data.length < 7) return\n    const nalUnitSize = (data[4] & 3) + 1\n\n    let spsParsed\n    const spsArr = []\n    const ppsArr = []\n\n    let offset = 6\n    const spsCount = data[5] & 0x1f\n    let spsSize\n    for (let i = 0; i < spsCount; i++) {\n      spsSize = (data[offset] << 8) | data[offset + 1]\n      offset += 2\n      if (!spsSize) continue\n\n      const sps = data.subarray(offset, offset + spsSize)\n      offset += spsSize\n      spsArr.push(sps)\n\n      if (!spsParsed) {\n        spsParsed = AVC.parseSPS(NALu.removeEPB(sps))\n      }\n    }\n\n    const ppsCount = data[offset]\n    offset++\n    let ppsSize\n    for (let i = 0; i < ppsCount; i++) {\n      ppsSize = (data[offset] << 8) | data[offset + 1]\n      offset += 2\n      if (!ppsSize) continue\n      ppsArr.push(data.subarray(offset, offset + ppsSize))\n      offset += ppsSize\n    }\n\n    return {\n      sps: spsParsed,\n      spsArr,\n      ppsArr,\n      nalUnitSize\n    }\n  }\n\n  static parseSPS (unit) {\n    const eg = new ExpGolomb(unit)\n    eg.readUByte()\n\n    const profileIdc = eg.readUByte()\n    const profileCompatibility = eg.readUByte()\n    const levelIdc = eg.readUByte()\n    eg.skipUEG()\n\n    let chromaFormat = 420\n    if (\n      profileIdc === 100 ||\n      profileIdc === 110 ||\n      profileIdc === 122 ||\n      profileIdc === 244 ||\n      profileIdc === 44 ||\n      profileIdc === 83 ||\n      profileIdc === 86 ||\n      profileIdc === 118 ||\n      profileIdc === 128 ||\n      profileIdc === 138 ||\n      profileIdc === 144\n    ) {\n      const chromaFormatIdc = eg.readUEG()\n      if (chromaFormatIdc <= 3) chromaFormat = [0, 420, 422, 444][chromaFormatIdc]\n      if (chromaFormatIdc === 3) eg.skipBits(1)\n      eg.skipUEG()\n      eg.skipUEG()\n      eg.skipBits(1)\n      if (eg.readBool()) {\n        const scalingListCount = chromaFormatIdc !== 3 ? 8 : 12\n        for (let i = 0; i < scalingListCount; i++) {\n          if (eg.readBool()) {\n            if (i < 6) {\n              eg.skipScalingList(16)\n            } else {\n              eg.skipScalingList(64)\n            }\n          }\n        }\n      }\n    }\n\n    eg.skipUEG()\n    const picOrderCntType = eg.readUEG()\n    if (picOrderCntType === 0) {\n      eg.readUEG()\n    } else if (picOrderCntType === 1) {\n      eg.skipBits(1)\n      eg.skipUEG()\n      eg.skipUEG()\n      const numRefFramesInPicOrderCntCycle = eg.readUEG()\n      for (let i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n        eg.skipUEG()\n      }\n    }\n\n    eg.skipUEG()\n    eg.skipBits(1)\n    const picWidthInMbsMinus1 = eg.readUEG()\n    const picHeightInMapUnitsMinus1 = eg.readUEG()\n    const frameMbsOnlyFlag = eg.readBits(1)\n    if (frameMbsOnlyFlag === 0) eg.skipBits(1)\n    eg.skipBits(1)\n\n    let frameCropLeftOffset = 0\n    let frameCropRightOffset = 0\n    let frameCropTopOffset = 0\n    let frameCropBottomOffset = 0\n\n    if (eg.readBool()) {\n      frameCropLeftOffset = eg.readUEG()\n      frameCropRightOffset = eg.readUEG()\n      frameCropTopOffset = eg.readUEG()\n      frameCropBottomOffset = eg.readUEG()\n    }\n\n    let sarRatio\n    let fixedFrame\n    let fpsNum\n    let fpsDen\n    let fps\n    if (eg.readBool()) {\n      if (eg.readBool()) {\n        const aspectRatioIdc = eg.readUByte()\n        switch (aspectRatioIdc) {\n          case 1: sarRatio = [1, 1]; break\n          case 2: sarRatio = [12, 11]; break\n          case 3: sarRatio = [10, 11]; break\n          case 4: sarRatio = [16, 11]; break\n          case 5: sarRatio = [40, 33]; break\n          case 6: sarRatio = [24, 11]; break\n          case 7: sarRatio = [20, 11]; break\n          case 8: sarRatio = [32, 11]; break\n          case 9: sarRatio = [80, 33]; break\n          case 10: sarRatio = [18, 11]; break\n          case 11: sarRatio = [15, 11]; break\n          case 12: sarRatio = [64, 33]; break\n          case 13: sarRatio = [160, 99]; break\n          case 14: sarRatio = [4, 3]; break\n          case 15: sarRatio = [3, 2]; break\n          case 16: sarRatio = [2, 1]; break\n          case 255: {\n            sarRatio = [\n              (eg.readUByte() << 8) | eg.readUByte(),\n              (eg.readUByte() << 8) | eg.readUByte()\n            ]\n            break\n          }\n          default:\n        }\n      }\n\n      if (eg.readBool()) eg.readBool()\n\n      if (eg.readBool()) {\n        eg.readBits(4)\n        if (eg.readBool()) eg.readBits(24)\n      }\n\n      if (eg.readBool()) {\n        eg.readUEG()\n        eg.readUEG()\n      }\n\n      if (eg.readBool()) {\n        const numUnitsInTick = eg.readBits(32)\n        const timeScale = eg.readBits(32)\n        fixedFrame = eg.readBool()\n\n        fpsNum = timeScale\n        fpsDen = numUnitsInTick * 2\n        fps = fpsNum / fpsDen\n      }\n    }\n\n    return {\n      codec: getAvcCodec(unit.subarray(1, 4)),\n      profileIdc,\n      profileCompatibility,\n      levelIdc,\n      chromaFormat,\n      width: Math.ceil(\n        (picWidthInMbsMinus1 + 1) * 16 -\n          2 * (frameCropLeftOffset + frameCropRightOffset)\n      ),\n      height:\n        (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 -\n        (frameMbsOnlyFlag ? 2 : 4) *\n          (frameCropTopOffset + frameCropBottomOffset),\n      sarRatio,\n      fpsNum,\n      fpsDen,\n      fps,\n      fixedFrame\n    }\n  }\n}\n","import { isFirefox, isAndroid } from '../utils'\n\nexport class AAC {\n  static FREQ = [\n    96000,\n    88200,\n    64000,\n    48000,\n    44100,\n    32000,\n    24000,\n    22050,\n    16000,\n    12000,\n    11025,\n    8000,\n    7350\n  ];\n\n  static getRateIndexByRate (rate) {\n    return AAC.FREQ.indexOf(rate)\n  }\n\n  static parseADTS (data, pts) {\n    const len = data.length\n    let i = 0\n\n    while ((i + 2) < len) {\n      if (data[i] === 0xff && (data[i + 1] & 0xf6) === 0xf0) {\n        break\n      }\n      i++\n    }\n\n    if (i >= len) return\n\n    const skip = i\n    const frames = []\n    const samplingFrequencyIndex = (data[i + 2] & 0x3c) >>> 2\n    const sampleRate = AAC.FREQ[samplingFrequencyIndex]\n    if (!sampleRate) throw new Error(`Invalid sampling index: ${samplingFrequencyIndex}`)\n    const objectType = ((data[i + 2] & 0xc0) >>> 6) + 1\n    const channelCount = ((data[i + 2] & 1) << 2) | ((data[i + 3] & 0xc0) >>> 6)\n    const { config, codec } = AAC._getConfig(samplingFrequencyIndex, channelCount, objectType)\n\n    let protectionSkipBytes\n    let frameLength\n    let frameIndex = 0\n    const duration = AAC.getFrameDuration(sampleRate)\n\n    while ((i + 7) < len) {\n      if ((data[i] !== 0xff) || (data[i + 1] & 0xF6) !== 0xf0) {\n        i++\n        continue\n      }\n\n      frameLength = ((data[i + 3] & 0x03) << 11) | (data[i + 4] << 3) | ((data[i + 5] & 0xe0) >> 5)\n      if ((len - i) < frameLength) break\n\n      protectionSkipBytes = (~data[i + 1] & 0x01) * 2\n      frames.push({\n        pts: pts + frameIndex * duration,\n        data: data.subarray(i + 7 + protectionSkipBytes, i + frameLength)\n      })\n\n      frameIndex++\n      i += frameLength\n    }\n\n    return {\n      skip,\n      remaining: i >= len ? undefined : data.subarray(i),\n      frames,\n      samplingFrequencyIndex,\n      sampleRate,\n      objectType,\n      channelCount,\n      codec,\n      config,\n      originCodec: `mp4a.40.${objectType}`\n    }\n  }\n\n  static parseAudioSpecificConfig (data) {\n    if (!data.length) return\n    const objectType = data[0] >>> 3\n    const samplingFrequencyIndex = ((data[0] & 0x07) << 1) | (data[1] >>> 7)\n    const channelCount = (data[1] & 0x78) >>> 3\n    const sampleRate = AAC.FREQ[samplingFrequencyIndex]\n    // play as no audio track stream\n    if (!sampleRate) return\n    const { config, codec } = AAC._getConfig(samplingFrequencyIndex, channelCount, objectType)\n\n    return {\n      samplingFrequencyIndex,\n      sampleRate,\n      objectType,\n      channelCount,\n      config,\n      codec,\n      originCodec: `mp4a.40.${objectType}`\n    }\n  }\n\n  static getFrameDuration (rate, timescale = 90000) {\n    return 1024 * timescale / rate\n  }\n\n  static _getConfig (samplingIndex, channelCount, originObjectType) {\n    const config = []\n    let objectType\n    let extensionSamplingIndex\n    if (isFirefox) {\n      if (samplingIndex >= 6) { // use SBR (HE-AAC)\n        objectType = 5\n        extensionSamplingIndex = samplingIndex - 3\n      } else { // use LC-AAC\n        objectType = 2\n        extensionSamplingIndex = samplingIndex\n      }\n    } else if (isAndroid) { // use LC-AAC\n      objectType = 2\n      extensionSamplingIndex = samplingIndex\n    } else { // use HE-AAC\n      objectType = (originObjectType === 2 || originObjectType === 5) ? originObjectType : 5\n      extensionSamplingIndex = samplingIndex\n\n      if (samplingIndex >= 6) {\n        extensionSamplingIndex = samplingIndex - 3\n      } else if (channelCount === 1) { // Mono channel, use LC-AAC\n        objectType = 2\n        extensionSamplingIndex = samplingIndex\n      }\n    }\n\n    config[0] = objectType << 3\n    config[0] |= (samplingIndex & 0x0e) >> 1\n    config[1] = (samplingIndex & 0x01) << 7\n    config[1] |= channelCount << 3\n    if (objectType === 5) {\n      config[1] |= ((extensionSamplingIndex & 0x0e) >> 1)\n      config[2] = (extensionSamplingIndex & 0x01) << 7\n      config[2] |= (2 << 2)\n      config[3] = 0\n    }\n\n    return {\n      config,\n      codec: `mp4a.40.${objectType}`\n    }\n  }\n\n  /* c8 ignore next 65 */\n  static getSilentFrame (codec, channelCount) {\n    switch (codec) {\n      case 'mp4a.40.2':\n        if (channelCount === 1) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x23, 0x80])\n        } if (channelCount === 2) {\n          return new Uint8Array([\n            0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80\n          ])\n        } if (channelCount === 3) {\n          return new Uint8Array([\n            0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64,\n            0x00, 0x8e\n          ])\n        } if (channelCount === 4) {\n          return new Uint8Array([\n            0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64,\n            0x00, 0x80, 0x2c, 0x80, 0x08, 0x02, 0x38\n          ])\n        } if (channelCount === 5) {\n          return new Uint8Array([\n            0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64,\n            0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x38\n          ])\n        } if (channelCount === 6) {\n          return new Uint8Array([\n            0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64,\n            0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x00, 0xb2,\n            0x00, 0x20, 0x08, 0xe0\n          ])\n        }\n        break\n      default:\n        if (channelCount === 1) {\n          return new Uint8Array([\n            0x1, 0x40, 0x22, 0x80, 0xa3, 0x4e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0,\n            0x0, 0x1c, 0x6, 0xf1, 0xc1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5e\n          ])\n        } if (channelCount === 2) {\n          return new Uint8Array([\n            0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0,\n            0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5e\n          ])\n        } if (channelCount === 3) {\n          return new Uint8Array([\n            0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0,\n            0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5e\n          ])\n        }\n        break\n    }\n  }\n}\n","import { NALu } from './nalu'\nimport { ExpGolomb } from '../utils'\n\nexport class HEVC {\n  static parseHEVCDecoderConfigurationRecord (data, hvcC = {}) {\n    if (data.length < 23) return\n    hvcC = hvcC || {}\n    const nalUnitSize = (data[21] & 3) + 1\n\n    let vpsParsed\n    let spsParsed\n    const spsArr = []\n    const ppsArr = []\n    const vpsArr = []\n\n    let offset = 23\n    const numOfArrays = data[22]\n\n    let nalUnitType\n    let numNalus\n    let nalSize\n    for (let i = 0; i < numOfArrays; i++) {\n      nalUnitType = data[offset] & 0x3f\n      numNalus = (data[offset + 1] << 8) | data[offset + 2]\n\n      offset += 3\n\n      for (let j = 0; j < numNalus; j++) {\n        nalSize = (data[offset] << 8) | data[offset + 1]\n        offset += 2\n        if (!nalSize) continue\n        switch (nalUnitType) {\n          case 32: {\n            const vps = data.subarray(offset, offset + nalSize)\n            if (!vpsParsed) vpsParsed = HEVC.parseVPS(NALu.removeEPB(vps), hvcC)\n            vpsArr.push(vps)\n          }\n            break\n          case 33: {\n            const sps = data.subarray(offset, offset + nalSize)\n            if (!spsParsed) spsParsed = HEVC.parseSPS(NALu.removeEPB(sps), hvcC)\n            spsArr.push(sps)\n          }\n            break\n          case 34:\n            ppsArr.push(data.subarray(offset, offset + nalSize))\n            break\n          default:\n        }\n\n        offset += nalSize\n      }\n    }\n\n    return {\n      hvcC,\n      sps: spsParsed,\n      spsArr,\n      ppsArr,\n      vpsArr,\n      nalUnitSize\n    }\n  }\n\n  static parseVPS (unit, hvcC) {\n    hvcC = hvcC || {}\n    const eg = new ExpGolomb(unit)\n    eg.readUByte()\n    eg.readUByte()\n\n    eg.readBits(12)\n    const vpsMaxSubLayersMinus1 = eg.readBits(3)\n    hvcC.numTemporalLayers = Math.max(hvcC.numTemporalLayers || 0, vpsMaxSubLayersMinus1 + 1)\n    eg.readBits(17)\n    HEVC._parseProfileTierLevel(eg, vpsMaxSubLayersMinus1, hvcC)\n\n    return hvcC\n  }\n\n  static parseSPS (unit, hvcC = {}) {\n    hvcC = hvcC || {}\n    const eg = new ExpGolomb(unit)\n    eg.readUByte()\n    eg.readUByte()\n\n    eg.readBits(4)\n    const spsMaxSubLayersMinus1 = eg.readBits(3)\n    hvcC.numTemporalLayers = Math.max(spsMaxSubLayersMinus1 + 1, hvcC.numTemporalLayers || 0)\n    hvcC.temporalIdNested = eg.readBits(1)\n    HEVC._parseProfileTierLevel(eg, spsMaxSubLayersMinus1, hvcC)\n\n    eg.readUEG() // sps_seq_parameter_set_id\n\n    const chromaFormatIdc = hvcC.chromaFormatIdc = eg.readUEG()\n    let chromaFormat = 420\n    if (chromaFormatIdc <= 3) chromaFormat = [0, 420, 422, 444][chromaFormatIdc]\n\n    let separateColourPlaneFlag = 0\n    if (chromaFormatIdc === 3) {\n      separateColourPlaneFlag = eg.readBits(1)\n    }\n\n    let width = eg.readUEG() // pic_width_in_luma_samples\n    let height = eg.readUEG() // pic_height_in_luma_samples\n\n    const conformanceWindowFlag = eg.readBits(1)\n\n    let confWinLeftOffset\n    let confWinRightOffset\n    let confWinTopOffset\n    let confWinBottomOffset\n    if (conformanceWindowFlag === 1) {\n      confWinLeftOffset = eg.readUEG() // conf_win_left_offset\n      confWinRightOffset = eg.readUEG() // conf_win_right_offset\n      confWinTopOffset = eg.readUEG() // conf_win_top_offset\n      confWinBottomOffset = eg.readUEG() // conf_win_bottom_offset\n    }\n\n    hvcC.bitDepthLumaMinus8 = eg.readUEG() // bit_depth_luma_minus8\n    hvcC.bitDepthChromaMinus8 = eg.readUEG() // bit_depth_chroma_minus8\n\n    if (conformanceWindowFlag === 1) {\n      const subWidthC = (((chromaFormatIdc === 1) || (chromaFormatIdc === 2)) && (separateColourPlaneFlag === 0)) ? 2 : 1\n      const subHeightC = ((chromaFormatIdc === 1) && (separateColourPlaneFlag === 0)) ? 2 : 1\n      width -= (subWidthC * (confWinRightOffset + confWinLeftOffset))\n      height -= (subHeightC * (confWinBottomOffset + confWinTopOffset))\n    }\n\n    return {\n      codec: 'hev1.1.6.L93.B0',\n      width,\n      height,\n      chromaFormat,\n      hvcC\n    }\n  }\n\n  static _parseProfileTierLevel (eg, maxSubLayersMinus1, hvcC) {\n    const generalTierFlag = hvcC.generalTierFlag || 0\n    hvcC.generalProfileSpace = eg.readBits(2)\n    hvcC.generalTierFlag = Math.max(eg.readBits(1), generalTierFlag)\n    hvcC.generalProfileIdc = Math.max(eg.readBits(5), hvcC.generalProfileIdc || 0)\n    hvcC.generalProfileCompatibilityFlags = eg.readBits(32)\n    hvcC.generalConstraintIndicatorFlags = [eg.readBits(8), eg.readBits(8), eg.readBits(8), eg.readBits(8), eg.readBits(8), eg.readBits(8)]\n    const generalLevelIdc = eg.readBits(8)\n    if (generalTierFlag < hvcC.generalTierFlag) {\n      hvcC.generalLevelIdc = generalLevelIdc\n    } else {\n      hvcC.generalLevelIdc = Math.max(generalLevelIdc, hvcC.generalLevelIdc || 0)\n    }\n\n    const subLayerProfilePresentFlag = []\n    const subLayerLevelPresentFlag = []\n    for (let j = 0; j < maxSubLayersMinus1; j++) {\n      subLayerProfilePresentFlag[j] = eg.readBits(1)\n      subLayerLevelPresentFlag[j] = eg.readBits(1)\n    }\n\n    if (maxSubLayersMinus1 > 0) {\n      eg.readBits((8 - maxSubLayersMinus1) * 2)\n    }\n\n    for (let i = 0; i < maxSubLayersMinus1; i++) {\n      if (subLayerProfilePresentFlag[i] !== 0) {\n        eg.readBits(2)\n        eg.readBits(1)\n        eg.readBits(5)\n\n        eg.readBits(16)\n        eg.readBits(16)\n\n        eg.readBits(4)\n\n        eg.readBits(16)\n        eg.readBits(16)\n        eg.readBits(12)\n      }\n      if (subLayerLevelPresentFlag[i] !== 0) {\n        eg.readBits(8)\n      }\n    }\n  }\n}\n","import { AudioCodecType, AudioSample, WarningType } from '../model'\nimport { AAC } from '../codec'\nimport { isSafari } from '../utils'\n\nconst LARGE_AV_FIRST_FRAME_GAP = 500 // ms\nconst AUDIO_GAP_OVERLAP_THRESHOLD_COUNT = 3\nconst MAX_SILENT_FRAME_DURATION = 1000 // ms\nconst AUDIO_EXCETION_LOG_EMIT_DURATION = 5000 // 5s\nconst MAX_VIDEO_FRAME_DURATION = 1000 // ms\nconst MAX_DTS_DELTA_WITH_NEXT_CHUNK = 200 // ms\nconst VIDEO_EXCETION_LOG_EMIT_DURATION = 5000 // 5s\nconst TRACK_BREACKED_CHECK_TIME = 5\n\nexport class FlvFixer {\n  constructor (videoTrack, audioTrack, metadataTrack) {\n    this.videoTrack = videoTrack\n    this.audioTrack = audioTrack\n    this.metadataTrack = metadataTrack\n\n    this._baseDts = -1\n    this._baseDtsInited = false\n\n    this._audioNextPts = undefined\n    this._videoNextDts = undefined\n\n    this._audioTimestampBreak = 0\n    this._videoTimestampBreak = 0\n    this._lastVideoDuration = 0\n\n    // 在视频帧遇到下一个关键帧之前，如果音频时间戳发生了跳变，不能确定是否音视频都发生跳变还是单纯音频发生跳变.\n    // 这里记录关键帧标识, 从下一个关键帧开始，如果视频没有跳变，才能判断是只有音频发生了跳变\n    this._keyFrameInNextChunk = false\n\n    this._lastAudioExceptionGapDot = -Infinity\n    this._lastAudioExceptionOverlapDot = -Infinity\n    this._lastAudioExceptionLargeGapDot = -Infinity\n\n    this._lastVideoExceptionLargeGapDot = -Infinity\n    this._lastVideoExceptionChunkFirstDtsDot = -Infinity\n  }\n\n  /**\n   * @param {number} startTime 点播seek到的时间点\n   * @param {boolean} discontinuity 是否换流\n   * @param {boolean} contiguous 前后chunk时间戳是否连续\n   */\n  fix (startTime = 0, discontinuity = false, contiguous = true) {\n    startTime = Math.round(startTime * 1000)\n    const videoTrack = this.videoTrack\n    const audioTrack = this.audioTrack\n\n    if (discontinuity || !contiguous) {\n      this._videoLastSample = null\n      this._audioNextPts = undefined\n      this._videoNextDts = undefined\n      this._audioTimestampBreak = 0\n      this._videoTimestampBreak = 0\n      this._lastAudioExceptionGapDot = -Infinity\n      this._lastAudioExceptionOverlapDot = -Infinity\n      this._lastAudioExceptionLargeGapDot = -Infinity\n      this._lastVideoExceptionLargeGapDot = -Infinity\n      this._lastVideoExceptionChunkFirstDtsDot = -Infinity\n    }\n\n    if (discontinuity && !contiguous) {\n      this._baseDtsInited = false\n    }\n\n    if (!this._baseDtsInited) {\n      this._calculateBaseDts(audioTrack, videoTrack)\n    }\n\n    if (!contiguous && startTime) {\n      this._audioNextPts = this._videoNextDts = startTime\n    }\n\n    const resetBaseDts = this._baseDtsInited &&\n      (this._videoTimestampBreak || !this.videoTrack.exist()) &&\n      (this._audioTimestampBreak || !this.audioTrack.exist())\n\n    if (resetBaseDts) {\n      this._resetBaseDtsWhenStreamBreaked()\n    }\n\n    this._fixAudio(audioTrack)\n\n    this._keyFrameInNextChunk = false\n\n    this._fixVideo(videoTrack)\n\n    if (this.metadataTrack.exist()) {\n      const timescale = this.metadataTrack.timescale\n      this.metadataTrack.seiSamples.forEach(s => {\n        s.pts = s.originPts - this._baseDts\n        s.time = Math.max(0, s.pts) / timescale\n      })\n      this.metadataTrack.flvScriptSamples.forEach(s => {\n        s.pts = s.originPts - this._baseDts\n        s.time = Math.max(0, s.pts) / timescale\n      })\n    }\n\n    if (videoTrack.samples.length) {\n      videoTrack.baseMediaDecodeTime = videoTrack.samples[0].dts\n    }\n    if (audioTrack.samples.length) {\n      audioTrack.baseMediaDecodeTime = audioTrack.samples[0].pts * audioTrack.timescale / 1000\n    }\n  }\n\n  _fixVideo (videoTrack) {\n    const samples = videoTrack.samples\n\n    if (!samples.length) return\n\n    samples.forEach(x => {\n      x.dts -= this._baseDts\n      x.pts -= this._baseDts\n      if (x.keyframe) this._keyFrameInNextChunk = true\n    })\n\n    let refSampleDurationInt\n    if (videoTrack.fpsNum && videoTrack.fpsDen) {\n      refSampleDurationInt = videoTrack.timescale * (videoTrack.fpsDen / videoTrack.fpsNum)\n    } else if (videoTrack.length > 1) {\n      const first = videoTrack.samples[0]\n      const last = videoTrack.samples[samples.length - 1]\n      refSampleDurationInt = Math.floor((last.dts - first.dts) / (samples.length - 1))\n    } else {\n      refSampleDurationInt = this._lastVideoDuration || 40\n    }\n\n    const lastSample = samples.pop()\n\n    if (this._videoLastSample) {\n      samples.unshift(this._videoLastSample)\n    }\n\n    this._videoLastSample = lastSample\n\n    if (!samples.length) return\n\n    if (this._videoNextDts === undefined) {\n      const samp0 = samples[0]\n      this._videoNextDts = samp0.dts\n    }\n\n    const len = samples.length\n    let sampleDuration = 0\n    const firstSample = samples[0]\n    const vDelta = this._videoNextDts - firstSample.dts\n\n    if (Math.abs(vDelta) > MAX_DTS_DELTA_WITH_NEXT_CHUNK) {\n      // emit large delta of first sample with expect\n      if (Math.abs(firstSample.dts - this._lastVideoExceptionChunkFirstDtsDot) > VIDEO_EXCETION_LOG_EMIT_DURATION) {\n        this._lastVideoExceptionChunkFirstDtsDot = firstSample.dts\n\n        videoTrack.warnings.push({\n          type: WarningType.LARGE_VIDEO_GAP_BETWEEN_CHUNK,\n          nextDts: this._videoNextDts,\n          firstSampleDts: firstSample.dts,\n          nextSampleDts: samples[1]?.dts,\n          sampleDuration: vDelta\n        })\n      }\n\n      // only video breaked\n      if (this._videoTimestampBreak >= TRACK_BREACKED_CHECK_TIME) {\n        this._videoNextDts = firstSample.dts\n        this._videoTimestampBreak = 0\n      } else {\n        // resolve first frame only\n        firstSample.dts += vDelta\n        firstSample.pts += vDelta\n        if (!this.audioTrack.exist()) {\n          this._videoTimestampBreak = 1\n        }\n      }\n    }\n\n    for (let i = 0; i < len; i++) {\n      const dts = samples[i].dts\n      const nextSample = samples[i + 1]\n\n      if (i < len - 1) {\n        sampleDuration = nextSample.dts - dts\n      } else if (lastSample) {\n        sampleDuration = lastSample.dts - dts\n      } else {\n        sampleDuration = refSampleDurationInt\n      }\n\n      if (sampleDuration > MAX_VIDEO_FRAME_DURATION || sampleDuration < 0) {\n        this._videoTimestampBreak++\n        // emit stream breaked\n        if (Math.abs(dts - this._lastVideoExceptionLargeGapDot) > VIDEO_EXCETION_LOG_EMIT_DURATION) {\n          this._lastVideoExceptionLargeGapDot = dts\n          videoTrack.warnings.push({\n            type: WarningType.LARGE_VIDEO_GAP,\n            time: dts / videoTrack.timescale,\n            dts,\n            originDts: samples[i].originDts,\n            nextDts: this._videoNextDts,\n            sampleDuration,\n            refSampleDuration: refSampleDurationInt\n          })\n        }\n\n        sampleDuration = refSampleDurationInt\n      }\n\n      samples[i].duration = sampleDuration\n      this._videoNextDts += sampleDuration\n      this._lastVideoDuration = sampleDuration\n    }\n  }\n\n  _fixAudio (audioTrack) {\n    const samples = audioTrack.samples\n    if (!samples.length) return\n\n    // offset origin timestamp\n    samples.forEach(x => {\n      x.dts = x.pts -= this._baseDts\n    })\n\n    this._doFixAudioInternal(audioTrack, samples, 1000)\n  }\n\n  _calculateBaseDts (audioTrack, videoTrack) {\n    const audioSamps = audioTrack.samples\n    const videoSamps = videoTrack.samples\n\n    if (!audioSamps.length && !videoSamps.length) {\n      return false\n    }\n\n    let audioBasePts = Infinity\n    let videoBaseDts = Infinity\n\n    if (audioSamps.length) {\n      audioTrack.baseDts = audioBasePts = audioSamps[0].pts\n    }\n\n    if (videoSamps.length) {\n      videoTrack.baseDts = videoBaseDts = videoSamps[0].dts\n    }\n\n    this._baseDts = Math.min(audioBasePts, videoBaseDts)\n\n    const delta = videoBaseDts - audioBasePts\n\n    if (Number.isFinite(delta) && Math.abs(delta) > LARGE_AV_FIRST_FRAME_GAP) {\n      videoTrack.warnings.push({\n        type: WarningType.LARGE_AV_SHIFT,\n        videoBaseDts,\n        audioBasePts,\n        baseDts: this._baseDts,\n        delta\n      })\n    }\n\n    this._baseDtsInited = true\n    return true\n  }\n\n  _resetBaseDtsWhenStreamBreaked () {\n    /**\n       * timestamp breaked\n       *                     _audioNextDts\n       *  ---------------------|\n       * (_baseDts)          _videoNextDts\n       * ----------------------|\n       *                        <----------------\n       *                                       nextVideo.dts\n       * ----------------------------------------|\n       *                                       nextAudio.dts\n       * ---------------------------------------|\n       */\n\n    // calc baseDts base on new samples\n    const calc = this._calculateBaseDts(this.audioTrack, this.videoTrack)\n\n    if (!calc) return\n\n    // consider the expect dts for next frame\n    if (!this.audioTrack.exist()){\n      this._baseDts -= this._videoNextDts\n    } else if (!this.videoTrack.exist()){\n      this._baseDts -= this._audioNextPts\n    } else {\n      this._baseDts -= Math.min(this._audioNextPts, this._videoNextDts)\n    }\n    this._videoTimestampBreak = 0\n    this._audioTimestampBreak = 0\n  }\n\n  _doFixAudioInternal (audioTrack, samples, timescale) {\n    if (!audioTrack.sampleDuration) {\n      audioTrack.sampleDuration = audioTrack.codecType === AudioCodecType.AAC\n        ? AAC.getFrameDuration(audioTrack.timescale, timescale)\n        : this._getG711Duration(audioTrack)\n    }\n    const refSampleDuration = audioTrack.sampleDuration\n\n    const sampleDurationInSampleRate = audioTrack.codecType === AudioCodecType.AAC ? 1024 : refSampleDuration * audioTrack.timescale / 1000\n\n    if (this._audioNextPts === undefined) {\n      const samp0 = samples[0]\n      this._audioNextPts = samp0.pts\n    }\n\n    for (let i = 0; i < samples.length; i++) {\n      let nextPts = this._audioNextPts\n      const sample = samples[i]\n      let delta = sample.pts - nextPts\n\n      // only audio breaked\n      if (i === 0 && this._audioTimestampBreak >= TRACK_BREACKED_CHECK_TIME && this._keyFrameInNextChunk) {\n        nextPts = this._audioNextPts = sample.dts\n        delta = 0\n        this._audioTimestampBreak = 0\n      }\n\n      // fill frames\n      // delta >= 3 * refSampleDurationInt\n      // delta <= 500s\n      if (!this._audioTimestampBreak && delta >= AUDIO_GAP_OVERLAP_THRESHOLD_COUNT * refSampleDuration && delta <= MAX_SILENT_FRAME_DURATION && !isSafari) {\n        const silentFrame = this._getSilentFrame(audioTrack) || samples[0].data.subarray()\n        const count = Math.floor(delta / refSampleDuration)\n\n        if (Math.abs(sample.pts - this._lastAudioExceptionGapDot) > AUDIO_EXCETION_LOG_EMIT_DURATION) {\n          this._lastAudioExceptionGapDot = sample.pts\n          audioTrack.warnings.push({\n            type: WarningType.AUDIO_FILLED,\n            pts: sample.pts,\n            originPts: sample.originPts,\n            count,\n            nextPts,\n            refSampleDuration\n          })\n        }\n\n        for (let j = 0; j < count; j++) {\n          const silentSample = new AudioSample(Math.floor(this._audioNextPts + refSampleDuration) - Math.floor(this._audioNextPts), silentFrame, sampleDurationInSampleRate)\n          silentSample.originPts = Math.floor(this._baseDts + nextPts)\n          samples.splice(i, 0, silentSample)\n          this._audioNextPts += refSampleDuration\n          i++\n        }\n\n        i--\n        // delta  <= -3 * refSampleDurationInt\n        // delta  >= -500ms\n      } else if (delta <= -AUDIO_GAP_OVERLAP_THRESHOLD_COUNT * refSampleDuration && delta >= -1 * MAX_SILENT_FRAME_DURATION) {\n        // need discard frames\n        if (Math.abs(sample.pts - this._lastAudioExceptionOverlapDot) > AUDIO_EXCETION_LOG_EMIT_DURATION) {\n          this._lastAudioExceptionOverlapDot = sample.pts\n\n          audioTrack.warnings.push({\n            type: WarningType.AUDIO_DROPPED,\n            pts: sample.pts,\n            originPts: sample.originPts,\n            nextPts,\n            refSampleDuration\n          })\n        }\n        samples.splice(i, 1)\n        i--\n      } else {\n        if (Math.abs(delta) > MAX_SILENT_FRAME_DURATION) {\n          this._audioTimestampBreak++\n\n          if (Math.abs(sample.pts - this._lastAudioExceptionLargeGapDot) > AUDIO_EXCETION_LOG_EMIT_DURATION) {\n            this._lastAudioExceptionLargeGapDot = sample.pts\n            audioTrack.warnings.push({\n              type: WarningType.LARGE_AUDIO_GAP,\n              time: sample.pts / 1000,\n              pts: sample.pts,\n              originPts: sample.originPts,\n              nextPts,\n              sampleDuration: delta,\n              refSampleDuration\n            })\n          }\n        }\n\n        sample.dts = sample.pts = nextPts\n        sample.duration = sampleDurationInSampleRate\n        this._audioNextPts += refSampleDuration\n      }\n    }\n  }\n\n  _getG711Duration (track) {\n    const { sampleSize, channelCount, sampleRate } = track\n    const samp0 = track.samples[0]\n    if (!samp0) return\n    return samp0.data.byteLength * 2 / channelCount / (sampleSize / 8) / sampleRate * 1000\n  }\n\n  _getSilentFrame (track) {\n    if (track.codecType === AudioCodecType.AAC) return AAC.getSilentFrame(track.codec, track.channelCount)\n    return new Uint8Array(8 * track.sampleDuration * track.channelCount)\n  }\n}\n","import { UTF8 } from '../utils'\n\nexport class AMF {\n  static parse (data) {\n    if (data.length < 3) return\n\n    const ret = {}\n    const name = AMF._parseValue(new DataView(data.buffer, data.byteOffset, data.byteLength))\n    const value = AMF._parseValue(new DataView(data.buffer, data.byteOffset + name.size, data.byteLength - name.size))\n    ret[name.data] = value.data\n\n    return ret\n  }\n\n  static _parseValue (view) {\n    const dataLen = view.byteLength\n    const type = view.getUint8(0)\n    let offset = 1\n    let isEnd = false\n    let value\n\n    switch (type) {\n      case 0: // Number(Double) type\n        value = view.getFloat64(1)\n        offset += 8\n        break\n      case 1: { // Boolean type\n        value = !!view.getUint8(1)\n        offset += 1\n        break\n      }\n      case 2: { // String type\n        const { data, size } = AMF._parseString(new DataView(view.buffer, view.byteOffset + offset, view.byteLength - offset))\n        value = data\n        offset += size\n      }\n        break\n      case 3: { // Object(s) type\n        value = {}\n        let terminal = 0\n        if ((view.getUint32(dataLen - 4) & 0x00FFFFFF) === 9) {\n          terminal = 3\n        }\n        while (offset < dataLen - 4) { // 4 === type(UI8) + ScriptDataObjectEnd(UI24)\n          const { size, data, isEnd } = AMF._parseObject(new DataView(view.buffer, view.byteOffset + offset, view.byteLength - offset - terminal))\n          if (isEnd) break\n          value[data.name] = data.value\n          offset += size\n        }\n        if (offset <= dataLen - 3) {\n          const marker = view.getUint32(offset - 1) & 0x00FFFFFF\n          if (marker === 9) offset += 3\n        }\n      }\n        break\n      case 8: { // ECMA array type (Mixed array)\n        value = {}\n        offset += 4 // ECMAArrayLength(UI32)\n        let terminal = 0 // workaround for malformed MixedArrays which has missing ScriptDataObjectEnd\n        if ((view.getUint32(dataLen - 4) & 0x00FFFFFF) === 9) {\n          terminal = 3\n        }\n        while (offset < dataLen - 8) { // 8 === type(UI8) + ECMAArrayLength(UI32) + ScriptDataVariableEnd(UI24)\n          const { size, data, isEnd } = AMF._parseObject(new DataView(view.buffer, view.byteOffset + offset, view.byteLength - offset - terminal))\n          if (isEnd) break\n          value[data.name] = data.value\n          offset += size\n        }\n        if (offset <= dataLen - 3) {\n          const marker = view.getUint32(offset - 1) & 0x00FFFFFF\n          if (marker === 9) {\n            offset += 3\n          }\n        }\n      }\n        break\n      case 9: // ScriptDataObjectEnd\n        value = undefined\n        offset = 1\n        isEnd = true\n        break\n      case 10: { // Strict array type\n        value = []\n        const strictArrayLength = view.getUint32(1)\n        offset += 4\n        for (let i = 0; i < strictArrayLength; i++) {\n          const { data, size } = AMF._parseValue(new DataView(view.buffer, view.byteOffset + offset, view.byteLength - offset))\n          value.push(data)\n          offset += size\n        }\n      }\n        break\n      case 11: { // Date type\n        const timestamp = view.getFloat64(offset) + view.getInt16(offset + 8) * 60000\n        value = new Date(timestamp)\n        offset += 10\n      }\n        break\n      case 12: { // Long string type\n        const length = view.getUint32(1)\n        offset += 4\n        value = ''\n        if (length > 0) {\n          value = UTF8.decode(new Uint8Array(view.buffer, view.byteOffset + offset, length))\n        }\n        offset += length\n      }\n        break\n      default:\n        offset = dataLen\n        break\n    }\n\n    return {\n      data: value,\n      size: offset,\n      isEnd\n    }\n  }\n\n  static _parseString (view) {\n    const length = view.getUint16(0)\n    let data = ''\n    if (length > 0) {\n      data = UTF8.decode(new Uint8Array(view.buffer, view.byteOffset + 2, length))\n    }\n\n    return {\n      data,\n      size: 2 + length\n    }\n  }\n\n  static _parseObject (view) {\n    if (view.byteLength < 3) return\n\n    const name = AMF._parseString(view)\n    const value = AMF._parseValue(new DataView(view.buffer, view.byteOffset + name.size, view.byteLength - name.size))\n\n    return {\n      data: {\n        name: name.data,\n        value: value.data\n      },\n      size: name.size + value.size,\n      isEnd: value.isEnd\n    }\n  }\n}\n","import { VideoTrack, AudioTrack, MetadataTrack, AudioSample, VideoSample, VideoCodecType, AudioCodecType, FlvScriptSample, SeiSample } from '../model'\nimport { FlvFixer } from './fixer'\nimport { concatUint8Array, Logger, readBig32 } from '../utils'\nimport { AAC, AVC, HEVC, NALu } from '../codec'\nimport { AMF } from './amf'\n\nconst logger = new Logger('FlvDemuxer')\n\n/**\n * @typedef {Object} DemuxResult\n * @property {VideoTrack} videoTrack\n * @property {AudioTrack} audioTrack\n * @property {MetadataTrack} metadataTrack\n */\n\nexport class FlvDemuxer {\n  _headerParsed = false\n  _remainingData = null\n  _gopId = 0\n  _needAddMetaBeforeKeyFrameNal = true // 标识H265流中关键帧Nal之前是否需要插入vps、sps、pps Nal\n\n  static AUDIO_RATE = [5500, 11000, 22000, 44000]\n\n  /**\n   * @param {VideoTrack} [videoTrack]\n   * @param {AudioTrack} [audioTrack]\n   * @param {MetadataTrack} [metadataTrack]\n   */\n  constructor (videoTrack, audioTrack, metadataTrack) {\n    this.videoTrack = videoTrack || new VideoTrack()\n    this.audioTrack = audioTrack || new AudioTrack()\n    this.metadataTrack = metadataTrack || new MetadataTrack()\n    this._fixer = new FlvFixer(this.videoTrack, this.audioTrack, this.metadataTrack)\n  }\n\n  /**\n   * @param {Uint8Array} data\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   * @returns {DemuxResult}\n   */\n  demux (data, discontinuity = false, contiguous = true) {\n    const { audioTrack, videoTrack, metadataTrack } = this\n\n    if (discontinuity || !contiguous) {\n      this._remainingData = null\n      this._headerParsed = false\n    }\n\n    if (discontinuity) {\n      videoTrack.reset()\n      audioTrack.reset()\n      metadataTrack.reset()\n    } else {\n      videoTrack.samples = []\n      audioTrack.samples = []\n      metadataTrack.seiSamples = []\n      metadataTrack.flvScriptSamples = []\n      videoTrack.warnings = []\n      audioTrack.warnings = []\n\n      if (this._remainingData) {\n        data = concatUint8Array(this._remainingData, data)\n        this._remainingData = null\n      }\n    }\n\n    if (!data.length) {\n      return {\n        videoTrack,\n        audioTrack,\n        metadataTrack\n      }\n    }\n\n    let offset = 0\n    if (!this._headerParsed) {\n      if (!FlvDemuxer.probe(data)) {\n        throw new Error('Invalid flv file')\n      }\n      audioTrack.present = ((data[4] & 4) >>> 2) !== 0\n      videoTrack.present = (data[4] & 1) !== 0\n      this._headerParsed = true\n      offset = readBig32(data, 5) + 4 // skip prev tag size\n    }\n\n    const dataLen = data.length\n\n    let tagType\n    let dataSize\n    let timestamp\n    let bodyData\n    let prevTagSize\n    while ((offset + 15) < dataLen) { // header and prev tag size\n      tagType = data[offset]\n      dataSize = (data[offset + 1] << 16) | (data[offset + 2] << 8) | data[offset + 3]\n      if (offset + 15 + dataSize > dataLen) break\n      timestamp = (\n        (data[offset + 7] << 24 >>> 0) +\n        (data[offset + 4] << 16) +\n        (data[offset + 5] << 8) +\n        data[offset + 6]\n      )\n\n      offset += 11\n      bodyData = data.subarray(offset, offset + dataSize)\n      if (tagType === 8) {\n        this._parseAudio(bodyData, timestamp)\n      } else if (tagType === 9) {\n        this._parseVideo(bodyData, timestamp)\n      } else if (tagType === 18) {\n        this._parseScript(bodyData, timestamp)\n      } else {\n        logger.warn(`Invalid tag type: ${tagType}`)\n      }\n\n      offset += dataSize\n      prevTagSize = readBig32(data, offset)\n      if (prevTagSize !== 11 + dataSize) {\n        logger.warn(`Invalid PrevTagSize ${prevTagSize} (${11 + dataSize})`)\n      }\n\n      offset += 4\n    }\n\n    if (offset < dataLen) {\n      this._remainingData = data.subarray(offset)\n    }\n\n    audioTrack.formatTimescale = videoTrack.formatTimescale = videoTrack.timescale = metadataTrack.timescale = 1000\n    audioTrack.timescale = audioTrack.sampleRate || 0\n\n    if (!audioTrack.exist() && audioTrack.hasSample()) {\n      audioTrack.reset()\n    }\n    if (!videoTrack.exist() && videoTrack.hasSample()) {\n      videoTrack.reset()\n    }\n\n    return {\n      videoTrack,\n      audioTrack,\n      metadataTrack\n    }\n  }\n\n  /**\n   * @param {number} [startTime=0]\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   * @returns {DemuxResult}\n   */\n  fix (startTime, discontinuity, contiguous) {\n    this._fixer.fix(startTime, discontinuity, contiguous)\n    return {\n      videoTrack: this.videoTrack,\n      audioTrack: this.audioTrack,\n      metadataTrack: this.metadataTrack\n    }\n  }\n\n  /**\n   * @param {Uint8Array} data\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   * @param {number} [startTime=0]\n   * @returns {DemuxResult}\n   */\n  demuxAndFix (data, discontinuity, contiguous, startTime) {\n    this.demux(data, discontinuity, contiguous)\n    return this.fix(startTime, discontinuity, contiguous)\n  }\n\n  /**\n   * @param { Uint8Array } data\n   * @returns {boolean}\n   */\n  static probe (data) {\n    if (data[0] !== 0x46 || data[1] !== 0x4C || data[2] !== 0x56 || data[3] !== 0x01) {\n      return false\n    }\n    return readBig32(data, 5) >= 9\n  }\n\n  _parseAudio (data, pts) {\n    if (!data.length) return\n\n    const format = (data[0] & 0xf0) >>> 4\n    const track = this.audioTrack\n\n    if (\n      format !== 10 && // AAC\n      format !== 7 && // G.711 A-law logarithmic PCM\n      format !== 8 // G.711 mu-law logarithmic PCM\n    ) {\n      logger.warn(`Unsupported sound format: ${format}`)\n      track.reset()\n      return\n    }\n\n    if (format !== 10) {\n      const soundRate = (data[0] & 0x0c) >> 2\n      const soundSize = (data[0] & 0x02) >> 1\n      const soundType = (data[0] & 0x01)\n      track.sampleRate = FlvDemuxer.AUDIO_RATE[soundRate]\n      track.sampleSize = soundSize ? 16 : 8\n      track.channelCount = soundType + 1\n    }\n\n    if (format === 10) {\n      this._parseAac(data, pts)\n    } else {\n      this._parseG711(data, pts, format)\n    }\n  }\n\n  _parseG711 (data, pts, format) {\n    const track = this.audioTrack\n    track.codecType = format === 7 ? AudioCodecType.G711PCMA : AudioCodecType.G711PCMU\n    track.sampleRate = 8000\n    track.codec = track.codecType\n    track.samples.push(new AudioSample(pts, data.subarray(1)))\n  }\n\n  _parseAac (data, pts) {\n    const track = this.audioTrack\n    track.codecType = AudioCodecType.AAC\n\n    if (data[1] === 0) { // AACPacketType\n      const ret = AAC.parseAudioSpecificConfig(data.subarray(2))\n      if (ret) {\n        track.codec = ret.codec\n        track.channelCount = ret.channelCount\n        track.sampleRate = ret.sampleRate\n        track.config = ret.config\n        track.objectType = ret.objectType\n        track.sampleRateIndex = ret.samplingFrequencyIndex\n      } else {\n        track.reset()\n        logger.warn('Cannot parse AudioSpecificConfig', data)\n      }\n    } else if (data[1] === 1) { // Raw AAC frame data\n      if (pts === undefined || pts === null) return\n      track.samples.push(new AudioSample(pts, data.subarray(2)))\n    } else {\n      logger.warn(`Unknown AACPacketType: ${data[1]}`)\n    }\n  }\n\n  _parseVideo (data, dts) {\n    if (data.length < 6) return\n\n    const frameType = (data[0] & 0xf0) >>> 4\n    const codecId = data[0] & 0x0f\n\n    const track = this.videoTrack\n\n    if (\n      codecId !== 7 && // AVC\n      codecId !== 12 // HEVC\n    ) {\n      track.reset()\n      logger.warn(`Unsupported codecId: ${codecId}`)\n      return\n    }\n\n    const isHevc = codecId === 12\n    track.codecType = isHevc ? VideoCodecType.HEVC : VideoCodecType.AVC\n\n    const packetType = data[1]\n    const cts = (((data[2] << 16) | (data[3] << 8) | (data[4])) << 8) >> 8\n\n    if (packetType === 0) { // DecoderConfigurationRecord\n      const configData = data.subarray(5)\n      const ret = isHevc\n        ? HEVC.parseHEVCDecoderConfigurationRecord(configData)\n        : AVC.parseAVCDecoderConfigurationRecord(configData)\n      if (ret) {\n        const { hvcC, sps, ppsArr, spsArr, vpsArr, nalUnitSize } = ret\n        if (hvcC) {\n          track.hvcC = track.hvcC || hvcC\n        }\n        if (sps) {\n          track.codec = sps.codec\n          track.width = sps.width\n          track.height = sps.height\n          track.sarRatio = sps.sarRatio\n          track.fpsNum = sps.fpsNum\n          track.fpsDen = sps.fpsDen\n        }\n        if (spsArr.length) track.sps = spsArr\n        if (ppsArr.length) track.pps = ppsArr\n        if (vpsArr && vpsArr.length) track.vps = vpsArr\n        if (nalUnitSize) track.nalUnitSize = nalUnitSize\n      } else {\n        logger.warn(`Cannot parse ${isHevc ? 'HEVC' : 'AVC'}DecoderConfigurationRecord`, data)\n      }\n    } else if (packetType === 1) { // One or more NALUs\n      let units = NALu.parseAvcC(data.subarray(5), track.nalUnitSize)\n\n      units = this._checkAddMetaNalToUnits(isHevc, units, track)\n\n      if (units && units.length) {\n        const sample = new VideoSample(dts + cts, dts, units)\n        if (frameType === 1) {\n          sample.setToKeyframe()\n        }\n        track.samples.push(sample)\n\n        units.forEach(unit => {\n          const type = isHevc ? (unit[0] >>> 1) & 0x3f : unit[0] & 0x1f\n          switch (type) {\n            case 5: // IDR\n            case 16: // HEVC BLA_W_LP\n            case 17: // HEVC BLA_W_RADL\n            case 18: // HEVC BLA_N_LP\n            case 19: // HEVC IDR_W_RADL\n            case 20: // HEVC IDR_N_LP\n            case 21: // HEVC CRA_NUT\n            case 22: // HEVC RSV_IRAP_VCL22\n            case 23: // HEVC RSV_IRAP_VCL23\n              if ((!isHevc && type !== 5) || (isHevc && type === 5)) break\n              sample.setToKeyframe()\n              break\n            case 6: // SEI\n            case 39: // HEVC PREFIX_SEI\n            case 40: // HEVC SUFFIX_SEI\n              if ((!isHevc && type !== 6) || (isHevc && type === 6)) break\n              this.metadataTrack.seiSamples.push(new SeiSample(\n                NALu.parseSEI(NALu.removeEPB(unit), isHevc),\n                dts + cts\n              ))\n              break\n            default:\n          }\n        })\n\n        if (sample.keyframe) {\n          this._gopId++\n        }\n        sample.gopId = this._gopId\n      } else {\n        logger.warn('Cannot parse NALUs', data)\n      }\n    } else if (packetType === 2) {\n      // AVC end of sequence, Empty\n    } else {\n      logger.warn(`Unknown AVCPacketType: ${packetType}`)\n    }\n  }\n\n  _checkAddMetaNalToUnits (hevc, units, track) {\n    if (!hevc || !this._needAddMetaBeforeKeyFrameNal) {\n      this._needAddMetaBeforeKeyFrameNal = false\n      return units\n    }\n\n    const nalTypes = units.map(x => (x[0] >>> 1) & 0x3f)\n\n    if (nalTypes.includes(32)) {\n      this._needAddMetaBeforeKeyFrameNal = false\n      return units\n    }\n\n    units.unshift(track.pps[0])\n    units.unshift(track.sps[0])\n    units.unshift(track.vps[0])\n\n    return units.filter(Boolean)\n  }\n\n  _parseScript (data, pts) {\n    this.metadataTrack.flvScriptSamples.push(new FlvScriptSample(AMF.parse(data), pts))\n  }\n}\n","\n// 改造为兼容IE11\nfunction Concat (ResultConstructor, ...arrays){\n  let totalLength = 0\n  arrays.forEach(function (arr){\n    totalLength += arr.length\n  })\n  const result = new ResultConstructor(totalLength)\n  let offset = 0\n  arrays.forEach(function (arr){\n    result.set(arr, offset)\n    offset += arr.length\n  })\n  return result\n}\n\nclass Buffer {\n  constructor () {\n    this.buffer = new Uint8Array(0)\n  }\n\n  write (...buffer) {\n    const self = this\n    buffer.forEach(item => {\n      if (item) {\n        self.buffer = Concat(Uint8Array, self.buffer, item)\n      } else {\n        window.console.warn(item)\n      }\n    })\n  }\n\n  static writeUint16 (value) {\n    return new Uint8Array([\n      (value >> 8) & 0xff,\n      value & 0xff\n    ])\n  }\n\n  static writeUint32 (value) {\n    return new Uint8Array([\n      value >> 24,\n      (value >> 16) & 0xff,\n      (value >> 8) & 0xff,\n      value & 0xff\n    ])\n  }\n}\n\nexport default Buffer\n","import { TsFixer } from './fixer'\nimport { AVC, AAC, HEVC, NALu } from '../codec'\nimport { VideoSample, AudioSample, VideoCodecType, VideoTrack, AudioTrack, MetadataTrack, SeiSample } from '../model'\nimport { Logger, concatUint8Array } from '../utils'\n\nconst logger = new Logger('TsDemuxer')\n\nexport class TsDemuxer {\n  _pmtId = -1\n  _remainingPacketData = null\n  _videoPesData = []\n  _audioPesData = []\n  _gopId = 0\n\n  /**\n   * @param {VideoTrack} [videoTrack]\n   * @param {AudioTrack} [audioTrack]\n   * @param {MetadataTrack} [metadataTrack]\n   */\n  constructor (videoTrack, audioTrack, metadataTrack) {\n    this.videoTrack = videoTrack || new VideoTrack()\n    this.audioTrack = audioTrack || new AudioTrack()\n    this.metadataTrack = metadataTrack || new MetadataTrack()\n    this._fixer = new TsFixer(this.videoTrack, this.audioTrack, this.metadataTrack)\n  }\n\n  /**\n   * @param {Uint8Array} data\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   * @returns {import('../flv').DemuxResult}\n   */\n  demux (data, discontinuity = false, contiguous = true) {\n    const { audioTrack, videoTrack, metadataTrack } = this\n\n    if (discontinuity) {\n      this._pmtId = -1\n      videoTrack.reset()\n      audioTrack.reset()\n      metadataTrack.reset()\n    }\n\n    if (!contiguous || discontinuity) {\n      this._remainingPacketData = null\n      this._videoPesData = []\n      this._audioPesData = []\n    } else {\n      videoTrack.samples = []\n      audioTrack.samples = []\n      metadataTrack.seiSamples = []\n      videoTrack.warnings = []\n      audioTrack.warnings = []\n\n      if (this._remainingPacketData) {\n        data = concatUint8Array(this._remainingPacketData, data)\n        this._remainingPacketData = null\n      }\n    }\n\n    let dataLen = data.length\n    const remainingLength = dataLen % 188\n    if (remainingLength) {\n      this._remainingPacketData = data.subarray(dataLen - remainingLength)\n      dataLen -= remainingLength\n    }\n\n    let videoPid = videoTrack.pid\n    let audioPid = audioTrack.pid\n\n    for (let start = 0; start < dataLen; start += 188) {\n      if (data[start] !== 0x47) throw new Error('TS packet did not start with 0x47')\n      const payloadUnitStartIndicator = !!(data[start + 1] & 0x40)\n      const pid = ((data[start + 1] & 0x1f) << 8) + data[start + 2]\n      const adaptationFiledControl = (data[start + 3] & 0x30) >> 4\n\n      let offset\n      if (adaptationFiledControl > 1) {\n        offset = start + 5 + data[start + 4]\n        if (offset === start + 188) continue\n      } else {\n        offset = start + 4\n      }\n\n      switch (pid) {\n        case 0: // PAT\n          if (payloadUnitStartIndicator) offset += data[offset] + 1\n          this._pmtId = ((data[offset + 10] & 0x1f) << 8) | data[offset + 11]\n          break\n        case this._pmtId: {\n          if (payloadUnitStartIndicator) offset += data[offset] + 1\n          const tableEnd = offset + 3 + (((data[offset + 1] & 0x0f) << 8) | data[offset + 2]) - 4\n          const programInfoLength = ((data[offset + 10] & 0x0f) << 8) | data[offset + 11]\n          offset += 12 + programInfoLength\n\n          while (offset < tableEnd) {\n            const esPid = ((data[offset + 1] & 0x1f) << 8) | data[offset + 2]\n            switch (data[offset]) {\n              case 0x0f: // AAC ADTS\n                audioTrack.pid = audioPid = esPid\n                break\n              case 0x1b: // AVC\n                if (videoPid !== -1) break\n                videoTrack.codecType = VideoCodecType.AVC\n                videoTrack.pid = videoPid = esPid\n                break\n              case 0x24: // HEVC\n                if (videoPid !== -1) break\n                videoTrack.codecType = VideoCodecType.HEVC\n                videoTrack.pid = videoPid = esPid\n                break\n              default:\n                logger.warn(`Unsupported stream. type: ${data[offset]}, pid: ${esPid}`)\n            }\n\n            offset += (((data[offset + 3] & 0x0f) << 8) | data[offset + 4]) + 5\n          }\n        }\n          break\n        case videoPid:\n          if (payloadUnitStartIndicator && this._videoPesData.length) {\n            this._parseVideoData()\n          }\n          this._videoPesData.push(data.subarray(offset, start + 188))\n          break\n        case audioPid:\n          if (payloadUnitStartIndicator && this._audioPesData.length) {\n            this._parseAudioData()\n          }\n          this._audioPesData.push(data.subarray(offset, start + 188))\n          break\n        case 17:\n        case 0x1fff:\n          break\n        default:\n          logger.warn(`Unknown pid: ${pid}`)\n      }\n    }\n\n    this._parseVideoData()\n    this._parseAudioData()\n\n    audioTrack.formatTimescale = videoTrack.formatTimescale = videoTrack.timescale = metadataTrack.timescale = 90000\n\n    audioTrack.timescale = audioTrack.sampleRate || 0\n\n    return {\n      videoTrack,\n      audioTrack,\n      metadataTrack\n    }\n  }\n\n  /**\n   * @param {number} [startTime=0]\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   */\n  fix (startTime, discontinuity, contiguous) {\n    this._fixer.fix(startTime, discontinuity, contiguous)\n    return {\n      videoTrack: this.videoTrack,\n      audioTrack: this.audioTrack,\n      metadataTrack: this.metadataTrack\n    }\n  }\n\n  /**\n   * @param {Uint8Array} data\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   * @param {number} [startTime=0]\n   */\n  demuxAndFix (data, discontinuity, contiguous, startTime) {\n    this.demux(data, discontinuity, contiguous)\n    return this.fix(startTime, discontinuity, contiguous)\n  }\n\n  /**\n   * @param { Uint8Array } data\n   * @returns {boolean}\n   */\n  static probe (data) {\n    if (!data.length) return false\n    return data[0] === 0x47 && data[188] === 0x47 && data[376] === 0x47\n  }\n\n  _parseVideoData () {\n    if (!this._videoPesData.length) return\n    const pes = TsDemuxer._parsePES(concatUint8Array(...this._videoPesData))\n    if (!pes) {\n      logger.warn('Cannot parse video pes', this._videoPesData)\n      return\n    }\n\n    const units = NALu.parseAnnexB(pes.data)\n    if (units) {\n      this._createVideoSample(units, pes.pts, pes.dts)\n    } else {\n      logger.warn('Cannot parse avc units', pes)\n    }\n\n    this._videoPesData = []\n  }\n\n  _createVideoSample (units, pts, dts) {\n    if (!units.length) return\n    const track = this.videoTrack\n    const isHevc = track.codecType === VideoCodecType.HEVC\n\n    const sample = new VideoSample(pts, dts)\n    units.forEach((unit) => {\n      const type = isHevc ? (unit[0] >>> 1) & 0x3f : unit[0] & 0x1f\n      switch (type) {\n        case 5: // IDR\n        case 16: // HEVC BLA_W_LP\n        case 17: // HEVC BLA_W_RADL\n        case 18: // HEVC BLA_N_LP\n        case 19: // HEVC IDR_W_RADL\n        case 20: // HEVC IDR_N_LP\n        case 21: // HEVC CRA_NUT\n        case 22: // HEVC RSV_IRAP_VCL22\n        case 23: // HEVC RSV_IRAP_VCL23\n          if ((!isHevc && type !== 5) || (isHevc && type === 5)) break\n          sample.setToKeyframe()\n          this._gopId++\n          break\n        case 6: // SEI\n        case 39: // HEVC PREFIX_SEI\n        case 40: // HEVC SUFFIX_SEI\n          if ((!isHevc && type !== 6) || (isHevc && type === 6)) break\n          this.metadataTrack.seiSamples.push(new SeiSample(\n            NALu.parseSEI(NALu.removeEPB(unit), isHevc),\n            pts\n          ))\n          // fix 分割nal之前只要sei信息被当做单独一个sample\n          return\n        case 32: // HEVC VPS\n          if (!isHevc) break\n          if (!track.vps.length) {\n            const hvcC = HEVC.parseVPS(NALu.removeEPB(unit), track.hvcC)\n            track.hvcC = track.hvcC || hvcC\n            track.vps = [unit]\n          }\n          break\n        case 7: // SPS\n        case 33: // HEVC SPS\n          if ((!isHevc && type !== 7) || (isHevc && type === 7)) break\n          if (!track.sps.length) {\n            const data = NALu.removeEPB(unit)\n            const spsInfo = isHevc ? HEVC.parseSPS(data, track.hvcC) : AVC.parseSPS(data)\n            track.sps = [unit]\n            track.hvcC = track.hvcC || spsInfo.hvcC\n            track.codec = spsInfo.codec\n            track.width = spsInfo.width\n            track.height = spsInfo.height\n            track.sarRatio = spsInfo.sarRatio\n            track.fpsNum = spsInfo.fpsNum\n            track.fpsDen = spsInfo.fpsDen\n          }\n          break\n        case 8: // PPS\n        case 34: // HEVC PPS\n          if ((!isHevc && type !== 8) || (isHevc && type === 8)) break\n          if (!track.pps.length) track.pps = [unit]\n          break\n        case 9: // AUD\n        case 35: // HEVC AUD\n          // if ((!isHevc && type !== 9) || (isHevc && type === 9)) break\n          // sample.gopId = this._gopId\n          // if (sample.units.length && !keyFrame) {\n          //   this._pushVideoSample(track, sample)\n          //   sample = this.prevAvcSample = new VideoSample(pts, dts)\n          // }\n          break\n        default:\n      }\n      sample.units.push(unit)\n    })\n    sample.gopId = this._gopId\n    this._pushVideoSample(track, sample)\n  }\n\n  _pushVideoSample (track, sample) {\n    if (sample.units.length) {\n      if (sample.pts === null || sample.pts === undefined) {\n        logger.warn('Video sample no pts', sample)\n        const lastSample = track.samples[track.samples.length - 1]\n        if (lastSample) {\n          sample.pts = lastSample.pts\n          sample.dts = lastSample.dts\n        } else {\n          logger.warn('Drop video sample', sample)\n        }\n      } else {\n        track.samples.push(sample)\n      }\n    }\n  }\n\n  _parseAudioData () {\n    if (!this._audioPesData.length) return\n    const pes = TsDemuxer._parsePES(concatUint8Array(...this._audioPesData))\n    if (!pes) {\n      logger.warn('Cannot parse audio pes', this._audioPesData)\n      return\n    }\n\n    this._parseAacData(pes)\n\n    this._audioPesData = []\n  }\n\n  _parseAacData (pes) {\n    const track = this.audioTrack\n    let pts = pes.pts\n    if (pts === null || pts === undefined) {\n      logger.warn('AAC pes not pts', track)\n      if (!track.samples.length || !track.sampleRate) {\n        return\n      }\n      pts = track.samples[track.samples.length - 1].pts + AAC.getFrameDuration(track.sampleRate)\n    }\n\n    const ret = AAC.parseADTS(pes.data, pts)\n    if (ret) {\n      track.codec = ret.codec\n      track.channelCount = ret.channelCount\n      track.sampleRate = ret.sampleRate\n      track.objectType = ret.objectType\n      track.sampleRateIndex = ret.samplingFrequencyIndex\n      track.config = ret.config\n      track.samples.push(...ret.frames.map((s) => new AudioSample(s.pts, s.data)))\n\n      if (ret.skip) {\n        logger.warn(`Skip aac adts ${ret.skip} bits`)\n      }\n      if (ret.remaining) {\n        logger.warn(`Remaining aac adts ${ret.remaining} bits`)\n      }\n    } else {\n      logger.warn('Cannot parse aac adts', pes)\n    }\n  }\n\n  static _parsePES (data) {\n    const headerDataLen = data[8]\n    if (headerDataLen === null || headerDataLen === undefined || data.length < (headerDataLen + 9)) return\n    const startPrefix = data[0] << 16 | data[1] << 8 | data[2]\n    if (startPrefix !== 1) return\n    const pesLen = (data[4] << 8) + data[5]\n    if (pesLen && pesLen > data.length - 6) return\n\n    let pts\n    let dts\n    const ptsDtsFlags = data[7]\n    if (ptsDtsFlags & 0xc0) {\n      pts = (data[9] & 0x0e) * 536870912 +\n        (data[10] & 0xff) * 4194304 +\n        (data[11] & 0xfe) * 16384 +\n        (data[12] & 0xff) * 128 +\n        (data[13] & 0xfe) / 2\n\n      if (ptsDtsFlags & 0x40) {\n        dts = (data[14] & 0x0e) * 536870912 +\n          (data[15] & 0xff) * 4194304 +\n          (data[16] & 0xfe) * 16384 +\n          (data[17] & 0xff) * 128 +\n          (data[18] & 0xfe) / 2\n        if (pts - dts > 60 * 90000) pts = dts\n      } else {\n        dts = pts\n      }\n    }\n\n    return { data: data.subarray(9 + headerDataLen), pts, dts }\n  }\n}\n","import { TrackType, VideoCodecType } from '../model'\nimport { concatUint8Array, parse /* hashVal */ } from '../utils'\nimport Buffer from './buffer'\n// import Crypto from './crypto/crypto'\nconst UINT32_MAX = 2 ** 32 - 1\n\nexport class MP4 {\n  static types = [\n    'avc1',\n    'avcC',\n    'hvc1',\n    'hvcC',\n    'dinf',\n    'dref',\n    'esds',\n    'ftyp',\n    'hdlr',\n    'mdat',\n    'mdhd',\n    'mdia',\n    'mfhd',\n    'minf',\n    'moof',\n    'moov',\n    'mp4a',\n    'mvex',\n    'mvhd',\n    'pasp',\n    'stbl',\n    'stco',\n    'stsc',\n    'stsd',\n    'stsz',\n    'stts',\n    'tfdt',\n    'tfhd',\n    'traf',\n    'trak',\n    'trex',\n    'tkhd',\n    'vmhd',\n    'smhd',\n    'ctts',\n    'stss',\n    'styp',\n    'pssh',\n    'sidx',\n    'sbgp',\n    'saiz',\n    'saio',\n    'senc',\n    'trun',\n    'encv',\n    'enca',\n    'sinf',\n    'btrt',\n    'frma',\n    'tenc',\n    'schm',\n    'schi',\n    'mehd',\n    'fiel',\n    'sdtp'\n  ].reduce((p, c) => {\n    p[c] = [c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2), c.charCodeAt(3)]\n    return p\n  }, Object.create(null));\n\n  static HDLR_TYPES = {\n    video: new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61,\n      0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n    ]),\n    audio: new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61,\n      0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n    ])\n  }\n\n  static FTYPAVC1 = MP4.box(MP4.types.ftyp, new Uint8Array([\n    105, 115, 111, 109, // isom\n    0, 0, 0, 1,\n    105, 115, 111, 109,\n    97, 118, 99, 49 // avc1\n  ]))\n\n  static FTYPHEV1 = MP4.box(MP4.types.ftyp, new Uint8Array([\n    105, 115, 111, 109, // isom\n    0, 0, 0, 1,\n    105, 115, 111, 109,\n    104, 101, 118, 49 // hev1\n  ]))\n\n  static DINF = MP4.box(MP4.types.dinf, MP4.box(MP4.types.dref, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x01, // entry_count\n    0x00, 0x00, 0x00, 0x0c, // entry_size\n    0x75, 0x72, 0x6c, 0x20, // 'url' type\n    0x00, // version\n    0x00, 0x00, 0x01 // entry_flags\n  ])))\n\n  static VMHD = MP4.box(MP4.types.vmhd, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x01, // flags\n    0x00, 0x00, // graphics mode\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // op color\n  ]))\n\n  static SMHD = MP4.box(MP4.types.smhd, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, // balance\n    0x00, 0x00 // reserved\n  ]))\n\n  static StblTable = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00 // entry_count\n  ])\n\n  static STTS = MP4.box(MP4.types.stts, MP4.StblTable)\n\n  static STSC = MP4.box(MP4.types.stsc, MP4.StblTable)\n\n  static STSZ = MP4.box(MP4.types.stsz, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // sample_size\n    0x00, 0x00, 0x00, 0x00 // sample_count\n  ]))\n\n  static STCO = MP4.box(MP4.types.stco, MP4.StblTable)\n\n  static box (type, ...payload) {\n    payload = payload.filter(Boolean)\n    const size = 8 + payload.reduce((p, c) => (p + c.byteLength), 0)\n    const ret = new Uint8Array(size)\n    ret[0] = (size >> 24) & 0xff\n    ret[1] = (size >> 16) & 0xff\n    ret[2] = (size >> 8) & 0xff\n    ret[3] = size & 0xff\n    ret.set(type, 4)\n    let offset = 8\n    payload.forEach((data) => {\n      ret.set(data, offset)\n      offset += data.byteLength\n    })\n    return ret\n  }\n\n  static ftyp (tracks) {\n    const isHevc = tracks.find(t => t.type === TrackType.VIDEO && t.codecType === VideoCodecType.HEVC)\n    return isHevc ? MP4.FTYPHEV1 : MP4.FTYPAVC1\n  }\n\n  static initSegment (tracks) {\n    const ftyp = MP4.ftyp(tracks)\n    // console.log('[remux],ftyp ,len ', ftyp.byteLength, hashVal(ftyp.toString()))\n    const init = concatUint8Array(ftyp, MP4.moov(tracks))\n    // console.log('[remux],init ,len ', init.byteLength, hashVal(init.toString()))\n    return init\n  }\n\n  static pssh (data) {\n    // const buffer = new Buffer()\n    const content = new Uint8Array(\n      [\n        0x01, 0x00, 0x00, 0x00 // version\n      ].concat(\n        [\n          0x10, 0x77, 0xef, 0xec,\n          0xc0, 0xb2, 0x4d, 0x02,\n          0xac, 0xe3, 0x3c, 0x1e,\n          0x52, 0xe2, 0xfb, 0x4b\n        ],\n        [0x00, 0x00, 0x00, 0x01],\n        parse(data.kid),\n        [0x00, 0x00, 0x00, 0x00]\n      )\n    )\n    return MP4.box(MP4.types.pssh, content)\n  }\n\n  static moov (tracks) {\n    if (tracks[0].useEME && (tracks[0].encv || tracks[0].enca)) {\n      if (!tracks[0].pssh) {\n        tracks[0].pssh = {\n          kid: tracks[0].kid\n        }\n      }\n      const pssh = this.pssh(tracks[0].pssh)\n      // console.log('[remux],pssh,', hashVal(pssh.toString()))\n      return MP4.box(MP4.types.moov,\n        MP4.mvhd(tracks[0].mvhdDurtion || tracks[0].duration, tracks[0].mvhdTimecale || tracks[0].timescale),\n        MP4.mvex(tracks),\n        ...tracks.map((t) => MP4.trak(t)),\n        pssh)\n    } else {\n      return MP4.box(MP4.types.moov,\n        MP4.mvhd(tracks[0].mvhdDurtion || tracks[0].duration, tracks[0].mvhdTimecale || tracks[0].timescale),\n        ...tracks.map((t) => MP4.trak(t)),\n        MP4.mvex(tracks)\n      )\n    }\n  }\n\n  static mvhd (duration, timescale = 90000) {\n    const mvhd = MP4.box(MP4.types.mvhd, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (timescale >> 24) & 0xff, (timescale >> 16) & 0xff, (timescale >> 8) & 0xff, timescale & 0xff,\n      (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff,\n      0x00, 0x01, 0x00, 0x00, // rate\n      0x01, 0x00, // volume\n      0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // matrix\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // todo 0xff, 0xff, 0xff, 0xff // next_track_ID\n    ]))\n    // console.log('[remux],mvhd, len,', mvhd.byteLength, hashVal(mvhd.toString()))\n    return mvhd\n  }\n\n  static trak (track) {\n    const trak = MP4.box(\n      MP4.types.trak,\n      MP4.tkhd(track.id, track.tkhdDuration || 0, track.width, track.height),\n      MP4.mdia(track)\n    )\n    // console.log('[remux],trak, len,', trak.byteLength, track.id, hashVal(trak.toString()))\n    return trak\n  }\n\n  static tkhd (id, duration, width = 0, height = 0) {\n    const tkhd = MP4.box(MP4.types.tkhd, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x07, // flags、todo 0x07\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time todo\n      (id >> 24) & 0xff, (id >> 16) & 0xff, (id >> 8) & 0xff, id & 0xff,\n      0x00, 0x00, 0x00, 0x00,\n      (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff, // todo (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff,\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // /*0x00*/ alternate_group  //todo type === 'video' ? 0x01 : 0x00（第二个位置）\n      0x01, 0x00, // /* 0x01 */, 0x00, // non-audio track volume  //todo type === 'audio' ? 0x01 : 0x00（第一个位置）\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // matrix\n      (width >> 8) & 0xff, width & 0xff, 0x00, 0x00,\n      (height >> 8) & 0xff, height & 0xff, 0x00, 0x00\n    ]))\n    // console.log('[remux],tkhd, len,', tkhd.byteLength, hashVal(tkhd.toString()))\n    return tkhd\n  }\n\n  static mdia (track) {\n    const mdia = MP4.box(MP4.types.mdia, MP4.mdhd(track.duration, track.timescale), MP4.hdlr(track.type), MP4.minf(track))\n    // console.log('[remux],mdia, len,', mdia.byteLength, hashVal(mdia.toString()))\n    return mdia\n  }\n\n  static mdhd (duration, timescale = 90000) {\n    const mdhd = MP4.box(MP4.types.mdhd, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // todo 0x00, 0x00, 0x00, 0x00, // modification_time\n      (timescale >> 24) & 0xff, (timescale >> 16) & 0xff, (timescale >> 8) & 0xff, timescale & 0xff,\n      (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff, // (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff,//todo\n      0x55, 0xc4, // 'und' language (undetermined) //todo 0x15, 0xC7\n      0x00, 0x00 // pre_defined\n    ]))\n    // console.log('[remux],mdhd, len,', mdhd.byteLength, hashVal(mdhd.toString()))\n    return mdhd\n  }\n\n  static hdlr (type) {\n    const hdlr = MP4.box(MP4.types.hdlr, MP4.HDLR_TYPES[type])\n    // console.log('[remux],hdlr, len,', hdlr.byteLength, hashVal(hdlr.toString()))\n    return hdlr\n  }\n\n  static minf (track) {\n    const minf = MP4.box(MP4.types.minf, track.type === TrackType.VIDEO ? MP4.VMHD : MP4.SMHD, MP4.DINF, MP4.stbl(track))\n    // console.log('[remux],minf, len,', minf.byteLength, hashVal(minf.toString()))\n    return minf\n  }\n\n  static stbl (track) {\n    const extBox = []\n    if (track && track.ext) {\n      track.ext.stss && extBox.push(MP4.stss(track.ext.stss.entries))\n      // track.ext.stss && extBox.push(MP4.ctts(track.ext.stss.entries))\n    }\n    const stbl = MP4.box(MP4.types.stbl, MP4.stsd(track), MP4.STTS, extBox[0], MP4.STSC, MP4.STSZ, MP4.STCO)\n    // console.log('[remux],stbl, len,', stbl.byteLength, hashVal(stbl.toString()))\n    return stbl\n  }\n\n  static stsd (track) {\n    let content\n    if (track.type === 'audio') {\n      if (track.useEME && track.enca) {\n        content = MP4.enca(track)\n        // console.log('[remux],enca, len,', content.byteLength, track.type, hashVal(content.toString()))\n      } else {\n        content = MP4.mp4a(track)\n        // console.log('[remux],mp4a, len,', content.byteLength, track.type, hashVal(content.toString()))\n      }\n    } else if (track.useEME && track.encv) {\n      content = MP4.encv(track)\n      // console.log('[remux],encv, len,', content.byteLength, track.type, hashVal(content.toString()))\n    } else {\n      content = MP4.avc1hev1(track)\n      // console.log('[remux],avc1hev1, len,', content.byteLength, track.type, hashVal(content.toString()))\n    }\n    const stsd = MP4.box(MP4.types.stsd, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01 // entry_count\n    ]), content)\n    // console.log('[remux],stsd, len,', stsd.byteLength, hashVal(stsd.toString()))\n    return stsd\n  }\n\n  static enca (data) {\n    const channelCount = data.enca.channelCount\n    const sampleRate = data.enca.sampleRate\n    const content = new Uint8Array([\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, channelCount, // channelcount\n      0x00, 0x10, // sampleSize:16bits\n      0x00, 0x00, 0x00, 0x00, // reserved2\n      (sampleRate >> 8) & 0xff,\n      sampleRate & 0xff, //\n      0x00, 0x00\n    ])\n    const esds = MP4.esds(data.config)\n    // console.log('[remux],esds, len,', esds.byteLength, hashVal(esds.toString()))\n    const sinf = MP4.sinf(data.enca)\n    // console.log('[remux],sinf, len,', sinf.byteLength, hashVal(sinf.toString()))\n    return MP4.box(MP4.types.enca, content, esds, sinf)\n  }\n\n  static encv (track) {\n    const sps = track.sps.length > 0 ? track.sps[0] : []\n    const pps = track.pps.length > 0 ? track.pps[0] : []\n    const width = track.width\n    const height = track.height\n    const hSpacing = track.sarRatio[0]\n    const vSpacing = track.sarRatio[1]\n\n    const content = new Uint8Array([\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      (width >> 8) & 0xff,\n      width & 0xff, // width\n      (height >> 8) & 0xff,\n      height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n\n      0x12,\n      0x64, 0x61, 0x69, 0x6C, // dailymotion/hls.js\n      0x79, 0x6D, 0x6F, 0x74,\n      0x69, 0x6F, 0x6E, 0x2F,\n      0x68, 0x6C, 0x73, 0x2E,\n      0x6A, 0x73, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11]) // pre_defined = -1;\n    const avcc = new Uint8Array([\n      0x01, // version\n      sps[1], // profile\n      sps[2], // profile compatible\n      sps[3], // level\n      0xfc | 3,\n      0xE0 | 1, // 目前只处理一个sps\n      sps.length >>> 8 & 0xff,\n      sps.length & 0xff\n    ].concat(...sps).concat([\n      0x01,\n      pps.length >>> 8 & 0xff,\n      pps.length & 0xff\n    ]).concat(...pps))\n    const btrt = new Uint8Array([\n      0x00, 0x00, 0x58, 0x39,\n      0x00, 0x0F, 0xC8, 0xC0,\n      0x00, 0x04, 0x56, 0x48\n    ])\n    const sinf = MP4.sinf(track.encv)\n    const pasp = new Uint8Array([\n      (hSpacing >> 24), // hSpacing\n      (hSpacing >> 16) & 0xff,\n      (hSpacing >> 8) & 0xff,\n      hSpacing & 0xff,\n      (vSpacing >> 24), // vSpacing\n      (vSpacing >> 16) & 0xff,\n      (vSpacing >> 8) & 0xff,\n      vSpacing & 0xff\n    ])\n    return MP4.box(MP4.types.encv, content, MP4.box(MP4.types.avcC, avcc), MP4.box(MP4.types.btrt, btrt), sinf, MP4.box(MP4.types.pasp, pasp))\n  }\n\n  static schi (data) {\n    const content = new Uint8Array([])\n    const tenc = MP4.tenc(data)\n    return MP4.box(MP4.types.schi, content, tenc)\n  }\n\n  static tenc (data) {\n    //  用于每个track的加密参数（包括KID、初始化向量、加密标志位），包含在TrackEncryptionBox(‘tenc’)中。\n    const content = new Uint8Array(\n      [\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // skip\n        data.default_IsEncrypted & 0xff, // default_isProtected\n        data.default_IV_size & 0xff // default_Per_Sample_IV_Size\n      ].concat(parse(data.default_KID)))\n    return MP4.box(MP4.types.tenc, content)\n  }\n\n  static sinf (data) {\n    const content = new Uint8Array([])\n    const frma = new Uint8Array([\n      data.data_format.charCodeAt(0),\n      data.data_format.charCodeAt(1),\n      data.data_format.charCodeAt(2),\n      data.data_format.charCodeAt(3)\n    ])\n    const schm = new Uint8Array([\n      0x00, 0x00, 0x00, 0x00,\n      0x63, 0x65, 0x6E, 0x63, // cenc\n      0x00, 0x01, 0x00, 0x00 // version\n    ])\n    const schi = MP4.schi(data)\n    return MP4.box(MP4.types.sinf, content, MP4.box(MP4.types.frma, frma), MP4.box(MP4.types.schm, schm), schi)\n  }\n\n  static avc1hev1 (track) {\n    const isHevc = track.codecType === VideoCodecType.HEVC\n    const typ = isHevc ? MP4.types.hvc1 : MP4.types.avc1\n    const config = isHevc ? MP4.hvcC(track) : MP4.avcC(track)\n    const boxes = [\n      new Uint8Array([\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width >> 8) & 0xff, track.width & 0xff, // width\n        (track.height >> 8) & 0xff, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00, // compressor name\n        0x00, 0x18, // depth\n        0x11, 0x11 // pre_defined = -1 //todo\n      ]), config\n    ]\n    // console.log('[remux],avc1hev1_0, len,', boxes[0].byteLength, hashVal(boxes[0].toString()))\n    // console.log('[remux],avc1hev1_1, len,', boxes[1].byteLength, hashVal(boxes[1].toString()))\n    if (isHevc) {\n      boxes.push(MP4.box(MP4.types.fiel, new Uint8Array([0x01, 0x00])))\n      // console.log('[remux],fiel, len,', boxes[2].byteLength, hashVal(boxes[2].toString()))\n    } else if (track.sarRatio && track.sarRatio.length > 1) {\n      boxes.push(MP4.pasp(track.sarRatio))\n      // console.log('[remux],pasp, len,', boxes[2].byteLength, hashVal(boxes[2].toString()))\n    }\n    return MP4.box(typ, ...boxes)\n  }\n\n  static avcC (track) {\n    const sps = []\n    const pps = []\n\n    let len\n    track.sps.forEach((s) => {\n      len = s.byteLength\n      sps.push((len >>> 8) & 0xff)\n      sps.push(len & 0xff)\n      sps.push(...s)\n    })\n\n    track.pps.forEach((p) => {\n      len = p.byteLength\n      pps.push((len >>> 8) & 0xff)\n      pps.push(len & 0xff)\n      pps.push(...p)\n    })\n\n    return MP4.box(MP4.types.avcC, new Uint8Array([\n      0x01, // configurationVersion\n      sps[3], // AVCProfileIndication\n      sps[4], // profile_compatibility\n      sps[5], // AVCLevelIndication\n      0xfc | 3, // lengthSizeMinusOne\n      0xe0 | track.sps.length // 3bit reserved (111) + numOfSequenceParameterSets\n    ].concat(...sps)\n      .concat([track.pps.length]) // numOfPictureParameterSets\n      .concat(...pps)))\n  }\n\n  static hvcC (track) {\n    const hvcC = track.hvcC\n    if (hvcC instanceof ArrayBuffer || hvcC instanceof Uint8Array) return hvcC\n    const { vps, sps, pps } = track\n    let data\n    if (hvcC) {\n      const pcf = hvcC.generalProfileCompatibilityFlags\n      const cif = hvcC.generalConstraintIndicatorFlags\n      const numOfArrays = (vps.length && 1) + (sps.length && 1) + (pps.length && 1)\n      data = [\n        0x01, // configurationVersion\n        hvcC.generalProfileSpace << 6 | hvcC.generalTierFlag << 5 | hvcC.generalProfileIdc,\n        pcf >>> 24, pcf >>> 16, pcf >>> 8, pcf,\n        cif[0], cif[1], cif[2], cif[3], cif[4], cif[5],\n        hvcC.generalLevelIdc,\n        0xF0, 0x00, // min_spatial_segmentation_idc\n        0xFC, // parallelismType\n        hvcC.chromaFormatIdc | 0xFC,\n        hvcC.bitDepthLumaMinus8 | 0xF8,\n        hvcC.bitDepthChromaMinus8 | 0xF8,\n        0x00, 0x00, // avgFrameRate\n        hvcC.numTemporalLayers << 3 | hvcC.temporalIdNested << 2 | 3,\n        numOfArrays\n      ]\n      const write = (x) => {\n        data.push(x.length >> 8, x.length)\n        data.push(...x)\n      }\n      if (vps.length) {\n        data.push(0xA0, 0x00, vps.length)\n        vps.forEach(write)\n      }\n      if (sps.length) {\n        data.push(0xA1, 0x00, sps.length)\n        sps.forEach(write)\n      }\n      if (pps.length) {\n        data.push(0xA2, 0x00, pps.length)\n        pps.forEach(write)\n      }\n    } else {\n      data = [\n        0x01, // configurationVersion\n        0x01, // profile_space + tier_flag + profile_idc\n        0x60, 0x00, 0x00, 0x00, // general_profile_compatibility\n        0x90, 0x00, 0x00, 0x00, 0x00, 0x00, // constraint_indicator_flags\n        0x5D, // level_idc=90\n        0xF0, 0x00, 0xFC, 0xFD, // profile_compatibility_indications\n        0xF8, // ‘11111’b + bitDepthLumaMinus8\n        0xF8, // ‘11111’b + bitDepthChromaMinus8\n        0x00, 0x00, // avgFrameRate\n        0x0F, // constantFrameRate + numTemporalLayers + ‘1’b + lengthSizeMinusOne\n        0x03, // numOfArrays\n\n        // vps\n        0xA0, 0x00, 0x01, // array_completeness + ‘0’b + NAL_unit_type + numNalus\n        0x00, 0x18, // nalUnitLength\n        0x40, 0x01, 0x0C, 0x01, 0xFF, 0xFF, 0x01, 0x60, 0x00, 0x00, 0x03, 0x00, 0x90, 0x00, 0x00, 0x03, 0x00, 0x00, 0x03, 0x00, 0x5D, 0x99, 0x98, 0x09,\n\n        // sps\n        0xA1, 0x00, 0x01, // array_completeness + ‘0’b + NAL_unit_type + numNalus\n        0x00, 0x2D, // nalUnitLength\n        0x42, 0x01, 0x01, 0x01, 0x60, 0x00, 0x00, 0x03, 0x00, 0x90, 0x00, 0x00, 0x03, 0x00, 0x00, 0x03, 0x00, 0x5D, 0xA0, 0x02,\n        0x80, 0x80, 0x2D, 0x16, 0x59, 0x99, 0xA4, 0x93, 0x2B, 0x9A, 0x80, 0x80, 0x80, 0x82, 0x00, 0x00, 0x03, 0x00, 0x02, 0x00,\n        0x00, 0x03, 0x00, 0x32, 0x10,\n\n        // pps\n        0xA2, 0x00, 0x01, // array_completeness + ‘0’b + NAL_unit_type + numNalus\n        0x00, 0x07, // nalUnitLength\n        0x44, 0x01, 0xC1, 0x72, 0xB4, 0x62, 0x40\n      ]\n    }\n    return MP4.box(MP4.types.hvcC, new Uint8Array(data))\n  }\n\n  static pasp ([hSpacing, vSpacing]) {\n    return MP4.box(MP4.types.pasp, new Uint8Array([\n      hSpacing >> 24, (hSpacing >> 16) & 0xff, (hSpacing >> 8) & 0xff, hSpacing & 0xff,\n      vSpacing >> 24, (vSpacing >> 16) & 0xff, (vSpacing >> 8) & 0xff, vSpacing & 0xff\n    ]))\n  }\n\n  static mp4a (track) {\n    return MP4.box(MP4.types.mp4a, new Uint8Array([\n      0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, track.channelCount,\n      0x00, 0x10, // sampleSize:16bits\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      (track.sampleRate >> 8) & 0xff, track.sampleRate & 0xff,\n      0x00, 0x00\n    ]), track.config.length ? MP4.esds(track.config) : undefined)\n  }\n\n  static esds (config) {\n    const len = config.length\n    const esds = MP4.box(MP4.types.esds, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x03, // tag\n      0x17 + len, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n      0x04, // tag\n      0x0f + len, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n      0x05 // tag, DecoderSpecificInfoTag\n    ].concat([len])\n      .concat(config)\n      .concat(\n        [0x06, 0x01, 0x02]// GASpecificConfig\n      )\n    ))\n    // console.log('[remux],esds ,len ', esds.byteLength, hashVal(esds.toString()))\n    return esds\n  }\n\n  static mvex (tracks) {\n    // const mehd = MP4.box(MP4.types.mehd, this.extension(0, 0), Buffer.writeUint32(tracks[0].tkhdDuration))\n    // const mvex = MP4.box(MP4.types.mvex, mehd, MP4.trex1(1), MP4.trex2(2))\n    // // console.log('[remux],mvex, len,', mvex.byteLength, hashVal(mvex.toString()))\n    // const mvex = MP4.box(MP4.types.mvex, MP4.trex1(1), MP4.trex2(2))\n    const mvex = MP4.box(MP4.types.mvex, ...tracks.map((t) => MP4.trex(t.id)))\n    // console.log('[remux],mvex, len,', mvex.byteLength, hashVal(mvex.toString()))\n    return mvex\n  }\n\n  static trex (id) {\n    const trex = MP4.box(MP4.types.trex, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      id >> 24, (id >> 16) & 0xff, (id >> 8) & 0xff, id & 0xff, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n    ]))\n    // console.log('[remux],trex, len,', trex.byteLength, hashVal(trex.toString()))\n    return trex\n  }\n\n  static trex1 (id) {\n    const trex = MP4.box(MP4.types.trex, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (id >> 24),\n      (id >> 16) & 0xff,\n      (id >> 8) & 0xff,\n      (id & 0xff), // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x02, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x00 // default_sample_flags\n    ]))\n    // console.log('[remux],trex, len,', trex.byteLength, hashVal(trex.toString()))\n    return trex\n  }\n\n  static trex2 (id) {\n    const trex = MP4.box(MP4.types.trex, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (id >> 24),\n      (id >> 16) & 0xff,\n      (id >> 8) & 0xff,\n      (id & 0xff), // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x04, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x02, 0x00, 0x00, 0x00 // default_sample_flags\n    ]))\n    // console.log('[remux],trex, len,', trex.byteLength, hashVal(trex.toString()))\n    return trex\n  }\n\n  static moof (tracks) {\n    const moof = MP4.box(MP4.types.moof, MP4.mfhd(tracks[0].samples ? tracks[0].samples[0].gopId : 0), ...tracks.map((t) => MP4.traf(t)))\n    // console.log('[remux],moof, len', moof.byteLength)\n    return moof\n    // return MP4.box(MP4.types.moof, MP4.mfhd(tracks[0].gopId), ...tracks.map((t) => MP4.traf(t)))\n  }\n\n  static mfhd (sequenceNumber) {\n    // sequenceNumber += 1\n    const mfhd = MP4.box(MP4.types.mfhd, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      sequenceNumber >> 24, (sequenceNumber >> 16) & 0xff, (sequenceNumber >> 8) & 0xff, sequenceNumber & 0xff\n    ]))\n    // console.log('[remux],mfhd, len,', mfhd.byteLength, hashVal(mfhd.toString()))\n    return mfhd\n  }\n\n  static traf (track) {\n    const tfhd = MP4.tfhd(track.id)\n    // console.log('[remux],tfhd, len,', tfhd.byteLength, hashVal(tfhd.toString()), ', trackid = ', track.id)\n    // console.log('[remux],tfdt,baseMediaDecodeTime,', track.baseMediaDecodeTime)\n    const tfdt = MP4.tfdt(track, track.baseMediaDecodeTime)\n    let sencLength = 0\n    let samples\n    if (track.isVideo && track.videoSenc) {\n      samples = track.videoSenc\n      samples.forEach(function (item) {\n        sencLength = sencLength + 8\n        if (item.subsamples && item.subsamples.length) {\n          sencLength = sencLength + 2\n          sencLength = sencLength + item.subsamples.length * 6\n        }\n      })\n    }\n    track.videoSencLength = sencLength\n    // console.log('[remux],tfdt, len,', tfdt.toString().length)\n    // console.log('[remux],tfdt, len,', tfdt.byteLength, hashVal(tfdt.toString()))\n    if (!track.useEME || (!track.isVideoEncryption && !track.isAudioEncryption)) {\n      const sdtp = MP4.sdtp(track)\n      // console.log('[remux],sdtp, len,', sdtp.byteLength, hashVal(sdtp.toString()))\n      const offset = 16 + // tfhd\n        20 + // tfdt\n        8 + // traf header\n        16 + // mfhd\n        8 + // moof header\n        8 // mdat header\n      return MP4.box(MP4.types.traf, tfhd, tfdt, sdtp, MP4.trun(track.samples, sdtp.byteLength + offset))\n    } else if (track.isVideoEncryption) {\n      if (track.isVideo) {\n        // 加密视频\n        const saiz = MP4.saiz(track)\n        const saio = MP4.saio(track)\n        const trun = MP4.trun1(track)\n        const senc = MP4.senc(track)\n        const traf = MP4.box(MP4.types.traf, tfhd, tfdt, saiz, saio, trun, senc)\n        // console.log('[remux],trex_video, len,', traf.byteLength, hashVal(traf.toString()))\n        return traf\n      } else {\n        // 视频加密，音频加密和未加密处理\n        if (!track.isAudioEncryption) {\n          // 音频未加密\n          const sbgp = MP4.sbgp()\n          const trun = MP4.trun1(track)\n          return MP4.box(MP4.types.traf, tfhd, tfdt, sbgp, trun)\n        } else {\n          // 音频加密\n          const sbgp = MP4.sbgp()\n          const saiz = MP4.saiz(track)\n          const saio = MP4.saio(track)\n          const senc = MP4.senc(track)\n          const trun = MP4.trun1(track)\n          const traf = MP4.box(MP4.types.traf, tfhd, tfdt, sbgp, saiz, saio, senc, trun)\n          // console.log('[remux],trex_audio, len,', traf.byteLength, hashVal(traf.toString()))\n          return traf\n        }\n      }\n    } else {\n      // 视频未加密，音频加密\n      if (track.isVideo) {\n        const trun = MP4.trun1(track)\n        return MP4.box(MP4.types.traf, tfhd, tfdt, trun)\n      } else {\n        const sbgp = MP4.sbgp()\n        const saiz = MP4.saiz(track)\n        const saio = MP4.saio(track)\n        const senc = MP4.senc(track)\n        const trun = MP4.trun1(track)\n        const traf = MP4.box(MP4.types.traf, tfhd, tfdt, sbgp, saiz, saio, senc, trun)\n        // console.log('[remux],trex, len,', traf.byteLength, hashVal(traf.toString()))\n        return traf\n      }\n    }\n  }\n\n  static sdtp (data) {\n    const buffer = new Buffer()\n    data.samples.forEach(item => {\n      buffer.write(new Uint8Array(data.isVideo ? [item.keyframe ? 32 : 16] : [16]))\n    })\n    return MP4.box(MP4.types.sdtp, this.extension(0, 0), buffer.buffer)\n  }\n\n  static trun1 (data) {\n    // const id = data.id\n    // const ceil = id === 1 ? 12 : 4\n    const buffer = new Buffer()\n    const sampleCount = Buffer.writeUint32(data.samples.length)\n    let offset = null\n    if (data.isVideo) {\n      const sencLength = data.videoSencLength\n      /*\n      16 + // mfhd\n      16 + // tfhd\n      20 + // tfdt\n      17 + //saiz\n      24 + //saio\n      data.samples.length*16\n      4(offset) + 4(sampleCount) + 12(header)  //trun\n      12(header) + sencLength //senc\n      8 + // traf header\n      8 + // moof header\n      8 // mdat header\n      = 149+data.samples.length * 16 + sencLength\n       */\n      offset = Buffer.writeUint32(data.samples.length * 16 + sencLength + 149)\n      if (!data.isVideoEncryption && data.isAudioEncryption) {\n        offset = Buffer.writeUint32(data.samples.length * 16 + 92)\n      }\n    } else {\n      /*\n      16 + // mfhd\n      16 + // tfhd\n      20 + // tfdt\n      28 + //sbgp\n      4(offset) + 4(sampleCount) + 12(header)  //trun\n      8 + // traf header\n      8 + // moof header\n      8 // mdat header\n       */\n      let len = data.samples.length * 12 + 124\n      if (data.isAudioEncryption) {\n        len = data.samples.length * 12 + 8 * data.audioSenc.length + 177\n      }\n      offset = Buffer.writeUint32(len)\n    }\n\n    data.samples.forEach(item => {\n      buffer.write(Buffer.writeUint32(item.duration))\n      buffer.write(Buffer.writeUint32(item.size))\n      buffer.write(Buffer.writeUint32(item.keyframe ? 0x02000000 : 0x00010000))\n      if (data.isVideo) {\n        buffer.write(Buffer.writeUint32(item.cts ? item.cts : 0))\n      }\n    })\n\n    return MP4.box(MP4.types.trun, this.extension(0, data.flags), sampleCount, offset, buffer.buffer)\n  }\n\n  static senc (data) {\n    const buffer = new Buffer()\n    const len = data.samples.length\n    const ceil = data.isVideo ? 16 : 8\n    const flag = data.isVideo ? 2 : 0\n    let samples = []\n    let samplesLength = 0\n    if (data.isVideo) {\n      samples = data.videoSenc\n      samplesLength = data.videoSencLength\n    } else {\n      samples = data.audioSenc\n    }\n    samplesLength = samplesLength || ceil * len\n    buffer.write(\n      Buffer.writeUint32(16 + samplesLength), MP4.types.senc, this.extension(0, flag)\n    )\n    buffer.write(Buffer.writeUint32(len))\n    samples.forEach(item => {\n      for (let i = 0; i < item.InitializationVector.length; i++) {\n        buffer.write(new Uint8Array([item.InitializationVector[i]]))\n      }\n      if (item.subsamples && item.subsamples.length) {\n        buffer.write(Buffer.writeUint16(item.subsamples.length))\n        item.subsamples.forEach(value => {\n          buffer.write(Buffer.writeUint16(value.BytesOfClearData))\n          buffer.write(Buffer.writeUint32(value.BytesOfProtectedData))\n        })\n      }\n    })\n    return buffer.buffer\n    // return MP4.box(MP4.types.senc, this.extension(0, flag), buffer.buffer)\n  }\n\n  static saio (data) {\n    let length = data.samples.length * 12 + 141\n    if (!data.isVideo && data.isAudioEncryption) {\n      length = 149\n    }\n    const content = new Uint8Array([\n      0x01, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x01,\n      0x00, 0x00, 0x00, 0x00,\n      (length >> 24) & 0xff,\n      (length >> 16) & 0xff,\n      (length >> 8) & 0xff,\n      length & 0xff\n    ])\n    return MP4.box(MP4.types.saio, content)\n  }\n\n  static saiz (data) {\n    const samplesLength = data.samples.length\n    const content = new Uint8Array([\n      0x00, 0x00, 0x00, 0x00,\n      0x10, // default sample info size\n      (samplesLength >> 24) & 0xff,\n      (samplesLength >> 16) & 0xff,\n      (samplesLength >> 8) & 0xff,\n      samplesLength & 0xff\n    ])\n    return MP4.box(MP4.types.saiz, content)\n  }\n\n  static sbgp () {\n    const content = new Uint8Array([\n      0x72, 0x6F, 0x6C, 0x6C, // sgpd, grouping_type\n      0x00, 0x00, 0x00, 0x01,\n      0x00, 0x00, 0x01, 0x19,\n      0x00, 0x00, 0x00, 0x01\n    ])\n    return MP4.box(MP4.types.sbgp, this.extension(0, 0), content)\n  }\n\n  static extension (version, flag) {\n    return new Uint8Array([\n      version,\n      (flag >> 16) & 0xff,\n      (flag >> 8) & 0xff,\n      flag & 0xff\n    ])\n  }\n\n  static tfhd (id) {\n    return MP4.box(MP4.types.tfhd, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags todo 0x00\n      id >> 24, (id >> 16) & 0xff, (id >> 8) & 0xff, id & 0xff // track_ID\n    ]))\n  }\n\n  static tfdt (data, baseMediaDecodeTime) {\n    const upperWordBaseMediaDecodeTime = Math.floor(baseMediaDecodeTime / (UINT32_MAX + 1))\n    const lowerWordBaseMediaDecodeTime = Math.floor(baseMediaDecodeTime % (UINT32_MAX + 1))\n    if (data.useEME && (data.isVideoEncryption || data.isAudioEncryption)) {\n      return MP4.box(MP4.types.tfdt, new Uint8Array([\n        0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        lowerWordBaseMediaDecodeTime >> 24,\n        (lowerWordBaseMediaDecodeTime >> 16) & 0xff,\n        (lowerWordBaseMediaDecodeTime >> 8) & 0xff,\n        lowerWordBaseMediaDecodeTime & 0xff\n      ]))\n    } else {\n      return MP4.box(MP4.types.tfdt, new Uint8Array([\n        0x01, // version 1\n        0x00, 0x00, 0x00, // flags\n        upperWordBaseMediaDecodeTime >> 24,\n        (upperWordBaseMediaDecodeTime >> 16) & 0xff,\n        (upperWordBaseMediaDecodeTime >> 8) & 0xff,\n        upperWordBaseMediaDecodeTime & 0xff,\n        lowerWordBaseMediaDecodeTime >> 24,\n        (lowerWordBaseMediaDecodeTime >> 16) & 0xff,\n        (lowerWordBaseMediaDecodeTime >> 8) & 0xff,\n        lowerWordBaseMediaDecodeTime & 0xff\n      ]))\n    }\n  }\n\n  static trun (samples, offset) {\n    const sampleLen = samples.length\n    const dataLen = 12 + (16 * sampleLen)\n    offset += 8 + dataLen\n    const data = new Uint8Array(dataLen)\n    data.set([\n      0x00, // version\n      0x00, 0x0f, 0x01, // flags\n      (sampleLen >>> 24) & 0xff, (sampleLen >>> 16) & 0xff, (sampleLen >>> 8) & 0xff, sampleLen & 0xff,\n      (offset >>> 24) & 0xff, (offset >>> 16) & 0xff, (offset >>> 8) & 0xff, offset & 0xff // data_offset\n    ], 0)\n    for (let i = 0; i < sampleLen; i++) {\n      const {\n        duration, size, flag = {}, cts = 0\n      } = samples[i]\n      data.set([\n        (duration >>> 24) & 0xff, (duration >>> 16) & 0xff, (duration >>> 8) & 0xff, duration & 0xff,\n        (size >>> 24) & 0xff, (size >>> 16) & 0xff, (size >>> 8) & 0xff, size & 0xff,\n        (flag.isLeading << 2) | (flag.dependsOn === null || flag.dependsOn === undefined ? 1 : flag.dependsOn),\n        (flag.isDependedOn << 6) | (flag.hasRedundancy << 4) | (flag.paddingValue << 1) | (flag.isNonSyncSample === null || flag.isNonSyncSample === undefined ? 1 : flag.isNonSyncSample),\n        flag.degradationPriority & (0xf0 << 8), flag.degradationPriority & 0x0f, // sample_flags\n        (cts >>> 24) & 0xff, (cts >>> 16) & 0xff, (cts >>> 8) & 0xff, cts & 0xff // sample_composition_time_offset\n      ], 12 + 16 * i)\n    }\n\n    return MP4.box(MP4.types.trun, data)\n  }\n\n  static moovMP4 (tracks) {\n    return MP4.box(MP4.types.moov,\n      MP4.mvhd(tracks[0].duration, tracks[0].timescale),\n      ...tracks.map((t) => MP4.trackMP4(t)))\n  }\n\n  static trackMP4 (track) {\n    return MP4.box(\n      MP4.types.trak,\n      MP4.tkhd(track.id, track.duration, track.width, track.height),\n      MP4.mdiaMP4(track)\n    )\n  }\n\n  static mdiaMP4 (track) {\n    return MP4.box(MP4.types.mdia, MP4.mdhd(track.duration, track.timescale), MP4.hdlr(track.type), MP4.minfMP4(track))\n  }\n\n  static minfMP4 (track) {\n    return MP4.box(MP4.types.minf, track.type === TrackType.VIDEO ? MP4.VMHD : MP4.SMHD, MP4.DINF, MP4.stblMP4(track))\n  }\n\n  static stblMP4 (track) {\n    const { ext } = track\n    const boxes = [\n      MP4.stsd(track),\n      MP4.stts(ext.stts),\n      MP4.stsc(ext.stsc),\n      MP4.stsz(ext.stsz),\n      MP4.stco(ext.stco)\n    ]\n\n    if (ext.stss.length) {\n      boxes.push(MP4.stss(ext.stss))\n    }\n\n    if (ext.ctts.length) {\n      boxes.push(MP4.ctts(ext.ctts))\n    }\n\n    return MP4.box(MP4.types.stbl, ...boxes)\n  }\n\n  static stts (samples) {\n    const len = samples.length\n    const data = new Uint8Array(8 * len)\n    let offset = 0\n    samples.forEach(({ value, count }) => {\n      data.set([\n        count >> 24, (count >> 16) & 0xff, (count >> 8) & 0xff, count & 0xff,\n        value >> 24, (value >> 16) & 0xff, (value >> 8) & 0xff, value & 0xff\n      ], offset)\n      offset += 8\n    })\n\n    return MP4.box(MP4.types.stts, concatUint8Array(new Uint8Array([\n      0, 0, 0, 0,\n      (len >> 24), (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n    ]), data))\n  }\n\n  static stsc (entries) {\n    const len = entries.length\n    const data = new Uint8Array(12 * len)\n    let offset = 0\n    entries.forEach(({ firstChunk, samplesPerChunk, sampleDescIndex }) => {\n      data.set([\n        firstChunk >> 24, (firstChunk >> 16) & 0xff, (firstChunk >> 8) & 0xff, firstChunk & 0xff,\n        samplesPerChunk >> 24, (samplesPerChunk >> 16) & 0xff, (samplesPerChunk >> 8) & 0xff, samplesPerChunk & 0xff,\n        sampleDescIndex >> 24, (sampleDescIndex >> 16) & 0xff, (sampleDescIndex >> 8) & 0xff, sampleDescIndex & 0xff\n      ], offset)\n      offset += 12\n    })\n    return MP4.box(MP4.types.stsc, concatUint8Array(new Uint8Array([\n      0, 0, 0, 0,\n      (len >> 24), (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n    ]), data))\n  }\n\n  static stsz (samplesSizes) {\n    const len = samplesSizes.length\n    const data = new Uint8Array(4 * len)\n    let offset = 0\n    samplesSizes.forEach((x) => {\n      data.set([\n        x >> 24, (x >> 16) & 0xff, (x >> 8) & 0xff, x & 0xff\n      ], offset)\n      offset += 4\n    })\n    return MP4.box(MP4.types.stsz, concatUint8Array(\n      new Uint8Array([\n        0, 0, 0, 0,\n        0, 0, 0, 0,\n        len >> 24, (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n      ]),\n      data\n    ))\n  }\n\n  static stco (offsets) {\n    const len = offsets.length\n    const data = new Uint8Array(4 * len)\n    let offset = 0\n    offsets.forEach((x) => {\n      data.set([\n        x >> 24, (x >> 16) & 0xff, (x >> 8) & 0xff, x & 0xff\n      ], offset)\n      offset += 4\n    })\n    return MP4.box(MP4.types.stco, concatUint8Array(\n      new Uint8Array([\n        0, 0, 0, 0,\n        len >> 24, (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n      ]),\n      data\n    ))\n  }\n\n  static stss (keyframeIndexes) {\n    const len = keyframeIndexes.length\n    const data = new Uint8Array(4 * len)\n    let offset = 0\n    keyframeIndexes.forEach((x) => {\n      data.set([\n        x >> 24, (x >> 16) & 0xff, (x >> 8) & 0xff, x & 0xff\n      ], offset)\n      offset += 4\n    })\n    return MP4.box(MP4.types.stss, concatUint8Array(\n      new Uint8Array([\n        0, 0, 0, 0,\n        len >> 24, (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n      ]),\n      data\n    ))\n  }\n\n  static ctts (samples) {\n    const len = samples.length\n    const data = new Uint8Array(8 * len)\n    let offset = 0\n    samples.forEach(({ value, count }) => {\n      data.set([\n        count >> 24, (count >> 16) & 0xff, (count >> 8) & 0xff, count & 0xff,\n        value >> 24, (value >> 16) & 0xff, (value >> 8) & 0xff, value & 0xff\n      ], offset)\n      offset += 8\n    })\n    return MP4.box(MP4.types.ctts, concatUint8Array(new Uint8Array([\n      0, 0, 0, 0,\n      len >> 24, (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n    ]), data))\n  }\n\n  static styp () {\n    return MP4.box(MP4.types.styp, new Uint8Array([\n      0x6D, 0x73, 0x64, 0x68,\n      0x00, 0x00, 0x00, 0x00,\n      0x6D, 0x73, 0x64, 0x68,\n      0x6D, 0x73, 0x69, 0x78\n    ]))\n  }\n\n  // data.sampleOffset 指的是samples的序列号。_samples[0].idx\n  static sidx (data) {\n    // const buffer = new Buffer()\n    const timescale = data.timescale\n    const duration = data.samples[0].duration\n    const durationCount = duration * data.samples.length\n    const earliestTime = data.samples[0].sampleOffset * duration\n    let mdatSize = 8\n    data.samples.forEach(item => {\n      mdatSize += item.size\n    })\n    let length = 0\n    if (data.isVideo) {\n      let sencLength = 0\n      let samples\n      if (data.videoSenc) {\n        samples = data.videoSenc\n      }\n      if (data.isVideo) {\n        samples.forEach(item => {\n          sencLength = sencLength + 8\n          if (item.subsamples && item.subsamples.length) {\n            sencLength = sencLength + 2\n            sencLength = sencLength + item.subsamples.length * 6\n          }\n        })\n      }\n      data.videoSencLength = sencLength\n      length = mdatSize + 141 + data.samples.length * 16 + sencLength\n      if (data.useEME && data.isAudioEncryption && !data.isVideoEncryption) {\n        length = mdatSize + (data.samples.length * 16) + 84\n      }\n    } else {\n      length = mdatSize + 116 + data.samples.length * 12\n      if (data.useEME && data.isAudioEncryption) {\n        length = mdatSize + 169 + data.samples.length * 12 + 8 * data.audioSenc.length\n      }\n    }\n\n    const content = new Uint8Array([\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, data.id & 0xff, // ref_id\n      (timescale >> 24) & 0xff,\n      (timescale >> 16) & 0xff,\n      (timescale >> 8) & 0xff,\n      timescale & 0xff, // timescale\n      (earliestTime >> 24) & 0xff,\n      (earliestTime >> 16) & 0xff,\n      (earliestTime >> 8) & 0xff,\n      earliestTime & 0xff, // earliest_presentation_time\n      0x00, 0x00, 0x00, 0x00, // first_offset\n      0x00, 0x00, // reserved\n      0x00, 0x01, // ref_count\n      // 0x00, 0x04, 0x11, 0xCF, // ref_size + ref_type\n      // 0x00, 0x01, 0x0A, 0xA6, // ref_size + ref_type\n      0x00, // ref_size + ref_type ref_size = moof.size + mdat.size\n      (length >> 16) & 0xff,\n      (length >> 8) & 0xff,\n      length & 0xff,\n      (durationCount >> 24) & 0xff,\n      (durationCount >> 16) & 0xff,\n      (durationCount >> 8) & 0xff,\n      durationCount & 0xff,\n      0x90, 0x00, 0x00, 0x00\n    ])\n    return MP4.box(MP4.types.sidx, content)\n  }\n\n  static mdat (data) {\n    const mdat = MP4.box(MP4.types.mdat, data)\n    // console.log('[remux],mdat ,len ', mdat.byteLength, hashVal(mdat.toString()))\n    return mdat\n  }\n}\n","\nexport class Logger {\n  constructor (name, enable) {\n    this.name = name || ''\n    this._prefix = `[${this.name}]`\n    Logger.disabled = enable\n  }\n\n  debug (...args) {\n    if (Logger.disabled) return\n    console.debug(this._prefix, ...args)\n  }\n\n  log (...args) {\n    if (Logger.disabled) return\n    console.log(this._prefix, ...args)\n  }\n\n  warn (...args) {\n    if (Logger.disabled) return\n    console.warn(this._prefix, ...args)\n  }\n\n  error (...args) {\n    if (Logger.disabled) return\n    console.error(this._prefix, ...args)\n  }\n\n  table (...args) {\n    if (Logger.disabled) return\n    console.group(this._prefix)\n    console.table(...args)\n    console.groupEnd()\n  }\n\n  static disabled = true\n\n  static enable () {\n    Logger.disabled = false\n  }\n\n  static disable () {\n    Logger.disabled = true\n  }\n}\n","import {\n  WordArray,\n  Hasher,\n} from './core.js';\n\n// Constants table\nconst T = [];\n\n// Compute constants\nfor (let i = 0; i < 64; i += 1) {\n  T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n}\n\nconst FF = (a, b, c, d, x, s, t) => {\n  const n = a + ((b & c) | (~b & d)) + x + t;\n  return ((n << s) | (n >>> (32 - s))) + b;\n};\n\nconst GG = (a, b, c, d, x, s, t) => {\n  const n = a + ((b & d) | (c & ~d)) + x + t;\n  return ((n << s) | (n >>> (32 - s))) + b;\n};\n\nconst HH = (a, b, c, d, x, s, t) => {\n  const n = a + (b ^ c ^ d) + x + t;\n  return ((n << s) | (n >>> (32 - s))) + b;\n};\n\nconst II = (a, b, c, d, x, s, t) => {\n  const n = a + (c ^ (b | ~d)) + x + t;\n  return ((n << s) | (n >>> (32 - s))) + b;\n};\n\n/**\n * MD5 hash algorithm.\n */\nexport class MD5Algo extends Hasher {\n  _doReset() {\n    this._hash = new WordArray([\n      0x67452301,\n      0xefcdab89,\n      0x98badcfe,\n      0x10325476,\n    ]);\n  }\n\n  _doProcessBlock(M, offset) {\n    const _M = M;\n\n    // Swap endian\n    for (let i = 0; i < 16; i += 1) {\n      // Shortcuts\n      const offset_i = offset + i;\n      const M_offset_i = M[offset_i];\n\n      _M[offset_i] = (\n        (((M_offset_i << 8) | (M_offset_i >>> 24)) & 0x00ff00ff)\n          | (((M_offset_i << 24) | (M_offset_i >>> 8)) & 0xff00ff00)\n      );\n    }\n\n    // Shortcuts\n    const H = this._hash.words;\n\n    const M_offset_0 = _M[offset + 0];\n    const M_offset_1 = _M[offset + 1];\n    const M_offset_2 = _M[offset + 2];\n    const M_offset_3 = _M[offset + 3];\n    const M_offset_4 = _M[offset + 4];\n    const M_offset_5 = _M[offset + 5];\n    const M_offset_6 = _M[offset + 6];\n    const M_offset_7 = _M[offset + 7];\n    const M_offset_8 = _M[offset + 8];\n    const M_offset_9 = _M[offset + 9];\n    const M_offset_10 = _M[offset + 10];\n    const M_offset_11 = _M[offset + 11];\n    const M_offset_12 = _M[offset + 12];\n    const M_offset_13 = _M[offset + 13];\n    const M_offset_14 = _M[offset + 14];\n    const M_offset_15 = _M[offset + 15];\n\n    // Working varialbes\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n\n    // Computation\n    a = FF(a, b, c, d, M_offset_0, 7, T[0]);\n    d = FF(d, a, b, c, M_offset_1, 12, T[1]);\n    c = FF(c, d, a, b, M_offset_2, 17, T[2]);\n    b = FF(b, c, d, a, M_offset_3, 22, T[3]);\n    a = FF(a, b, c, d, M_offset_4, 7, T[4]);\n    d = FF(d, a, b, c, M_offset_5, 12, T[5]);\n    c = FF(c, d, a, b, M_offset_6, 17, T[6]);\n    b = FF(b, c, d, a, M_offset_7, 22, T[7]);\n    a = FF(a, b, c, d, M_offset_8, 7, T[8]);\n    d = FF(d, a, b, c, M_offset_9, 12, T[9]);\n    c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n    b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n    a = FF(a, b, c, d, M_offset_12, 7, T[12]);\n    d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n    c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n    b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n    a = GG(a, b, c, d, M_offset_1, 5, T[16]);\n    d = GG(d, a, b, c, M_offset_6, 9, T[17]);\n    c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n    b = GG(b, c, d, a, M_offset_0, 20, T[19]);\n    a = GG(a, b, c, d, M_offset_5, 5, T[20]);\n    d = GG(d, a, b, c, M_offset_10, 9, T[21]);\n    c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n    b = GG(b, c, d, a, M_offset_4, 20, T[23]);\n    a = GG(a, b, c, d, M_offset_9, 5, T[24]);\n    d = GG(d, a, b, c, M_offset_14, 9, T[25]);\n    c = GG(c, d, a, b, M_offset_3, 14, T[26]);\n    b = GG(b, c, d, a, M_offset_8, 20, T[27]);\n    a = GG(a, b, c, d, M_offset_13, 5, T[28]);\n    d = GG(d, a, b, c, M_offset_2, 9, T[29]);\n    c = GG(c, d, a, b, M_offset_7, 14, T[30]);\n    b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n    a = HH(a, b, c, d, M_offset_5, 4, T[32]);\n    d = HH(d, a, b, c, M_offset_8, 11, T[33]);\n    c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n    b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n    a = HH(a, b, c, d, M_offset_1, 4, T[36]);\n    d = HH(d, a, b, c, M_offset_4, 11, T[37]);\n    c = HH(c, d, a, b, M_offset_7, 16, T[38]);\n    b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n    a = HH(a, b, c, d, M_offset_13, 4, T[40]);\n    d = HH(d, a, b, c, M_offset_0, 11, T[41]);\n    c = HH(c, d, a, b, M_offset_3, 16, T[42]);\n    b = HH(b, c, d, a, M_offset_6, 23, T[43]);\n    a = HH(a, b, c, d, M_offset_9, 4, T[44]);\n    d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n    c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n    b = HH(b, c, d, a, M_offset_2, 23, T[47]);\n\n    a = II(a, b, c, d, M_offset_0, 6, T[48]);\n    d = II(d, a, b, c, M_offset_7, 10, T[49]);\n    c = II(c, d, a, b, M_offset_14, 15, T[50]);\n    b = II(b, c, d, a, M_offset_5, 21, T[51]);\n    a = II(a, b, c, d, M_offset_12, 6, T[52]);\n    d = II(d, a, b, c, M_offset_3, 10, T[53]);\n    c = II(c, d, a, b, M_offset_10, 15, T[54]);\n    b = II(b, c, d, a, M_offset_1, 21, T[55]);\n    a = II(a, b, c, d, M_offset_8, 6, T[56]);\n    d = II(d, a, b, c, M_offset_15, 10, T[57]);\n    c = II(c, d, a, b, M_offset_6, 15, T[58]);\n    b = II(b, c, d, a, M_offset_13, 21, T[59]);\n    a = II(a, b, c, d, M_offset_4, 6, T[60]);\n    d = II(d, a, b, c, M_offset_11, 10, T[61]);\n    c = II(c, d, a, b, M_offset_2, 15, T[62]);\n    b = II(b, c, d, a, M_offset_9, 21, T[63]);\n\n    // Intermediate hash value\n    H[0] = (H[0] + a) | 0;\n    H[1] = (H[1] + b) | 0;\n    H[2] = (H[2] + c) | 0;\n    H[3] = (H[3] + d) | 0;\n  }\n  /* eslint-ensable no-param-reassign */\n\n  _doFinalize() {\n    // Shortcuts\n    const data = this._data;\n    const dataWords = data.words;\n\n    const nBitsTotal = this._nDataBytes * 8;\n    const nBitsLeft = data.sigBytes * 8;\n\n    // Add padding\n    dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - (nBitsLeft % 32));\n\n    const nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n    const nBitsTotalL = nBitsTotal;\n    dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n      (((nBitsTotalH << 8) | (nBitsTotalH >>> 24)) & 0x00ff00ff)\n        | (((nBitsTotalH << 24) | (nBitsTotalH >>> 8)) & 0xff00ff00)\n    );\n    dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n      (((nBitsTotalL << 8) | (nBitsTotalL >>> 24)) & 0x00ff00ff)\n        | (((nBitsTotalL << 24) | (nBitsTotalL >>> 8)) & 0xff00ff00)\n    );\n\n    data.sigBytes = (dataWords.length + 1) * 4;\n\n    // Hash final blocks\n    this._process();\n\n    // Shortcuts\n    const hash = this._hash;\n    const H = hash.words;\n\n    // Swap endian\n    for (let i = 0; i < 4; i += 1) {\n      // Shortcut\n      const H_i = H[i];\n\n      H[i] = (((H_i << 8) | (H_i >>> 24)) & 0x00ff00ff)\n        | (((H_i << 24) | (H_i >>> 8)) & 0xff00ff00);\n    }\n\n    // Return final computed hash\n    return hash;\n  }\n\n  clone() {\n    const clone = super.clone.call(this);\n    clone._hash = this._hash.clone();\n\n    return clone;\n  }\n}\n\n/**\n * Shortcut function to the hasher's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n *\n * @return {WordArray} The hash.\n *\n * @static\n *\n * @example\n *\n *     var hash = CryptoJS.MD5('message');\n *     var hash = CryptoJS.MD5(wordArray);\n */\nexport const MD5 = Hasher._createHelper(MD5Algo);\n\n/**\n * Shortcut function to the HMAC's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n * @param {WordArray|string} key The secret key.\n *\n * @return {WordArray} The HMAC.\n *\n * @static\n *\n * @example\n *\n *     var hmac = CryptoJS.HmacMD5(message, key);\n */\nexport const HmacMD5 = Hasher._createHmacHelper(MD5Algo);\n","import { MP4 } from './mp4'\nimport { concatUint8Array } from '../utils'\nimport { Logger } from './logger'\n\n/**\n * @typedef {Object} RemuxResult\n * @property {Uint8Array} [videoInitSegment]\n * @property {Uint8Array} [audioInitSegment]\n * @property {Uint8Array} [videoSegment]\n * @property {Uint8Array} [audioSegment]\n */\n\nexport class FMP4Remuxer {\n  /**\n   * @param {import('../model').VideoTrack} videoTrack\n   * @param {import('../model').AudioTrack} audioTrack\n   */\n  constructor (videoTrack, audioTrack, options) {\n    this.videoTrack = videoTrack\n    this.audioTrack = audioTrack\n    const browserVersions = /Chrome\\/([^.]+)/.exec(navigator.userAgent)\n    this.forceFirstIDR = browserVersions && Number(browserVersions[1]) < 50\n    this.log = new Logger('FMP4Remuxer', options && options.openLog ? !options.openLog : true)\n  }\n\n  /**\n   * @param {boolean} [createInit=false]\n   * @returns {RemuxResult}\n   */\n  remux (createInit = false, options = {}) {\n    const videoTrack = this.videoTrack\n    const audioTrack = this.audioTrack\n    const hasVideo = videoTrack.exist()\n    const hasAudio = audioTrack.exist()\n\n    let videoInitSegment\n    let audioInitSegment\n\n    let initSegment\n    const tracks = []\n\n    if (createInit) {\n      if (options && options.initMerge) {\n        if (hasVideo) {\n          tracks.push(this.videoTrack)\n        }\n        if (hasAudio) {\n          tracks.push(this.audioTrack)\n        }\n        initSegment = MP4.initSegment(tracks)\n      } else {\n        if (hasVideo) videoInitSegment = MP4.initSegment([this.videoTrack])\n        if (hasAudio) audioInitSegment = MP4.initSegment([this.audioTrack])\n      }\n    }\n\n    let videoSegment\n    let audioSegment\n    if (hasVideo && videoTrack.hasSample()) {\n      videoSegment = this._remuxVideo()\n    }\n\n    if (hasAudio && audioTrack.hasSample()) {\n      audioSegment = this._remuxAudio()\n    }\n\n    videoTrack.samples = []\n    audioTrack.samples = []\n\n    return {\n      initSegment,\n      videoInitSegment,\n      audioInitSegment,\n      videoSegment,\n      audioSegment\n    }\n  }\n\n  _remuxVideo () {\n    const track = this.videoTrack\n    if (this.forceFirstIDR) {\n      track.samples[0].flag = { dependsOn: 2, isNonSyncSample: 0 }\n    }\n    const samples = track.samples\n\n    let mdatSize = 0\n\n    samples.forEach((s) => {\n      mdatSize += s.units.reduce((t, c) => (t + c.byteLength), 0)\n      mdatSize += (s.units.length * 4)\n    })\n\n    const mdata = new Uint8Array(mdatSize)\n    const mdatView = new DataView(mdata.buffer)\n\n    for (let i = 0, l = samples.length, offset = 0, sample; i < l; i++) {\n      sample = samples[i]\n\n      let sampleSize = 0\n      sample.units.forEach((u) => {\n        mdatView.setUint32(offset, u.byteLength)\n        offset += 4\n        mdata.set(u, offset)\n        offset += u.byteLength\n        sampleSize += (4 + u.byteLength)\n      })\n      sample.size = sampleSize\n    }\n    const mdat = MP4.mdat(mdata)\n\n    const moof = MP4.moof([track])\n    return concatUint8Array(moof, mdat)\n\n  }\n\n  _remuxAudio () {\n    const track = this.audioTrack\n    const mdata = new Uint8Array(track.samples.reduce((t, c) => (t + c.size), 0))\n    track.samples.reduce((offset, s) => {\n      mdata.set(s.data, offset)\n      return offset + s.size\n    }, 0)\n    const mdat = MP4.mdat(mdata)\n    const moof = MP4.moof([track])\n    return concatUint8Array(moof, mdat)\n  }\n\n  reset () {\n    this.videoTrack.reset()\n    this.audioTrack.reset()\n  }\n}\n","/* eslint-disable no-use-before-define */\n\n/**\n * Base class for inheritance.\n */\nexport class Base {\n  /**\n   * Extends this object and runs the init method.\n   * Arguments to create() will be passed to init().\n   *\n   * @return {Object} The new object.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var instance = MyType.create();\n   */\n  static create(...args) {\n    return new this(...args);\n  }\n\n  /**\n   * Copies properties into this object.\n   *\n   * @param {Object} properties The properties to mix in.\n   *\n   * @example\n   *\n   *     MyType.mixIn({\n   *         field: 'value'\n   *     });\n   */\n  mixIn(properties) {\n    return Object.assign(this, properties);\n  }\n\n  /**\n   * Creates a copy of this object.\n   *\n   * @return {Object} The clone.\n   *\n   * @example\n   *\n   *     var clone = instance.clone();\n   */\n  clone() {\n    const clone = new this.constructor();\n    Object.assign(clone, this);\n    return clone;\n  }\n}\n\n/**\n * An array of 32-bit words.\n *\n * @property {Array} words The array of 32-bit words.\n * @property {number} sigBytes The number of significant bytes in this word array.\n */\nexport class WordArray extends Base {\n  /**\n   * Initializes a newly created word array.\n   *\n   * @param {Array} words (Optional) An array of 32-bit words.\n   * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.lib.WordArray.create();\n   *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n   *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n   */\n  constructor(words = [], sigBytes = words.length * 4) {\n    super();\n\n    let typedArray = words;\n    // Convert buffers to uint8\n    if (typedArray instanceof ArrayBuffer) {\n      typedArray = new Uint8Array(typedArray);\n    }\n\n    // Convert other array views to uint8\n    if (\n      typedArray instanceof Int8Array\n      || typedArray instanceof Uint8ClampedArray\n      || typedArray instanceof Int16Array\n      || typedArray instanceof Uint16Array\n      || typedArray instanceof Int32Array\n      || typedArray instanceof Uint32Array\n      || typedArray instanceof Float32Array\n      || typedArray instanceof Float64Array\n    ) {\n      typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n    }\n\n    // Handle Uint8Array\n    if (typedArray instanceof Uint8Array) {\n      // Shortcut\n      const typedArrayByteLength = typedArray.byteLength;\n\n      // Extract bytes\n      const _words = [];\n      for (let i = 0; i < typedArrayByteLength; i += 1) {\n        _words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n      }\n\n      // Initialize this word array\n      this.words = _words;\n      this.sigBytes = typedArrayByteLength;\n    } else {\n      // Else call normal init\n      this.words = words;\n      this.sigBytes = sigBytes;\n    }\n  }\n\n  /**\n   * Creates a word array filled with random bytes.\n   *\n   * @param {number} nBytes The number of random bytes to generate.\n   *\n   * @return {WordArray} The random word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.lib.WordArray.random(16);\n   */\n  static random(nBytes) {\n    const words = [];\n\n    const r = (m_w) => {\n      let _m_w = m_w;\n      let _m_z = 0x3ade68b1;\n      const mask = 0xffffffff;\n\n      return () => {\n        _m_z = (0x9069 * (_m_z & 0xFFFF) + (_m_z >> 0x10)) & mask;\n        _m_w = (0x4650 * (_m_w & 0xFFFF) + (_m_w >> 0x10)) & mask;\n        let result = ((_m_z << 0x10) + _m_w) & mask;\n        result /= 0x100000000;\n        result += 0.5;\n        return result * (Math.random() > 0.5 ? 1 : -1);\n      };\n    };\n\n    for (let i = 0, rcache; i < nBytes; i += 4) {\n      const _r = r((rcache || Math.random()) * 0x100000000);\n\n      rcache = _r() * 0x3ade67b7;\n      words.push((_r() * 0x100000000) | 0);\n    }\n\n    return new WordArray(words, nBytes);\n  }\n\n  /**\n   * Converts this word array to a string.\n   *\n   * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n   *\n   * @return {string} The stringified word array.\n   *\n   * @example\n   *\n   *     var string = wordArray + '';\n   *     var string = wordArray.toString();\n   *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n   */\n  toString(encoder = Hex) {\n    return encoder.stringify(this);\n  }\n\n  /**\n   * Concatenates a word array to this word array.\n   *\n   * @param {WordArray} wordArray The word array to append.\n   *\n   * @return {WordArray} This word array.\n   *\n   * @example\n   *\n   *     wordArray1.concat(wordArray2);\n   */\n  concat(wordArray) {\n    // Shortcuts\n    const thisWords = this.words;\n    const thatWords = wordArray.words;\n    const thisSigBytes = this.sigBytes;\n    const thatSigBytes = wordArray.sigBytes;\n\n    // Clamp excess bits\n    this.clamp();\n\n    // Concat\n    if (thisSigBytes % 4) {\n      // Copy one byte at a time\n      for (let i = 0; i < thatSigBytes; i += 1) {\n        const thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n        thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n      }\n    } else {\n      // Copy one word at a time\n      for (let i = 0; i < thatSigBytes; i += 4) {\n        thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\n      }\n    }\n    this.sigBytes += thatSigBytes;\n\n    // Chainable\n    return this;\n  }\n\n  /**\n   * Removes insignificant bits.\n   *\n   * @example\n   *\n   *     wordArray.clamp();\n   */\n  clamp() {\n    // Shortcuts\n    const { words, sigBytes } = this;\n\n    // Clamp\n    words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n    words.length = Math.ceil(sigBytes / 4);\n  }\n\n  /**\n   * Creates a copy of this word array.\n   *\n   * @return {WordArray} The clone.\n   *\n   * @example\n   *\n   *     var clone = wordArray.clone();\n   */\n  clone() {\n    const clone = super.clone.call(this);\n    clone.words = this.words.slice(0);\n\n    return clone;\n  }\n}\n\n/**\n * Hex encoding strategy.\n */\nexport const Hex = {\n  /**\n   * Converts a word array to a hex string.\n   *\n   * @param {WordArray} wordArray The word array.\n   *\n   * @return {string} The hex string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n   */\n  stringify(wordArray) {\n    // Shortcuts\n    const { words, sigBytes } = wordArray;\n\n    // Convert\n    const hexChars = [];\n    for (let i = 0; i < sigBytes; i += 1) {\n      const bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n      hexChars.push((bite >>> 4).toString(16));\n      hexChars.push((bite & 0x0f).toString(16));\n    }\n\n    return hexChars.join('');\n  },\n\n  /**\n   * Converts a hex string to a word array.\n   *\n   * @param {string} hexStr The hex string.\n   *\n   * @return {WordArray} The word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n   */\n  parse(hexStr) {\n    // Shortcut\n    const hexStrLength = hexStr.length;\n\n    // Convert\n    const words = [];\n    for (let i = 0; i < hexStrLength; i += 2) {\n      words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n    }\n\n    return new WordArray(words, hexStrLength / 2);\n  },\n};\n\n/**\n * Latin1 encoding strategy.\n */\nexport const Latin1 = {\n  /**\n   * Converts a word array to a Latin1 string.\n   *\n   * @param {WordArray} wordArray The word array.\n   *\n   * @return {string} The Latin1 string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n   */\n  stringify(wordArray) {\n    // Shortcuts\n    const { words, sigBytes } = wordArray;\n\n    // Convert\n    const latin1Chars = [];\n    for (let i = 0; i < sigBytes; i += 1) {\n      const bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n      latin1Chars.push(String.fromCharCode(bite));\n    }\n\n    return latin1Chars.join('');\n  },\n\n  /**\n   * Converts a Latin1 string to a word array.\n   *\n   * @param {string} latin1Str The Latin1 string.\n   *\n   * @return {WordArray} The word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n   */\n  parse(latin1Str) {\n    // Shortcut\n    const latin1StrLength = latin1Str.length;\n\n    // Convert\n    const words = [];\n    for (let i = 0; i < latin1StrLength; i += 1) {\n      words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n    }\n\n    return new WordArray(words, latin1StrLength);\n  },\n};\n\n/**\n * UTF-8 encoding strategy.\n */\nexport const Utf8 = {\n  /**\n   * Converts a word array to a UTF-8 string.\n   *\n   * @param {WordArray} wordArray The word array.\n   *\n   * @return {string} The UTF-8 string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n   */\n  stringify(wordArray) {\n    try {\n      return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n    } catch (e) {\n      throw new Error('Malformed UTF-8 data');\n    }\n  },\n\n  /**\n   * Converts a UTF-8 string to a word array.\n   *\n   * @param {string} utf8Str The UTF-8 string.\n   *\n   * @return {WordArray} The word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n   */\n  parse(utf8Str) {\n    return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n  },\n};\n\n/**\n * Abstract buffered block algorithm template.\n *\n * The property blockSize must be implemented in a concrete subtype.\n *\n * @property {number} _minBufferSize\n *\n *     The number of blocks that should be kept unprocessed in the buffer. Default: 0\n */\nexport class BufferedBlockAlgorithm extends Base {\n  constructor() {\n    super();\n    this._minBufferSize = 0;\n  }\n\n  /**\n   * Resets this block algorithm's data buffer to its initial state.\n   *\n   * @example\n   *\n   *     bufferedBlockAlgorithm.reset();\n   */\n  reset() {\n    // Initial values\n    this._data = new WordArray();\n    this._nDataBytes = 0;\n  }\n\n  /**\n   * Adds new data to this block algorithm's buffer.\n   *\n   * @param {WordArray|string} data\n   *\n   *     The data to append. Strings are converted to a WordArray using UTF-8.\n   *\n   * @example\n   *\n   *     bufferedBlockAlgorithm._append('data');\n   *     bufferedBlockAlgorithm._append(wordArray);\n   */\n  _append(data) {\n    let m_data = data;\n\n    // Convert string to WordArray, else assume WordArray already\n    if (typeof m_data === 'string') {\n      m_data = Utf8.parse(m_data);\n    }\n\n    // Append\n    this._data.concat(m_data);\n    this._nDataBytes += m_data.sigBytes;\n  }\n\n  /**\n   * Processes available data blocks.\n   *\n   * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n   *\n   * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n   *\n   * @return {WordArray} The processed data.\n   *\n   * @example\n   *\n   *     var processedData = bufferedBlockAlgorithm._process();\n   *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n   */\n  _process(doFlush) {\n    let processedWords;\n\n    // Shortcuts\n    const { _data: data, blockSize } = this;\n    const dataWords = data.words;\n    const dataSigBytes = data.sigBytes;\n    const blockSizeBytes = blockSize * 4;\n\n    // Count blocks ready\n    let nBlocksReady = dataSigBytes / blockSizeBytes;\n    if (doFlush) {\n      // Round up to include partial blocks\n      nBlocksReady = Math.ceil(nBlocksReady);\n    } else {\n      // Round down to include only full blocks,\n      // less the number of blocks that must remain in the buffer\n      nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n    }\n\n    // Count words ready\n    const nWordsReady = nBlocksReady * blockSize;\n\n    // Count bytes ready\n    const nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n    // Process blocks\n    if (nWordsReady) {\n      for (let offset = 0; offset < nWordsReady; offset += blockSize) {\n        // Perform concrete-algorithm logic\n        this._doProcessBlock(dataWords, offset);\n      }\n\n      // Remove processed words\n      processedWords = dataWords.splice(0, nWordsReady);\n      data.sigBytes -= nBytesReady;\n    }\n\n    // Return processed words\n    return new WordArray(processedWords, nBytesReady);\n  }\n\n  /**\n   * Creates a copy of this object.\n   *\n   * @return {Object} The clone.\n   *\n   * @example\n   *\n   *     var clone = bufferedBlockAlgorithm.clone();\n   */\n  clone() {\n    const clone = super.clone.call(this);\n    clone._data = this._data.clone();\n\n    return clone;\n  }\n}\n\n/**\n * Abstract hasher template.\n *\n * @property {number} blockSize\n *\n *     The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n */\nexport class Hasher extends BufferedBlockAlgorithm {\n  constructor(cfg) {\n    super();\n\n    this.blockSize = 512 / 32;\n\n    /**\n     * Configuration options.\n     */\n    this.cfg = Object.assign(new Base(), cfg);\n\n    // Set initial values\n    this.reset();\n  }\n\n  /**\n   * Creates a shortcut function to a hasher's object interface.\n   *\n   * @param {Hasher} SubHasher The hasher to create a helper for.\n   *\n   * @return {Function} The shortcut function.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n   */\n  static _createHelper(SubHasher) {\n    return (message, cfg) => new SubHasher(cfg).finalize(message);\n  }\n\n  /**\n   * Creates a shortcut function to the HMAC's object interface.\n   *\n   * @param {Hasher} SubHasher The hasher to use in this HMAC helper.\n   *\n   * @return {Function} The shortcut function.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n   */\n  static _createHmacHelper(SubHasher) {\n    return (message, key) => new HMAC(SubHasher, key).finalize(message);\n  }\n\n  /**\n   * Resets this hasher to its initial state.\n   *\n   * @example\n   *\n   *     hasher.reset();\n   */\n  reset() {\n    // Reset data buffer\n    super.reset.call(this);\n\n    // Perform concrete-hasher logic\n    this._doReset();\n  }\n\n  /**\n   * Updates this hasher with a message.\n   *\n   * @param {WordArray|string} messageUpdate The message to append.\n   *\n   * @return {Hasher} This hasher.\n   *\n   * @example\n   *\n   *     hasher.update('message');\n   *     hasher.update(wordArray);\n   */\n  update(messageUpdate) {\n    // Append\n    this._append(messageUpdate);\n\n    // Update the hash\n    this._process();\n\n    // Chainable\n    return this;\n  }\n\n  /**\n   * Finalizes the hash computation.\n   * Note that the finalize operation is effectively a destructive, read-once operation.\n   *\n   * @param {WordArray|string} messageUpdate (Optional) A final message update.\n   *\n   * @return {WordArray} The hash.\n   *\n   * @example\n   *\n   *     var hash = hasher.finalize();\n   *     var hash = hasher.finalize('message');\n   *     var hash = hasher.finalize(wordArray);\n   */\n  finalize(messageUpdate) {\n    // Final message update\n    if (messageUpdate) {\n      this._append(messageUpdate);\n    }\n\n    // Perform concrete-hasher logic\n    const hash = this._doFinalize();\n\n    return hash;\n  }\n}\n\n/**\n * HMAC algorithm.\n */\nexport class HMAC extends Base {\n  /**\n   * Initializes a newly created HMAC.\n   *\n   * @param {Hasher} SubHasher The hash algorithm to use.\n   * @param {WordArray|string} key The secret key.\n   *\n   * @example\n   *\n   *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n   */\n  constructor(SubHasher, key) {\n    super();\n\n    const hasher = new SubHasher();\n    this._hasher = hasher;\n\n    // Convert string to WordArray, else assume WordArray already\n    let _key = key;\n    if (typeof _key === 'string') {\n      _key = Utf8.parse(_key);\n    }\n\n    // Shortcuts\n    const hasherBlockSize = hasher.blockSize;\n    const hasherBlockSizeBytes = hasherBlockSize * 4;\n\n    // Allow arbitrary length keys\n    if (_key.sigBytes > hasherBlockSizeBytes) {\n      _key = hasher.finalize(key);\n    }\n\n    // Clamp excess bits\n    _key.clamp();\n\n    // Clone key for inner and outer pads\n    const oKey = _key.clone();\n    this._oKey = oKey;\n    const iKey = _key.clone();\n    this._iKey = iKey;\n\n    // Shortcuts\n    const oKeyWords = oKey.words;\n    const iKeyWords = iKey.words;\n\n    // XOR keys with pad constants\n    for (let i = 0; i < hasherBlockSize; i += 1) {\n      oKeyWords[i] ^= 0x5c5c5c5c;\n      iKeyWords[i] ^= 0x36363636;\n    }\n    oKey.sigBytes = hasherBlockSizeBytes;\n    iKey.sigBytes = hasherBlockSizeBytes;\n\n    // Set initial values\n    this.reset();\n  }\n\n  /**\n   * Resets this HMAC to its initial state.\n   *\n   * @example\n   *\n   *     hmacHasher.reset();\n   */\n  reset() {\n    // Shortcut\n    const hasher = this._hasher;\n\n    // Reset\n    hasher.reset();\n    hasher.update(this._iKey);\n  }\n\n  /**\n   * Updates this HMAC with a message.\n   *\n   * @param {WordArray|string} messageUpdate The message to append.\n   *\n   * @return {HMAC} This HMAC instance.\n   *\n   * @example\n   *\n   *     hmacHasher.update('message');\n   *     hmacHasher.update(wordArray);\n   */\n  update(messageUpdate) {\n    this._hasher.update(messageUpdate);\n\n    // Chainable\n    return this;\n  }\n\n  /**\n   * Finalizes the HMAC computation.\n   * Note that the finalize operation is effectively a destructive, read-once operation.\n   *\n   * @param {WordArray|string} messageUpdate (Optional) A final message update.\n   *\n   * @return {WordArray} The HMAC.\n   *\n   * @example\n   *\n   *     var hmac = hmacHasher.finalize();\n   *     var hmac = hmacHasher.finalize('message');\n   *     var hmac = hmacHasher.finalize(wordArray);\n   */\n  finalize(messageUpdate) {\n    // Shortcut\n    const hasher = this._hasher;\n\n    // Compute HMAC\n    const innerHash = hasher.finalize(messageUpdate);\n    hasher.reset();\n    const hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n    return hmac;\n  }\n}\n","import {\n  WordArray,\n} from './core.js';\n\nconst parseLoop = (base64Str, base64StrLength, reverseMap) => {\n  const words = [];\n  let nBytes = 0;\n  for (let i = 0; i < base64StrLength; i += 1) {\n    if (i % 4) {\n      const bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n      const bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n      const bitsCombined = bits1 | bits2;\n      words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);\n      nBytes += 1;\n    }\n  }\n  return WordArray.create(words, nBytes);\n};\n\n/**\n * Base64 encoding strategy.\n */\nexport const Base64 = {\n  /**\n   * Converts a word array to a Base64 string.\n   *\n   * @param {WordArray} wordArray The word array.\n   *\n   * @return {string} The Base64 string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const base64String = CryptoJS.enc.Base64.stringify(wordArray);\n   */\n  stringify(wordArray) {\n    // Shortcuts\n    const { words, sigBytes } = wordArray;\n    const map = this._map;\n\n    // Clamp excess bits\n    wordArray.clamp();\n\n    // Convert\n    const base64Chars = [];\n    for (let i = 0; i < sigBytes; i += 3) {\n      const byte1 = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n      const byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n      const byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n      const triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n      for (let j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j += 1) {\n        base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n      }\n    }\n\n    // Add padding\n    const paddingChar = map.charAt(64);\n    if (paddingChar) {\n      while (base64Chars.length % 4) {\n        base64Chars.push(paddingChar);\n      }\n    }\n\n    return base64Chars.join('');\n  },\n\n  /**\n   * Converts a Base64 string to a word array.\n   *\n   * @param {string} base64Str The Base64 string.\n   *\n   * @return {WordArray} The word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const wordArray = CryptoJS.enc.Base64.parse(base64String);\n   */\n  parse(base64Str) {\n    // Shortcuts\n    let base64StrLength = base64Str.length;\n    const map = this._map;\n    let reverseMap = this._reverseMap;\n\n    if (!reverseMap) {\n      this._reverseMap = [];\n      reverseMap = this._reverseMap;\n      for (let j = 0; j < map.length; j += 1) {\n        reverseMap[map.charCodeAt(j)] = j;\n      }\n    }\n\n    // Ignore padding\n    const paddingChar = map.charAt(64);\n    if (paddingChar) {\n      const paddingIndex = base64Str.indexOf(paddingChar);\n      if (paddingIndex !== -1) {\n        base64StrLength = paddingIndex;\n      }\n    }\n\n    // Convert\n    return parseLoop(base64Str, base64StrLength, reverseMap);\n  },\n\n  _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n};\n","import {\n  Base,\n  WordArray,\n} from './core.js';\nimport { MD5Algo } from './md5.js';\n\n/**\n * This key derivation function is meant to conform with EVP_BytesToKey.\n * www.openssl.org/docs/crypto/EVP_BytesToKey.html\n */\nexport class EvpKDFAlgo extends Base {\n  /**\n   * Initializes a newly created key derivation function.\n   *\n   * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n   *\n   * @example\n   *\n   *     const kdf = CryptoJS.algo.EvpKDF.create();\n   *     const kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });\n   *     const kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });\n   */\n  constructor(cfg) {\n    super();\n\n    /**\n     * Configuration options.\n     *\n     * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n     * @property {Hasher} hasher The hash algorithm to use. Default: MD5\n     * @property {number} iterations The number of iterations to perform. Default: 1\n     */\n    this.cfg = Object.assign(\n      new Base(),\n      {\n        keySize: 128 / 32,\n        hasher: MD5Algo,\n        iterations: 1,\n      },\n      cfg,\n    );\n  }\n\n  /**\n   * Derives a key from a password.\n   *\n   * @param {WordArray|string} password The password.\n   * @param {WordArray|string} salt A salt.\n   *\n   * @return {WordArray} The derived key.\n   *\n   * @example\n   *\n   *     const key = kdf.compute(password, salt);\n   */\n  compute(password, salt) {\n    let block;\n\n    // Shortcut\n    const { cfg } = this;\n\n    // Init hasher\n    const hasher = cfg.hasher.create();\n\n    // Initial values\n    const derivedKey = WordArray.create();\n\n    // Shortcuts\n    const derivedKeyWords = derivedKey.words;\n    const { keySize, iterations } = cfg;\n\n    // Generate key\n    while (derivedKeyWords.length < keySize) {\n      if (block) {\n        hasher.update(block);\n      }\n      block = hasher.update(password).finalize(salt);\n      hasher.reset();\n\n      // Iterations\n      for (let i = 1; i < iterations; i += 1) {\n        block = hasher.finalize(block);\n        hasher.reset();\n      }\n\n      derivedKey.concat(block);\n    }\n    derivedKey.sigBytes = keySize * 4;\n\n    return derivedKey;\n  }\n}\n\n/**\n * Derives a key from a password.\n *\n * @param {WordArray|string} password The password.\n * @param {WordArray|string} salt A salt.\n * @param {Object} cfg (Optional) The configuration options to use for this computation.\n *\n * @return {WordArray} The derived key.\n *\n * @static\n *\n * @example\n *\n *     var key = CryptoJS.EvpKDF(password, salt);\n *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });\n *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });\n */\nexport const EvpKDF = (password, salt, cfg) => EvpKDFAlgo.create(cfg).compute(password, salt);\n","/* eslint-disable no-use-before-define */\n\nimport {\n  Base,\n  WordArray,\n  BufferedBlockAlgorithm,\n} from './core.js';\nimport { Base64 } from './enc-base64.js';\nimport { EvpKDFAlgo } from './evpkdf.js';\n\n/**\n * Abstract base cipher template.\n *\n * @property {number} keySize This cipher's key size. Default: 4 (128 bits)\n * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)\n * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.\n * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.\n */\nexport class Cipher extends BufferedBlockAlgorithm {\n  /**\n   * Initializes a newly created cipher.\n   *\n   * @param {number} xformMode Either the encryption or decryption transormation mode constant.\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @example\n   *\n   *     const cipher = CryptoJS.algo.AES.create(\n   *       CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray }\n   *     );\n   */\n  constructor(xformMode, key, cfg) {\n    super();\n\n    /**\n     * Configuration options.\n     *\n     * @property {WordArray} iv The IV to use for this operation.\n     */\n    this.cfg = Object.assign(new Base(), cfg);\n\n    // Store transform mode and key\n    this._xformMode = xformMode;\n    this._key = key;\n\n    // Set initial values\n    this.reset();\n  }\n\n  /**\n   * Creates this cipher in encryption mode.\n   *\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {Cipher} A cipher instance.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });\n   */\n  static createEncryptor(key, cfg) {\n    return this.create(this._ENC_XFORM_MODE, key, cfg);\n  }\n\n  /**\n   * Creates this cipher in decryption mode.\n   *\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {Cipher} A cipher instance.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });\n   */\n  static createDecryptor(key, cfg) {\n    return this.create(this._DEC_XFORM_MODE, key, cfg);\n  }\n\n  /**\n   * Creates shortcut functions to a cipher's object interface.\n   *\n   * @param {Cipher} cipher The cipher to create a helper for.\n   *\n   * @return {Object} An object with encrypt and decrypt shortcut functions.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);\n   */\n  static _createHelper(SubCipher) {\n    const selectCipherStrategy = (key) => {\n      if (typeof key === 'string') {\n        return PasswordBasedCipher;\n      }\n      return SerializableCipher;\n    };\n\n    return {\n      encrypt(message, key, cfg) {\n        return selectCipherStrategy(key).encrypt(SubCipher, message, key, cfg);\n      },\n\n      decrypt(ciphertext, key, cfg) {\n        return selectCipherStrategy(key).decrypt(SubCipher, ciphertext, key, cfg);\n      },\n    };\n  }\n\n  /**\n   * Resets this cipher to its initial state.\n   *\n   * @example\n   *\n   *     cipher.reset();\n   */\n  reset() {\n    // Reset data buffer\n    super.reset.call(this);\n\n    // Perform concrete-cipher logic\n    this._doReset();\n  }\n\n  /**\n   * Adds data to be encrypted or decrypted.\n   *\n   * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.\n   *\n   * @return {WordArray} The data after processing.\n   *\n   * @example\n   *\n   *     const encrypted = cipher.process('data');\n   *     const encrypted = cipher.process(wordArray);\n   */\n  process(dataUpdate) {\n    // Append\n    this._append(dataUpdate);\n\n    // Process available blocks\n    return this._process();\n  }\n\n  /**\n   * Finalizes the encryption or decryption process.\n   * Note that the finalize operation is effectively a destructive, read-once operation.\n   *\n   * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.\n   *\n   * @return {WordArray} The data after final processing.\n   *\n   * @example\n   *\n   *     const encrypted = cipher.finalize();\n   *     const encrypted = cipher.finalize('data');\n   *     const encrypted = cipher.finalize(wordArray);\n   */\n  finalize(dataUpdate) {\n    // Final data update\n    if (dataUpdate) {\n      this._append(dataUpdate);\n    }\n\n    // Perform concrete-cipher logic\n    const finalProcessedData = this._doFinalize();\n\n    return finalProcessedData;\n  }\n}\nCipher._ENC_XFORM_MODE = 1;\nCipher._DEC_XFORM_MODE = 2;\nCipher.keySize = 128 / 32;\nCipher.ivSize = 128 / 32;\n\n/**\n * Abstract base stream cipher template.\n *\n * @property {number} blockSize\n *\n *     The number of 32-bit words this cipher operates on. Default: 1 (32 bits)\n */\nexport class StreamCipher extends Cipher {\n  constructor(...args) {\n    super(...args);\n\n    this.blockSize = 1;\n  }\n\n  _doFinalize() {\n    // Process partial blocks\n    const finalProcessedBlocks = this._process(!!'flush');\n\n    return finalProcessedBlocks;\n  }\n}\n\n/**\n * Abstract base block cipher mode template.\n */\nexport class BlockCipherMode extends Base {\n  /**\n   * Initializes a newly created mode.\n   *\n   * @param {Cipher} cipher A block cipher instance.\n   * @param {Array} iv The IV words.\n   *\n   * @example\n   *\n   *     const mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);\n   */\n  constructor(cipher, iv) {\n    super();\n\n    this._cipher = cipher;\n    this._iv = iv;\n  }\n\n  /**\n   * Creates this mode for encryption.\n   *\n   * @param {Cipher} cipher A block cipher instance.\n   * @param {Array} iv The IV words.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);\n   */\n  static createEncryptor(cipher, iv) {\n    return this.Encryptor.create(cipher, iv);\n  }\n\n  /**\n   * Creates this mode for decryption.\n   *\n   * @param {Cipher} cipher A block cipher instance.\n   * @param {Array} iv The IV words.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);\n   */\n  static createDecryptor(cipher, iv) {\n    return this.Decryptor.create(cipher, iv);\n  }\n}\n\nfunction xorBlock(words, offset, blockSize) {\n  const _words = words;\n  let block;\n\n  // Shortcut\n  const iv = this._iv;\n\n  // Choose mixing block\n  if (iv) {\n    block = iv;\n\n    // Remove IV for subsequent blocks\n    this._iv = undefined;\n  } else {\n    block = this._prevBlock;\n  }\n\n  // XOR blocks\n  for (let i = 0; i < blockSize; i += 1) {\n    _words[offset + i] ^= block[i];\n  }\n}\n\n/**\n * Cipher Block Chaining mode.\n */\n\n/**\n * Abstract base CBC mode.\n */\nexport class CBC extends BlockCipherMode {\n}\n/**\n * CBC encryptor.\n */\nCBC.Encryptor = class extends CBC {\n  /**\n   * Processes the data block at offset.\n   *\n   * @param {Array} words The data words to operate on.\n   * @param {number} offset The offset where the block starts.\n   *\n   * @example\n   *\n   *     mode.processBlock(data.words, offset);\n   */\n  processBlock(words, offset) {\n    // Shortcuts\n    const cipher = this._cipher;\n    const { blockSize } = cipher;\n\n    // XOR and encrypt\n    xorBlock.call(this, words, offset, blockSize);\n    cipher.encryptBlock(words, offset);\n\n    // Remember this block to use with next block\n    this._prevBlock = words.slice(offset, offset + blockSize);\n  }\n};\n/**\n * CBC decryptor.\n */\nCBC.Decryptor = class extends CBC {\n  /**\n   * Processes the data block at offset.\n   *\n   * @param {Array} words The data words to operate on.\n   * @param {number} offset The offset where the block starts.\n   *\n   * @example\n   *\n   *     mode.processBlock(data.words, offset);\n   */\n  processBlock(words, offset) {\n    // Shortcuts\n    const cipher = this._cipher;\n    const { blockSize } = cipher;\n\n    // Remember this block to use with next block\n    const thisBlock = words.slice(offset, offset + blockSize);\n\n    // Decrypt and XOR\n    cipher.decryptBlock(words, offset);\n    xorBlock.call(this, words, offset, blockSize);\n\n    // This block becomes the previous block\n    this._prevBlock = thisBlock;\n  }\n};\n\n/**\n * PKCS #5/7 padding strategy.\n */\nexport const Pkcs7 = {\n  /**\n   * Pads data using the algorithm defined in PKCS #5/7.\n   *\n   * @param {WordArray} data The data to pad.\n   * @param {number} blockSize The multiple that the data should be padded to.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);\n   */\n  pad(data, blockSize) {\n    // Shortcut\n    const blockSizeBytes = blockSize * 4;\n\n    // Count padding bytes\n    const nPaddingBytes = blockSizeBytes - (data.sigBytes % blockSizeBytes);\n\n    // Create padding word\n    const paddingWord = (nPaddingBytes << 24)\n      | (nPaddingBytes << 16)\n      | (nPaddingBytes << 8)\n      | nPaddingBytes;\n\n    // Create padding\n    const paddingWords = [];\n    for (let i = 0; i < nPaddingBytes; i += 4) {\n      paddingWords.push(paddingWord);\n    }\n    const padding = WordArray.create(paddingWords, nPaddingBytes);\n\n    // Add padding\n    data.concat(padding);\n  },\n\n  /**\n   * Unpads data that had been padded using the algorithm defined in PKCS #5/7.\n   *\n   * @param {WordArray} data The data to unpad.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     CryptoJS.pad.Pkcs7.unpad(wordArray);\n   */\n  unpad(data) {\n    const _data = data;\n\n    // Get number of padding bytes from last byte\n    const nPaddingBytes = _data.words[(_data.sigBytes - 1) >>> 2] & 0xff;\n\n    // Remove padding\n    _data.sigBytes -= nPaddingBytes;\n  },\n};\n\n/**\n * Abstract base block cipher template.\n *\n * @property {number} blockSize\n *\n *    The number of 32-bit words this cipher operates on. Default: 4 (128 bits)\n */\nexport class BlockCipher extends Cipher {\n  constructor(xformMode, key, cfg) {\n    /**\n     * Configuration options.\n     *\n     * @property {Mode} mode The block mode to use. Default: CBC\n     * @property {Padding} padding The padding strategy to use. Default: Pkcs7\n     */\n    super(xformMode, key, Object.assign(\n      {\n        mode: CBC,\n        padding: Pkcs7,\n      },\n      cfg,\n    ));\n\n    this.blockSize = 128 / 32;\n  }\n\n  reset() {\n    let modeCreator;\n\n    // Reset cipher\n    super.reset.call(this);\n\n    // Shortcuts\n    const { cfg } = this;\n    const { iv, mode } = cfg;\n\n    // Reset block mode\n    if (this._xformMode === this.constructor._ENC_XFORM_MODE) {\n      modeCreator = mode.createEncryptor;\n    } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n      modeCreator = mode.createDecryptor;\n      // Keep at least one block in the buffer for unpadding\n      this._minBufferSize = 1;\n    }\n\n    this._mode = modeCreator.call(mode, this, iv && iv.words);\n    this._mode.__creator = modeCreator;\n  }\n\n  _doProcessBlock(words, offset) {\n    this._mode.processBlock(words, offset);\n  }\n\n  _doFinalize() {\n    let finalProcessedBlocks;\n\n    // Shortcut\n    const { padding } = this.cfg;\n\n    // Finalize\n    if (this._xformMode === this.constructor._ENC_XFORM_MODE) {\n      // Pad data\n      padding.pad(this._data, this.blockSize);\n\n      // Process final blocks\n      finalProcessedBlocks = this._process(!!'flush');\n    } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n      // Process final blocks\n      finalProcessedBlocks = this._process(!!'flush');\n\n      // Unpad data\n      padding.unpad(finalProcessedBlocks);\n    }\n\n    return finalProcessedBlocks;\n  }\n}\n\n/**\n * A collection of cipher parameters.\n *\n * @property {WordArray} ciphertext The raw ciphertext.\n * @property {WordArray} key The key to this ciphertext.\n * @property {WordArray} iv The IV used in the ciphering operation.\n * @property {WordArray} salt The salt used with a key derivation function.\n * @property {Cipher} algorithm The cipher algorithm.\n * @property {Mode} mode The block mode used in the ciphering operation.\n * @property {Padding} padding The padding scheme used in the ciphering operation.\n * @property {number} blockSize The block size of the cipher.\n * @property {Format} formatter\n *    The default formatting strategy to convert this cipher params object to a string.\n */\nexport class CipherParams extends Base {\n  /**\n   * Initializes a newly created cipher params object.\n   *\n   * @param {Object} cipherParams An object with any of the possible cipher parameters.\n   *\n   * @example\n   *\n   *     var cipherParams = CryptoJS.lib.CipherParams.create({\n   *         ciphertext: ciphertextWordArray,\n   *         key: keyWordArray,\n   *         iv: ivWordArray,\n   *         salt: saltWordArray,\n   *         algorithm: CryptoJS.algo.AES,\n   *         mode: CryptoJS.mode.CBC,\n   *         padding: CryptoJS.pad.PKCS7,\n   *         blockSize: 4,\n   *         formatter: CryptoJS.format.OpenSSL\n   *     });\n   */\n  constructor(cipherParams) {\n    super();\n\n    this.mixIn(cipherParams);\n  }\n\n  /**\n   * Converts this cipher params object to a string.\n   *\n   * @param {Format} formatter (Optional) The formatting strategy to use.\n   *\n   * @return {string} The stringified cipher params.\n   *\n   * @throws Error If neither the formatter nor the default formatter is set.\n   *\n   * @example\n   *\n   *     var string = cipherParams + '';\n   *     var string = cipherParams.toString();\n   *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);\n   */\n  toString(formatter) {\n    return (formatter || this.formatter).stringify(this);\n  }\n}\n\n/**\n * OpenSSL formatting strategy.\n */\nexport const OpenSSLFormatter = {\n  /**\n   * Converts a cipher params object to an OpenSSL-compatible string.\n   *\n   * @param {CipherParams} cipherParams The cipher params object.\n   *\n   * @return {string} The OpenSSL-compatible string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);\n   */\n  stringify(cipherParams) {\n    let wordArray;\n\n    // Shortcuts\n    const { ciphertext, salt } = cipherParams;\n\n    // Format\n    if (salt) {\n      wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);\n    } else {\n      wordArray = ciphertext;\n    }\n\n    return wordArray.toString(Base64);\n  },\n\n  /**\n   * Converts an OpenSSL-compatible string to a cipher params object.\n   *\n   * @param {string} openSSLStr The OpenSSL-compatible string.\n   *\n   * @return {CipherParams} The cipher params object.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);\n   */\n  parse(openSSLStr) {\n    let salt;\n\n    // Parse base64\n    const ciphertext = Base64.parse(openSSLStr);\n\n    // Shortcut\n    const ciphertextWords = ciphertext.words;\n\n    // Test for salt\n    if (ciphertextWords[0] === 0x53616c74 && ciphertextWords[1] === 0x65645f5f) {\n      // Extract salt\n      salt = WordArray.create(ciphertextWords.slice(2, 4));\n\n      // Remove salt from ciphertext\n      ciphertextWords.splice(0, 4);\n      ciphertext.sigBytes -= 16;\n    }\n\n    return CipherParams.create({ ciphertext, salt });\n  },\n};\n\n/**\n * A cipher wrapper that returns ciphertext as a serializable cipher params object.\n */\nexport class SerializableCipher extends Base {\n  /**\n   * Encrypts a message.\n   *\n   * @param {Cipher} cipher The cipher algorithm to use.\n   * @param {WordArray|string} message The message to encrypt.\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {CipherParams} A cipher params object.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var ciphertextParams = CryptoJS.lib.SerializableCipher\n   *       .encrypt(CryptoJS.algo.AES, message, key);\n   *     var ciphertextParams = CryptoJS.lib.SerializableCipher\n   *       .encrypt(CryptoJS.algo.AES, message, key, { iv: iv });\n   *     var ciphertextParams = CryptoJS.lib.SerializableCipher\n   *       .encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n   */\n  static encrypt(cipher, message, key, cfg) {\n    // Apply config defaults\n    const _cfg = Object.assign(new Base(), this.cfg, cfg);\n\n    // Encrypt\n    const encryptor = cipher.createEncryptor(key, _cfg);\n    const ciphertext = encryptor.finalize(message);\n\n    // Shortcut\n    const cipherCfg = encryptor.cfg;\n\n    // Create and return serializable cipher params\n    return CipherParams.create({\n      ciphertext,\n      key,\n      iv: cipherCfg.iv,\n      algorithm: cipher,\n      mode: cipherCfg.mode,\n      padding: cipherCfg.padding,\n      blockSize: encryptor.blockSize,\n      formatter: _cfg.format,\n    });\n  }\n\n  /**\n   * Decrypts serialized ciphertext.\n   *\n   * @param {Cipher} cipher The cipher algorithm to use.\n   * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {WordArray} The plaintext.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var plaintext = CryptoJS.lib.SerializableCipher\n   *       .decrypt(CryptoJS.algo.AES, formattedCiphertext, key,\n   *         { iv: iv, format: CryptoJS.format.OpenSSL });\n   *     var plaintext = CryptoJS.lib.SerializableCipher\n   *       .decrypt(CryptoJS.algo.AES, ciphertextParams, key,\n   *         { iv: iv, format: CryptoJS.format.OpenSSL });\n   */\n  static decrypt(cipher, ciphertext, key, cfg) {\n    let _ciphertext = ciphertext;\n\n    // Apply config defaults\n    const _cfg = Object.assign(new Base(), this.cfg, cfg);\n\n    // Convert string to CipherParams\n    _ciphertext = this._parse(_ciphertext, _cfg.format);\n\n    // Decrypt\n    const plaintext = cipher.createDecryptor(key, _cfg).finalize(_ciphertext.ciphertext);\n\n    return plaintext;\n  }\n\n  /**\n   * Converts serialized ciphertext to CipherParams,\n   * else assumed CipherParams already and returns ciphertext unchanged.\n   *\n   * @param {CipherParams|string} ciphertext The ciphertext.\n   * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.\n   *\n   * @return {CipherParams} The unserialized ciphertext.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var ciphertextParams = CryptoJS.lib.SerializableCipher\n   *       ._parse(ciphertextStringOrParams, format);\n   */\n  static _parse(ciphertext, format) {\n    if (typeof ciphertext === 'string') {\n      return format.parse(ciphertext, this);\n    }\n    return ciphertext;\n  }\n}\n/**\n * Configuration options.\n *\n * @property {Formatter} format\n *\n *    The formatting strategy to convert cipher param objects to and from a string.\n *    Default: OpenSSL\n */\nSerializableCipher.cfg = Object.assign(\n  new Base(),\n  { format: OpenSSLFormatter },\n);\n\n/**\n * OpenSSL key derivation function.\n */\nexport const OpenSSLKdf = {\n  /**\n   * Derives a key and IV from a password.\n   *\n   * @param {string} password The password to derive from.\n   * @param {number} keySize The size in words of the key to generate.\n   * @param {number} ivSize The size in words of the IV to generate.\n   * @param {WordArray|string} salt\n   *     (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.\n   *\n   * @return {CipherParams} A cipher params object with the key, IV, and salt.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);\n   *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');\n   */\n  execute(password, keySize, ivSize, salt) {\n    let _salt = salt;\n\n    // Generate random salt\n    if (!_salt) {\n      _salt = WordArray.random(64 / 8);\n    }\n\n    // Derive key and IV\n    const key = EvpKDFAlgo.create({ keySize: keySize + ivSize }).compute(password, _salt);\n\n    // Separate key and IV\n    const iv = WordArray.create(key.words.slice(keySize), ivSize * 4);\n    key.sigBytes = keySize * 4;\n\n    // Return params\n    return CipherParams.create({ key, iv, salt: _salt });\n  },\n};\n\n/**\n * A serializable cipher wrapper that derives the key from a password,\n * and returns ciphertext as a serializable cipher params object.\n */\nexport class PasswordBasedCipher extends SerializableCipher {\n  /**\n   * Encrypts a message using a password.\n   *\n   * @param {Cipher} cipher The cipher algorithm to use.\n   * @param {WordArray|string} message The message to encrypt.\n   * @param {string} password The password.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {CipherParams} A cipher params object.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher\n   *       .encrypt(CryptoJS.algo.AES, message, 'password');\n   *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher\n   *       .encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });\n   */\n  static encrypt(cipher, message, password, cfg) {\n    // Apply config defaults\n    const _cfg = Object.assign(new Base(), this.cfg, cfg);\n\n    // Derive key and other params\n    const derivedParams = _cfg.kdf.execute(password, cipher.keySize, cipher.ivSize);\n\n    // Add IV to config\n    _cfg.iv = derivedParams.iv;\n\n    // Encrypt\n    const ciphertext = SerializableCipher.encrypt\n      .call(this, cipher, message, derivedParams.key, _cfg);\n\n    // Mix in derived params\n    ciphertext.mixIn(derivedParams);\n\n    return ciphertext;\n  }\n\n  /**\n   * Decrypts serialized ciphertext using a password.\n   *\n   * @param {Cipher} cipher The cipher algorithm to use.\n   * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n   * @param {string} password The password.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {WordArray} The plaintext.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var plaintext = CryptoJS.lib.PasswordBasedCipher\n   *       .decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password',\n   *         { format: CryptoJS.format.OpenSSL });\n   *     var plaintext = CryptoJS.lib.PasswordBasedCipher\n   *       .decrypt(CryptoJS.algo.AES, ciphertextParams, 'password',\n   *         { format: CryptoJS.format.OpenSSL });\n   */\n  static decrypt(cipher, ciphertext, password, cfg) {\n    let _ciphertext = ciphertext;\n\n    // Apply config defaults\n    const _cfg = Object.assign(new Base(), this.cfg, cfg);\n\n    // Convert string to CipherParams\n    _ciphertext = this._parse(_ciphertext, _cfg.format);\n\n    // Derive key and other params\n    const derivedParams = _cfg.kdf\n      .execute(password, cipher.keySize, cipher.ivSize, _ciphertext.salt);\n\n    // Add IV to config\n    _cfg.iv = derivedParams.iv;\n\n    // Decrypt\n    const plaintext = SerializableCipher.decrypt\n      .call(this, cipher, _ciphertext, derivedParams.key, _cfg);\n\n    return plaintext;\n  }\n}\n/**\n * Configuration options.\n *\n * @property {KDF} kdf\n *     The key derivation function to use to generate a key and IV from a password.\n *     Default: OpenSSL\n */\nPasswordBasedCipher.cfg = Object.assign(SerializableCipher.cfg, { kdf: OpenSSLKdf });\n","import {\n  BlockCipher,\n} from './cipher-core.js';\n\n// Lookup tables\nconst _SBOX = [];\nconst INV_SBOX = [];\nconst _SUB_MIX_0 = [];\nconst _SUB_MIX_1 = [];\nconst _SUB_MIX_2 = [];\nconst _SUB_MIX_3 = [];\nconst INV_SUB_MIX_0 = [];\nconst INV_SUB_MIX_1 = [];\nconst INV_SUB_MIX_2 = [];\nconst INV_SUB_MIX_3 = [];\n\n// Compute lookup tables\n\n// Compute double table\nconst d = [];\nfor (let i = 0; i < 256; i += 1) {\n  if (i < 128) {\n    d[i] = i << 1;\n  } else {\n    d[i] = (i << 1) ^ 0x11b;\n  }\n}\n\n// Walk GF(2^8)\nlet x = 0;\nlet xi = 0;\nfor (let i = 0; i < 256; i += 1) {\n  // Compute sbox\n  let sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\n  sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\n  _SBOX[x] = sx;\n  INV_SBOX[sx] = x;\n\n  // Compute multiplication\n  const x2 = d[x];\n  const x4 = d[x2];\n  const x8 = d[x4];\n\n  // Compute sub bytes, mix columns tables\n  let t = (d[sx] * 0x101) ^ (sx * 0x1010100);\n  _SUB_MIX_0[x] = (t << 24) | (t >>> 8);\n  _SUB_MIX_1[x] = (t << 16) | (t >>> 16);\n  _SUB_MIX_2[x] = (t << 8) | (t >>> 24);\n  _SUB_MIX_3[x] = t;\n\n  // Compute inv sub bytes, inv mix columns tables\n  t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\n  INV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);\n  INV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);\n  INV_SUB_MIX_2[sx] = (t << 8) | (t >>> 24);\n  INV_SUB_MIX_3[sx] = t;\n\n  // Compute next counter\n  if (!x) {\n    xi = 1;\n    x = xi;\n  } else {\n    x = x2 ^ d[d[d[x8 ^ x2]]];\n    xi ^= d[d[xi]];\n  }\n}\n\n// Precomputed Rcon lookup\nconst RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n\n/**\n * AES block cipher algorithm.\n */\nexport class AESAlgo extends BlockCipher {\n  _doReset() {\n    let t;\n\n    // Skip reset of nRounds has been set before and key did not change\n    if (this._nRounds && this._keyPriorReset === this._key) {\n      return;\n    }\n\n    // Shortcuts\n    this._keyPriorReset = this._key;\n    const key = this._keyPriorReset;\n    const keyWords = key.words;\n    const keySize = key.sigBytes / 4;\n\n    // Compute number of rounds\n    this._nRounds = keySize + 6;\n    const nRounds = this._nRounds;\n\n    // Compute number of key schedule rows\n    const ksRows = (nRounds + 1) * 4;\n\n    // Compute key schedule\n    this._keySchedule = [];\n    const keySchedule = this._keySchedule;\n    for (let ksRow = 0; ksRow < ksRows; ksRow += 1) {\n      if (ksRow < keySize) {\n        keySchedule[ksRow] = keyWords[ksRow];\n      } else {\n        t = keySchedule[ksRow - 1];\n\n        if (!(ksRow % keySize)) {\n          // Rot word\n          t = (t << 8) | (t >>> 24);\n\n          // Sub word\n          t = (_SBOX[t >>> 24] << 24)\n            | (_SBOX[(t >>> 16) & 0xff] << 16)\n            | (_SBOX[(t >>> 8) & 0xff] << 8)\n            | _SBOX[t & 0xff];\n\n          // Mix Rcon\n          t ^= RCON[(ksRow / keySize) | 0] << 24;\n        } else if (keySize > 6 && ksRow % keySize === 4) {\n          // Sub word\n          t = (_SBOX[t >>> 24] << 24)\n            | (_SBOX[(t >>> 16) & 0xff] << 16)\n            | (_SBOX[(t >>> 8) & 0xff] << 8)\n            | _SBOX[t & 0xff];\n        }\n\n        keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;\n      }\n    }\n\n    // Compute inv key schedule\n    this._invKeySchedule = [];\n    const invKeySchedule = this._invKeySchedule;\n    for (let invKsRow = 0; invKsRow < ksRows; invKsRow += 1) {\n      const ksRow = ksRows - invKsRow;\n\n      if (invKsRow % 4) {\n        t = keySchedule[ksRow];\n      } else {\n        t = keySchedule[ksRow - 4];\n      }\n\n      if (invKsRow < 4 || ksRow <= 4) {\n        invKeySchedule[invKsRow] = t;\n      } else {\n        invKeySchedule[invKsRow] = INV_SUB_MIX_0[_SBOX[t >>> 24]]\n          ^ INV_SUB_MIX_1[_SBOX[(t >>> 16) & 0xff]]\n          ^ INV_SUB_MIX_2[_SBOX[(t >>> 8) & 0xff]]\n          ^ INV_SUB_MIX_3[_SBOX[t & 0xff]];\n      }\n    }\n  }\n\n  encryptBlock(M, offset) {\n    this._doCryptBlock(\n      M, offset, this._keySchedule, _SUB_MIX_0, _SUB_MIX_1, _SUB_MIX_2, _SUB_MIX_3, _SBOX,\n    );\n  }\n\n  decryptBlock(M, offset) {\n    const _M = M;\n\n    // Swap 2nd and 4th rows\n    let t = _M[offset + 1];\n    _M[offset + 1] = _M[offset + 3];\n    _M[offset + 3] = t;\n\n    this._doCryptBlock(\n      _M,\n      offset,\n      this._invKeySchedule,\n      INV_SUB_MIX_0,\n      INV_SUB_MIX_1,\n      INV_SUB_MIX_2,\n      INV_SUB_MIX_3,\n      INV_SBOX,\n    );\n\n    // Inv swap 2nd and 4th rows\n    t = _M[offset + 1];\n    _M[offset + 1] = _M[offset + 3];\n    _M[offset + 3] = t;\n  }\n\n  _doCryptBlock(M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {\n    const _M = M;\n\n    // Shortcut\n    const nRounds = this._nRounds;\n\n    // Get input, add round key\n    let s0 = _M[offset] ^ keySchedule[0];\n    let s1 = _M[offset + 1] ^ keySchedule[1];\n    let s2 = _M[offset + 2] ^ keySchedule[2];\n    let s3 = _M[offset + 3] ^ keySchedule[3];\n\n    // Key schedule row counter\n    let ksRow = 4;\n\n    // Rounds\n    for (let round = 1; round < nRounds; round += 1) {\n      // Shift rows, sub bytes, mix columns, add round key\n      const t0 = SUB_MIX_0[s0 >>> 24]\n        ^ SUB_MIX_1[(s1 >>> 16) & 0xff]\n        ^ SUB_MIX_2[(s2 >>> 8) & 0xff]\n        ^ SUB_MIX_3[s3 & 0xff]\n        ^ keySchedule[ksRow];\n      ksRow += 1;\n      const t1 = SUB_MIX_0[s1 >>> 24]\n        ^ SUB_MIX_1[(s2 >>> 16) & 0xff]\n        ^ SUB_MIX_2[(s3 >>> 8) & 0xff]\n        ^ SUB_MIX_3[s0 & 0xff]\n        ^ keySchedule[ksRow];\n      ksRow += 1;\n      const t2 = SUB_MIX_0[s2 >>> 24]\n        ^ SUB_MIX_1[(s3 >>> 16) & 0xff]\n        ^ SUB_MIX_2[(s0 >>> 8) & 0xff]\n        ^ SUB_MIX_3[s1 & 0xff]\n        ^ keySchedule[ksRow];\n      ksRow += 1;\n      const t3 = SUB_MIX_0[s3 >>> 24]\n        ^ SUB_MIX_1[(s0 >>> 16) & 0xff]\n        ^ SUB_MIX_2[(s1 >>> 8) & 0xff]\n        ^ SUB_MIX_3[s2 & 0xff]\n        ^ keySchedule[ksRow];\n      ksRow += 1;\n\n      // Update state\n      s0 = t0;\n      s1 = t1;\n      s2 = t2;\n      s3 = t3;\n    }\n\n    // Shift rows, sub bytes, add round key\n    const t0 = (\n      (SBOX[s0 >>> 24] << 24)\n        | (SBOX[(s1 >>> 16) & 0xff] << 16)\n        | (SBOX[(s2 >>> 8) & 0xff] << 8)\n        | SBOX[s3 & 0xff]\n    ) ^ keySchedule[ksRow];\n    ksRow += 1;\n    const t1 = (\n      (SBOX[s1 >>> 24] << 24)\n        | (SBOX[(s2 >>> 16) & 0xff] << 16)\n        | (SBOX[(s3 >>> 8) & 0xff] << 8)\n        | SBOX[s0 & 0xff]\n    ) ^ keySchedule[ksRow];\n    ksRow += 1;\n    const t2 = (\n      (SBOX[s2 >>> 24] << 24)\n        | (SBOX[(s3 >>> 16) & 0xff] << 16)\n        | (SBOX[(s0 >>> 8) & 0xff] << 8)\n        | SBOX[s1 & 0xff]\n    ) ^ keySchedule[ksRow];\n    ksRow += 1;\n    const t3 = (\n      (SBOX[s3 >>> 24] << 24)\n        | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]\n    ) ^ keySchedule[ksRow];\n    ksRow += 1;\n\n    // Set output\n    _M[offset] = t0;\n    _M[offset + 1] = t1;\n    _M[offset + 2] = t2;\n    _M[offset + 3] = t3;\n  }\n}\nAESAlgo.keySize = 256 / 32;\n\n/**\n * Shortcut functions to the cipher's object interface.\n *\n * @example\n *\n *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);\n *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);\n */\nexport const AES = BlockCipher._createHelper(AESAlgo);\n","/**\n * Counter block mode.\n */\nimport {\n  BlockCipherMode,\n} from './cipher-core.js';\n\nexport class CTR extends BlockCipherMode {\n}\nCTR.Encryptor = class extends CTR {\n  processBlock(words, offset) {\n    const _words = words;\n\n    // Shortcuts\n    const cipher = this._cipher;\n    const { blockSize } = cipher;\n    const iv = this._iv;\n    let counter = this._counter;\n\n    // Generate keystream\n    if (iv) {\n      this._counter = iv.slice(0);\n      counter = this._counter;\n\n      // Remove IV for subsequent blocks\n      this._iv = undefined;\n    }\n    const keystream = counter.slice(0);\n    cipher.encryptBlock(keystream, 0);\n\n    // Increment counter\n    counter[blockSize - 1] = (counter[blockSize - 1] + 1) | 0;\n\n    // Encrypt\n    for (let i = 0; i < blockSize; i += 1) {\n      _words[offset + i] ^= keystream[i];\n    }\n  }\n};\nCTR.Decryptor = CTR.Encryptor;\n","import { FlvDemuxer, FMP4Remuxer, WarningType } from 'xgplayer-transmuxer'\nimport { MSE, Buffer, EVENT, ERR, StreamingError, Logger, concatUint8Array } from 'xgplayer-streaming-shared'\nconst logger = new Logger('BufferService')\n\nexport class BufferService {\n  /** @type {import('../index').Flv | null} */\n  flv = null\n\n  _demuxer = new FlvDemuxer()\n  _remuxer = null\n  _mse = null\n  _softVideo = null\n\n  _sourceCreated = false\n\n  _needInitSegment = true\n  _discontinuity = true\n  _contiguous = false\n\n  _initSegmentId = ''\n\n  _cachedBuffer = null\n\n  _demuxStartTime = 0\n\n  _opts = null\n\n  get baseDts () {\n    return this._demuxer?._fixer?._baseDts\n  }\n\n  /**\n   * @param {import('../index').Flv} flv\n   * @param {Object} [softVideo]\n   */\n  constructor (flv, softVideo, opts) {\n    this.flv = flv\n    this._opts = opts\n\n    if (softVideo) { // soft decode\n      this._softVideo = softVideo\n    } else {\n      this._remuxer = new FMP4Remuxer(this._demuxer.videoTrack, this._demuxer.audioTrack)\n      this._mse = new MSE()\n      this._mse.bindMedia(flv.media)\n    }\n  }\n\n  seamlessSwitch () {\n    this._needInitSegment = true\n    this._discontinuity = true\n    this._contiguous = true\n    this._initSegmentId = ''\n  }\n\n  unContiguous (startTime) {\n    this._contiguous = false\n    this._demuxStartTime = startTime\n  }\n\n  async reset (reuseMse = false) {\n    if (this._mse && !reuseMse) {\n      await this._mse.unbindMedia()\n      await this._mse.bindMedia(this.flv.media)\n    }\n    this._needInitSegment = true\n    this._discontinuity = true\n    this._contiguous = false\n    this._sourceCreated = false\n    this._initSegmentId = ''\n  }\n\n  async endOfStream () {\n    if (this._mse) {\n      if (this._sourceCreated) {\n        await this._mse.endOfStream()\n        this.flv.emit(EVENT.BUFFEREOS)\n      }\n    } else if (this._softVideo) {\n      this._softVideo.endOfStream()\n    }\n  }\n\n  async updateDuration (duration) {\n    if (this._mse) {\n      if (!this._mse.isOpened) {\n        await this._mse.open()\n      }\n      logger.debug('update duration', duration)\n      await this._mse.updateDuration(duration)\n    }\n  }\n\n  async destroy () {\n    if (this._mse) {\n      await this._mse.unbindMedia()\n    }\n\n    this._mse = null\n    this._softVideo = null\n    this._demuxer = null\n    this._remuxer = null\n  }\n\n  async appendBuffer (chunk) {\n    if (this._cachedBuffer) {\n      chunk = concatUint8Array(this._cachedBuffer, chunk)\n      this._cachedBuffer = null\n    }\n\n    const demuxer = this._demuxer\n    if (!chunk || !chunk.length || !demuxer) return\n\n    try {\n      demuxer.demuxAndFix(chunk, this._discontinuity, this._contiguous, this._demuxStartTime)\n    } catch (error) {\n      throw new StreamingError(ERR.DEMUX, ERR.SUB_TYPES.FLV, error)\n    }\n    const { videoTrack, audioTrack, metadataTrack } = demuxer\n\n    let videoExist = videoTrack.exist()\n    let audioExist = audioTrack.exist()\n\n    if (this._opts.onlyAudio) {\n      videoExist = false\n      videoTrack.present = false\n    }\n\n    if (this._opts.onlyVideo) {\n      audioExist = false\n      audioTrack.present = false\n    }\n\n    if (\n      (!videoExist && videoTrack.present) ||\n      (!audioExist && audioTrack.present)\n    ) {\n      let duration = 0\n      const track = videoExist ? videoTrack : audioExist ? audioTrack : undefined\n      if (track && track.samples.length) {\n        duration = ((track.samples[track.samples.length - 1].originPts - track.samples[0].originPts) / track.timescale) * 1000\n      }\n      if (duration > this._opts.analyzeDuration) {\n        logger.warn(`analyze duration exceeded, ${duration}ms`, track)\n        videoTrack.present = videoExist\n        audioTrack.present = audioExist\n        this.flv.emit(EVENT.ANALYZE_DURATION_EXCEEDED, { duration })\n      } else {\n        this._cachedBuffer = chunk\n        return\n      }\n    }\n\n    const videoType = videoTrack.type\n    const audioType = audioTrack.type\n    this._fireEvents(videoTrack, audioTrack, metadataTrack)\n    this._discontinuity = false\n    this._contiguous = true\n    this._demuxStartTime = 0\n\n    const mse = this._mse\n\n    // emit demuxed track\n    this.flv.emit(EVENT.DEMUXED_TRACK, {videoTrack})\n\n    const newId = `${videoTrack.codec}/${videoTrack.width}/${videoTrack.height}/${audioTrack.codec}/${audioTrack.config}`\n    if (newId !== this._initSegmentId) {\n      this._needInitSegment = true\n      this._initSegmentId = newId\n      this._emitMetaParsedEvent(videoTrack, audioTrack)\n    }\n\n    if (mse) {\n      if (!this._sourceCreated) {\n        await mse.open()\n        if (videoExist) {\n          logger.log(`codec: video/mp4;codecs=${videoTrack.codec}`)\n          mse.createSource(videoType, `video/mp4;codecs=${videoTrack.codec}`)\n        }\n        if (audioExist) {\n          logger.log(`codec: audio/mp4;codecs=${audioTrack.codec}`)\n          mse.createSource(audioType, `audio/mp4;codecs=${audioTrack.codec}`)\n        }\n        this._sourceCreated = true\n        this.flv.emit(EVENT.SOURCEBUFFER_CREATED)\n      }\n\n      let remuxResult\n      try {\n        remuxResult = this._remuxer.remux(this._needInitSegment)\n      } catch (error) {\n        throw new StreamingError(ERR.REMUX, ERR.SUB_TYPES.FMP4, error)\n      }\n\n      if (this._needInitSegment && !remuxResult.videoInitSegment && !remuxResult.audioInitSegment) {\n        return\n      }\n\n      this._needInitSegment = false\n\n      const p = []\n      if (remuxResult.videoInitSegment) p.push(mse.append(videoType, remuxResult.videoInitSegment))\n      if (remuxResult.audioInitSegment) p.push(mse.append(audioType, remuxResult.audioInitSegment))\n      if (remuxResult.videoSegment) p.push(mse.append(videoType, remuxResult.videoSegment))\n      if (remuxResult.audioSegment) p.push(mse.append(audioType, remuxResult.audioSegment))\n\n      return Promise.all(p)\n    } else if (this._softVideo) {\n      this._softVideo.appendBuffer(videoTrack, audioTrack)\n    }\n  }\n\n  async evictBuffer (bufferBehind) {\n    const media = this.flv.media\n    if (!this._mse || !this._demuxer || !media || !bufferBehind || bufferBehind < 0) return\n    const currentTime = media.currentTime\n    const removeEnd = currentTime - bufferBehind\n    if (removeEnd <= 0) return\n    const start = Buffer.start(Buffer.get(media))\n    if (start + 1 >= removeEnd) return\n    return this._mse.clearBuffer(0, removeEnd).then(() => this.flv.emit(EVENT.REMOVE_BUFFER, { removeEnd }))\n  }\n\n  _emitMetaParsedEvent (videoTrack, audioTrack) {\n    if (videoTrack.exist()) {\n      this.flv.emit(EVENT.METADATA_PARSED, {\n        type: 'video',\n        track: videoTrack,\n        meta: {\n          codec: videoTrack.codec,\n          timescale: videoTrack.timescale,\n          width: videoTrack.width,\n          height: videoTrack.height,\n          sarRatio: videoTrack.sarRatio,\n          baseDts: videoTrack.baseDts\n        }\n      })\n    }\n    if (audioTrack.exist()) {\n      this.flv.emit(EVENT.METADATA_PARSED, {\n        type: 'audio',\n        track: audioTrack,\n        meta: {\n          codec: audioTrack.codec,\n          channelCount: audioTrack.channelCount,\n          sampleRate: audioTrack.sampleRate,\n          timescale: audioTrack.timescale,\n          baseDts: audioTrack.baseDts\n        }\n      })\n    }\n\n    logger.debug('track parsed', videoTrack, audioTrack)\n  }\n\n  _fireEvents (videoTrack, audioTrack, metadataTrack) {\n    logger.debug(videoTrack.samples, audioTrack.samples)\n\n    metadataTrack.flvScriptSamples.forEach(sample => {\n      this.flv.emit(EVENT.FLV_SCRIPT_DATA, sample)\n      logger.debug('flvScriptData', sample)\n    })\n\n    videoTrack.samples.forEach((sample) => {\n      if (sample.keyframe) {\n        this.flv.emit(EVENT.KEYFRAME, { pts: sample.pts })\n      }\n    })\n\n    videoTrack.warnings.forEach(warn => {\n      let type\n      switch (warn.type) {\n        case WarningType.LARGE_AV_SHIFT:\n          type = EVENT.LARGE_AV_FIRST_FRAME_GAP_DETECT\n          break\n        case WarningType.LARGE_VIDEO_GAP:\n          type = EVENT.LARGE_VIDEO_DTS_GAP_DETECT\n          break\n        case WarningType.LARGE_VIDEO_GAP_BETWEEN_CHUNK:\n          type = EVENT.MAX_DTS_DELTA_WITH_NEXT_SEGMENT_DETECT\n          break\n        default:\n      }\n\n      if (type) this.flv.emit(EVENT.STREAM_EXCEPTION, { ...warn, type })\n      logger.warn('video exception', warn)\n    })\n    audioTrack.warnings.forEach(warn => {\n      let type\n      switch (warn.type) {\n        case WarningType.LARGE_AUDIO_GAP:\n          type = EVENT.LARGE_AUDIO_DTS_GAP_DETECT\n          break\n        case WarningType.AUDIO_FILLED:\n          type = EVENT.AUDIO_GAP_DETECT\n          break\n        case WarningType.AUDIO_DROPPED:\n          type = EVENT.AUDIO_OVERLAP_DETECT\n          break\n        default:\n      }\n\n      if (type) this.flv.emit(EVENT.STREAM_EXCEPTION, { ...warn, type })\n      logger.warn('audio exception', warn)\n    })\n\n    metadataTrack.seiSamples.forEach(sei => {\n      this.flv.emit(EVENT.SEI, {\n        ...sei,\n        sei: {\n          code: sei.data.type,\n          content: sei.data.payload,\n          dts: sei.pts\n        }\n      })\n    })\n  }\n}\n","export function searchKeyframeIndex (list, value) {\n  let idx = 0\n\n  const last = list.length - 1\n  let mid = 0\n  let lbound = 0\n  let ubound = last\n\n  if (value < list[0]) {\n    idx = 0\n    lbound = ubound + 1 // skip search\n  }\n\n  while (lbound <= ubound) {\n    mid = lbound + Math.floor((ubound - lbound) / 2)\n    if (mid === last || (value >= list[mid] && value < list[mid + 1])) {\n      idx = mid\n      break\n    } else if (list[mid] < value) {\n      lbound = mid + 1\n    } else {\n      ubound = mid - 1\n    }\n  }\n\n  return idx\n}\n","import EventEmitter from 'eventemitter3'\nimport { NetLoader, Buffer, MSE, EVENT, StreamingError, BandwidthService, SeiService, GapService, MediaStatsService, isMediaPlaying, Logger, getVideoPlaybackQuality } from 'xgplayer-streaming-shared'\nimport { Logger as TransmuxerLogger } from 'xgplayer-transmuxer'\nimport { BufferService } from './services'\nimport { getOption } from './options'\nimport { searchKeyframeIndex } from './utils'\n\nexport const logger = new Logger('flv')\n\n\n/**\n * @typedef {import(\"../../../xgplayer-streaming-shared/es/services/stats\").StatsInfo} Stats\n */\nexport class Flv extends EventEmitter {\n  /** @type {HTMLMediaElement | null} */\n  media = null\n\n  _loading = false\n\n  /** @type {import('./options').FlvOption} */\n  _opts = null\n\n  /** @type {BufferService} */\n  _bufferService = null\n\n  /** @type {GapService} */\n  _gapService = null\n\n  /** @type {MediaStatsService} */\n  _stats = null\n\n  /** @type {NetLoader} */\n  _mediaLoader = null\n\n  _maxChunkWaitTimer = null\n\n  _tickTimer = null\n  _tickInterval = 500\n\n  _urlSwitching = false\n  _seamlessSwitching = false\n\n  _keyframes = null\n\n  _acceptRanges = true\n\n  /**\n   * @param {import('./options').FlvOption} opts\n   */\n  constructor (opts) {\n    super()\n    this._opts = getOption(opts)\n    this.media = this._opts.media || document.createElement('video')\n    this._opts.media = null\n    this._firstProgressEmit = false\n    this._mediaLoader = new NetLoader({\n      ...this._opts.fetchOptions,\n      retry: this._opts.retryCount,\n      retryDelay: this._opts.retryDelay,\n      timeout: this._opts.loadTimeout,\n      onRetryError: this._onRetryError,\n      onProgress: this._onProgress,\n      responseType: 'arraybuffer'\n    })\n\n    this._bufferService = new BufferService(this, this._opts.softDecode ? this.media : undefined, this._opts)\n    this._seiService = new SeiService(this)\n    this._bandwidthService = new BandwidthService()\n    this._stats = new MediaStatsService(this)\n\n    if (!this._opts.softDecode) {\n      this._gapService = new GapService()\n    }\n\n    this.media.addEventListener('play', this._onPlay)\n    this.media.addEventListener('seeking', this._onSeeking)\n    this.media.addEventListener('timeupdate', this._onTimeupdate)\n\n    this.on(EVENT.FLV_SCRIPT_DATA, this._onFlvScriptData)\n  }\n\n  get version () {\n    return __VERSION__\n  }\n\n  get isLive () {\n    return this._opts.isLive\n  }\n\n  get baseDts () {\n    return this._bufferService?.baseDts\n  }\n\n  get seekable () {\n    return !!this._keyframes && this._acceptRanges\n  }\n\n  speedInfo () {\n    return {\n      speed: this._bandwidthService.getLatestSpeed(),\n      avgSpeed: this._bandwidthService.getAvgSpeed()\n    }\n  }\n\n  /**\n   * @returns {Stats}\n   */\n  getStats () {\n    return this._stats.getStats()\n  }\n\n  bufferInfo (maxHole = 0.1) {\n    return Buffer.info(Buffer.get(this.media), this.media?.currentTime, maxHole)\n  }\n\n  playbackQuality () {\n    return getVideoPlaybackQuality(this.media)\n  }\n\n  /**\n   * load or reload source\n   * @param {string} [url]\n   * @return {Promise}\n   */\n  async load (url, reuseMse = false) {\n    if (!this._bufferService) return\n    await this._reset(reuseMse)\n\n    this._loadData(url)\n\n    clearTimeout(this._tickTimer)\n    this._tickTimer = setTimeout(this._tick, this._tickInterval)\n  }\n\n  /** @return {Promise} */\n  async replay (seamlesslyReload = this._opts.seamlesslyReload, isPlayEmit) {\n    if (!this.media) return\n    if (seamlesslyReload) {\n      await this._clear()\n\n      setTimeout(() => {\n        this._loadData(this._opts.url)\n        this._bufferService.seamlessSwitch()\n        this._seamlessSwitching = true\n      })\n    } else {\n      await this.load()\n    }\n    return this.media.play(!isPlayEmit).catch(()=>{})\n  }\n\n  disconnect () {\n    logger.debug('disconnect!')\n    return this._clear()\n  }\n\n  /**\n   * @param {string} url\n   * @param {boolean} [seamless=false]\n   */\n  async switchURL (url, seamless) {\n    if (!this._bufferService) return\n    if (!seamless || !this._opts.isLive) {\n      await this.load(url)\n      this._urlSwitching = true\n      return this.media.play(true).catch(()=>{})\n    }\n\n    await this._clear()\n\n    setTimeout(() => {\n      this._loadData(url)\n      this._bufferService.seamlessSwitch()\n      this._urlSwitching = true\n      this._seamlessSwitching = true\n    })\n  }\n\n  /** @return {Promise} */\n  async destroy () {\n    if (!this.media) return\n    this.removeAllListeners()\n    this._seiService.reset()\n    this.media.removeEventListener('play', this._onPlay)\n    this.media.removeEventListener('seeking', this._onSeeking)\n    this.media.removeEventListener('timeupdate', this._onTimeupdate)\n    await Promise.all([this._clear(), this._bufferService.destroy()])\n    this.media = null\n    this._bufferService = null\n  }\n\n  /**\n   * @param {('video'|'audio')?} mediaType\n   * @returns {Boolean}\n   */\n  static isSupported (mediaType) {\n    if (!mediaType || mediaType === 'video' || mediaType === 'audio') {\n      return MSE.isSupported()\n    }\n\n    return typeof WebAssembly !== 'undefined'\n  }\n\n  static enableLogger () {\n    Logger.enable()\n    TransmuxerLogger.enable()\n  }\n\n  static disableLogger () {\n    Logger.disable()\n    TransmuxerLogger.disable()\n  }\n\n  _emitError (error, endOfStream = true) {\n    logger.table(error)\n    logger.error(error)\n    logger.error(this.media?.error)\n    if (this._urlSwitching) {\n      this._urlSwitching = false\n      this._seamlessSwitching = false\n      this.emit(EVENT.SWITCH_URL_FAILED, error)\n    }\n    this.emit(EVENT.ERROR, error)\n    if (endOfStream) {\n      this._seiService.reset()\n      this._end()\n    }\n  }\n\n  async _reset (reuseMse = false) {\n    this._seiService.reset()\n    this._bandwidthService.reset()\n    this._stats.reset()\n    await this._clear()\n    await this._bufferService.reset(reuseMse)\n    this._firstProgressEmit = false\n  }\n\n  async _loadData (url, range) {\n    if (url) this._opts.url = url\n    url = this._opts.url\n    if (!url) throw new Error('Source url is missing')\n\n    this.emit(EVENT.LOAD_START, { url })\n\n    logger.debug('load data, loading:', this._loading, url)\n\n    if (this._loading) {\n      await this._mediaLoader.cancel()\n    }\n\n    this._loading = true\n    try {\n      await this._mediaLoader.load({ url, range })\n    } catch (error) {\n      return this._emitError(StreamingError.network(error))\n    }\n  }\n\n  /**\n   *\n   * @param {ArrayBuffer} chunk\n   * @param {boolean} done\n   * @param { {startTime: number, endTime: number, st: number, firstByteTime: number}}\n   * startTime: 当前流式分段开始read时间\n   * endTime: 当前流式分段结束read时间\n   * st: 拉流开始时间\n   * firstByteTime: 首字节响应时间\n   * @param {Response} response\n   */\n  _onProgress = async (chunk, done, { startTime, endTime, st, firstByteTime }, response) => {\n    this._loading = !done\n\n    if (!this._firstProgressEmit) {\n      if (!this.media) {\n        this._mediaLoader?.cancel()\n        return\n      }\n      if (!!response?.headers){\n        const headers = response.headers\n        this.emit(EVENT.TTFB, { url: this._opts.url, responseUrl: response.url, elapsed: st ? (firstByteTime - st) : (endTime - startTime) })\n        this.emit(EVENT.LOAD_RESPONSE_HEADERS, { headers })\n        this._acceptRanges = !!headers?.get('Accept-Ranges') || !!headers?.get('Content-Range')\n        this._firstProgressEmit = true\n      }\n    }\n\n    if (!this._bufferService) return\n    clearTimeout(this._maxChunkWaitTimer)\n\n    this._bandwidthService.addChunkRecord(chunk?.byteLength, endTime - startTime)\n\n    try {\n      await this._bufferService.appendBuffer(chunk)\n      this._bufferService?.evictBuffer(this._opts.bufferBehind)\n    } catch (error) {\n      return this._emitError(StreamingError.create(error))\n    }\n\n    if (this._urlSwitching) {\n      this._urlSwitching = false\n      this.emit(EVENT.SWITCH_URL_SUCCESS, { url: this._opts.url })\n    }\n\n    // ！！\n    if (this._seamlessSwitching) {\n      this._seamlessSwitching = false\n      this._tick()\n    }\n\n    if (done && !this.media.seeking) {\n      this.emit(EVENT.LOAD_COMPLETE)\n      logger.debug('load done')\n      return this._end()\n    } else {\n      const { maxReaderInterval } = this._opts\n      if (maxReaderInterval) {\n        clearTimeout(this._maxChunkWaitTimer)\n        this._maxChunkWaitTimer = setTimeout(() => {\n          logger.debug('onMaxChunkWait', maxReaderInterval)\n          this._end()\n        }, maxReaderInterval)\n      }\n    }\n  }\n\n  _onRetryError = (error, retryTime) => {\n    logger.debug('load retry', error, retryTime)\n\n    this.emit(EVENT.LOAD_RETRY, {\n      error: StreamingError.network(error),\n      retryTime\n    })\n  }\n\n  async _clear () {\n    clearTimeout(this._maxChunkWaitTimer)\n    clearTimeout(this._tickTimer)\n    if (this._mediaLoader) await this._mediaLoader.cancel()\n    this._loading = false\n  }\n\n  _end = () => {\n    this._clear()\n    if (this._bufferService) {\n      this._bufferService.endOfStream()\n    }\n\n    logger.debug('end stream')\n  }\n\n  _tick = () => {\n    clearTimeout(this._tickTimer)\n    const { media } = this\n    if (!media) return\n    this._tickTimer = setTimeout(this._tick, this._tickInterval)\n\n    const bufferEnd = Buffer.end(Buffer.get(media))\n\n    if (bufferEnd < 0.1 || !media.readyState) return\n\n    const opts = this._opts\n    if (isMediaPlaying(media)) {\n      if (this._gapService) {\n        this._gapService.do(media, opts.maxJumpDistance, this.isLive, 3)\n      }\n    } else {\n      if (!media.currentTime && this._gapService) {\n        this._gapService.do(media, opts.maxJumpDistance, this.isLive, 3)\n        return\n      }\n      if (opts.isLive && bufferEnd > opts.disconnectTime) {\n        this.disconnect()\n      }\n    }\n  }\n\n  _onPlay = () => {\n    const canReplay = this._opts.softDecode || this.media?.buffered?.length\n    if (this.isLive && !this._loading && canReplay) {\n      this.replay(undefined, true)\n    }\n  }\n\n  _onSeeking = async () => {\n    if (!this.isLive && this.seekable) {\n      const times = this._keyframes.times\n      const filepositions = this._keyframes.filepositions\n      if (!times?.length || !filepositions?.length) return\n      const currentTime = this.media.currentTime\n      const i = searchKeyframeIndex(this._keyframes.times, currentTime)\n      const startByte = filepositions[i]\n      if (startByte === null || startByte === undefined) return\n      await this._mediaLoader.cancel()\n      this._loadData(null, [startByte])\n      this._bufferService.unContiguous(times[i])\n    }\n  }\n\n  _onTimeupdate = () => {\n    if (!this.media) return\n\n    const opts = this._opts\n    const currentTime = this.media.currentTime\n\n    if (opts.isLive && opts.maxLatency && opts.targetLatency) {\n      const bufferEnd = Buffer.end(Buffer.get(this.media))\n      const latency = bufferEnd - currentTime\n      if (latency >= opts.maxLatency) {\n        this.media.currentTime = bufferEnd - opts.targetLatency\n      }\n    }\n    this._seiService.throw(currentTime)\n  }\n\n  _onFlvScriptData = (sample) => {\n    const keyframes = sample.data?.onMetaData?.keyframes\n    const duration = sample.data?.onMetaData?.duration\n    if (keyframes) {\n      this._keyframes = keyframes\n    }\n\n    if (!this._opts.isLive && duration) {\n      this._bufferService.updateDuration(duration)\n    }\n  }\n}\n\ntry {\n  if (localStorage.getItem('xgd')) {\n    Flv.enableLogger()\n  } else {\n    Flv.disableLogger()\n  }\n} catch (error) {\n  // ignore\n}\n","/**\n * @typedef {{\n *  media: HTMLMediaElement,\n *  url?: string,\n *  isLive?: boolean,\n *  softDecode?: boolean,\n *  analyzeDuration?: number,\n *  maxJumpDistance?: number,\n *  maxLatency?: number,\n *  targetLatency?: number,\n *  bufferBehind?: number,\n *  retryCount?: number,\n *  retryDelay?: number,\n *  loadTimeout?: number,\n *  maxReaderInterval?: number,\n *  preloadTime?: number,\n *  disconnectTime?: number,\n *  fetchOptions?: RequestInit,\n *  seamlesslyReload: boolean\n * }} FlvOption\n */\n\n/**\n * @param {FlvOption} opts\n * @returns {FlvOption}\n */\nexport function getOption (opts) {\n  const ret = {\n    retryCount: 3,\n    retryDelay: 1000,\n    loadTimeout: 10000,\n    maxReaderInterval: 5000,\n    preloadTime: 5,\n    isLive: false,\n    softDecode: false,\n    bufferBehind: 10,\n    maxJumpDistance: 3,\n    analyzeDuration: 20000,\n    seamlesslyReload: false,\n    keepStatusAfterSwitch: true,\n    onlyVideo: false,\n    onlyAudio: false,\n    ...opts\n  }\n\n  if (ret.isLive) {\n    if (ret.preloadTime) {\n      // compat old\n\n      if (!ret.maxLatency) {\n        ret.maxLatency = ret.preloadTime * 2\n      }\n      if (!ret.targetLatency) {\n        ret.targetLatency = ret.preloadTime\n      }\n\n      if (ret.disconnectTime === null || ret.disconnectTime === undefined) {\n        ret.disconnectTime = ret.maxLatency\n      }\n    }\n  }\n\n  return ret\n}\n","import { EVENT } from 'xgplayer-streaming-shared'\n\nexport default class PluginExtension {\n  constructor (opts, plugin) {\n    this._opts = opts\n    this._plugin = plugin\n    this._init()\n  }\n\n  _init () {\n    const { media, preloadTime, innerDegrade, decodeMode } = this._opts\n\n    if (!media) return\n\n    if (innerDegrade) {\n      media.setAttribute('innerdegrade', innerDegrade)\n    }\n    if (preloadTime) {\n      media.setAttribute('preloadtime', preloadTime)\n    }\n\n    if (media.setDecodeMode) {\n      media.setDecodeMode(decodeMode)\n    }\n\n    this._bindEvents()\n  }\n\n  _bindEvents () {\n    const { media } = this._opts\n\n    media.addEventListener('lowdecode', this._onLowDecode)\n  }\n\n    _onLowDecode = () => {\n      const { media, innerDegrade, backupURL } = this._opts\n\n      this._plugin?.player?.emit('lowdecode', media.degradeInfo)\n      this._plugin?.player?.emit('core_event', {\n        ...media.degradeInfo,\n        eventName: EVENT.LOWDECODE\n      })\n\n      if ((innerDegrade === 1 || innerDegrade === 3) && backupURL) {\n        this._degrade(backupURL)\n      }\n    }\n\n    /**\n   * @param {string | undefined} url\n   */\n  _degrade = (url) => {\n    const { player } = this._plugin\n    const originVideo = player.video\n\n    if (originVideo?.TAG !== 'MVideo') return\n\n    const newVideo = player.video.degradeVideo\n\n    player.video = newVideo\n\n    originVideo.degrade(url)\n\n    if (url) {\n      player.config.url = url\n    }\n\n    // replace live-video to video element\n    const firstChild = player.root.firstChild\n\n    if (firstChild.TAG === 'MVideo') {\n      player.root.replaceChild(newVideo, firstChild)\n    }\n    const flvPlugin = this._plugin.constructor.pluginName.toLowerCase()\n    player.unRegisterPlugin(flvPlugin)\n\n    // play\n    player.once('canplay', () => {\n      player.play()\n    })\n  }\n\n  forceDegradeToVideo = (url) => {\n    const { innerDegrade } = this._opts\n\n    // 降级to video+m3u8\n    if (innerDegrade === 1 || innerDegrade === 3) {\n      this._degrade(url)\n    }\n  }\n\n  destroy () {\n    this._opts?.media?.removeEventListener('lowdecode', this._onLowDecode)\n    this._plugin = null\n  }\n}\n","import { BasePlugin, Events, Errors } from 'xgplayer'\nimport { EVENT } from 'xgplayer-streaming-shared'\nimport { Flv } from './flv'\nimport PluginExtension from './plugin-extension'\n\nexport class FlvPlugin extends BasePlugin {\n  static Flv = Flv\n\n  static get pluginName () {\n    return 'flv'\n  }\n\n  /** @type {Flv} */\n  flv = null;\n\n  /** @type {PluginExtension} */\n  pluginExtension = null\n\n  /** @type {Flv} */\n  get core () {\n    return this.flv\n  }\n\n  /** @type {string} */\n  get version () {\n    return this.flv?.version\n  }\n\n  /** @type {boolean} */\n  get softDecode () {\n    const mediaType = this.player?.config?.mediaType\n    return !!mediaType && mediaType !== 'video' && mediaType !== 'audio'\n  }\n\n  beforePlayerInit () {\n    const config = this.player.config\n\n    if (!config.url) return\n\n    if (this.flv) this.flv.destroy()\n\n    this.player.switchURL = this._onSwitchURL\n\n    const flvOpts = config.flv || {}\n    if (flvOpts.disconnectTime === null || flvOpts.disconnectTime === undefined) {\n      flvOpts.disconnectTime = 0\n    }\n\n    this.flv = new Flv({\n      softDecode: this.softDecode,\n      isLive: config.isLive,\n      media: this.player.video,\n      ...flvOpts\n    })\n\n    if (!this.softDecode) {\n      BasePlugin.defineGetterOrSetter(this.player, {\n        url: {\n          get: () => this.flv?.media?.src,\n          configurable: true\n        }\n      })\n    }\n\n    if (this.softDecode) {\n      this.pluginExtension = new PluginExtension({\n        media: this.player.video,\n        ...config.flv\n      }, this)\n      this.player.forceDegradeToVideo = (...args) => this.pluginExtension?.forceDegradeToVideo(...args)\n    }\n\n    if (config.isLive) {\n      this.player?.useHooks('replay', () => this.flv?.replay())\n    }\n\n    this.on(Events.URL_CHANGE, this._onSwitchURL)\n    this.on(Events.DESTROY, this.destroy)\n\n    this._transError()\n    this._transCoreEvent(EVENT.TTFB)\n    this._transCoreEvent(EVENT.LOAD_START)\n    this._transCoreEvent(EVENT.LOAD_RESPONSE_HEADERS)\n    this._transCoreEvent(EVENT.LOAD_COMPLETE)\n    this._transCoreEvent(EVENT.LOAD_RETRY)\n    this._transCoreEvent(EVENT.SOURCEBUFFER_CREATED)\n    this._transCoreEvent(EVENT.ANALYZE_DURATION_EXCEEDED)\n    this._transCoreEvent(EVENT.REMOVE_BUFFER)\n    this._transCoreEvent(EVENT.BUFFEREOS)\n    this._transCoreEvent(EVENT.KEYFRAME)\n    this._transCoreEvent(EVENT.METADATA_PARSED)\n    this._transCoreEvent(EVENT.SEI)\n    this._transCoreEvent(EVENT.SEI_IN_TIME)\n    this._transCoreEvent(EVENT.FLV_SCRIPT_DATA)\n    this._transCoreEvent(EVENT.STREAM_EXCEPTION)\n    this._transCoreEvent(EVENT.SWITCH_URL_SUCCESS)\n    this._transCoreEvent(EVENT.SWITCH_URL_FAILED)\n\n    this.flv.load(config.url, true)\n  }\n\n  /**\n   * @return {import('./flv').Stats | undefined}\n   */\n  getStats = () => {\n    return this.flv?.getStats()\n  }\n\n  destroy = () => {\n    if (this.flv) {\n      this.flv.destroy()\n      this.flv = null\n    }\n    this.pluginExtension?.destroy()\n    this.pluginExtension = null\n  }\n\n  /**\n   * @param {string | boolean} [mediaType]\n   * @param {string} [codec]\n   * @returns {boolean}\n   * - mediaType: 默认检测 MSE 对 H264 codec是否支持，传入 true 或者配置参数的mediaType的取值检测 WebAssembly是否支持\n   * - codec: 暂无使用\n   */\n  static isSupported (mediaType, codec) {\n    return Flv.isSupported(mediaType, codec)\n  }\n\n  /**\n   *\n   * @param {string} url\n   * @param {boolean} seamless\n   */\n  _onSwitchURL = (url, seamless) => {\n    if (this.flv) {\n      this.player.config.url = url\n      this.flv.switchURL(url, seamless)\n\n      if (!seamless && this.player.config?.flv?.keepStatusAfterSwitch) {\n        this._keepPauseStatus()\n      }\n    }\n  }\n\n  _keepPauseStatus = () => {\n    const paused = this.player.paused\n    if (!paused) return\n    this.player.once('canplay', () => {\n      this.player.pause()\n    })\n  }\n\n  _onDefinitionChange = ({ to }) => {\n    if (this.flv) this.flv.switchURL(to)\n  }\n\n  _transError () {\n    this.flv.on(EVENT.ERROR, (err) => {\n      if (this.player) {\n        this.player.emit(Events.ERROR, new Errors(this.player, err))\n      }\n    })\n  }\n\n  _transCoreEvent (eventName) {\n    this.flv.on(eventName, (e) => {\n      if (this.player) {\n        this.player.emit('core_event', {\n          ...e,\n          eventName\n        })\n      }\n    })\n  }\n}\n"],"names":["createPublicPromise","res","rej","promise","Promise","resolve","reject","used","apply","arguments","nowTime","parseInt","performance","now","e","Date","getTime","Buffer","_classCallCheck","key","value","buf","length","end","start","b","buffered","error","maxHole","buffers","i","l","bufLen","last","lastEnd","push","reduce","a","c","pos","undefined","index","nextStart","nextEnd","prevStart","prevEnd","item","currentTime","behind","remaining","totalLength","ERR","FLV","HLS","MP4","FMP4","MSE_ADD_SB","MSE_APPEND_BUFFER","MSE_OTHER","MSE_FULL","OPTION","DASH","LICENSE","CUSTOM_LICENSE","MSE_HIJACK","EME_HIJACK","SIDX","NO_CANPLAY_ERROR","BUFFERBREAK_ERROR","WAITING_TIMEOUT_ERROR","MEDIA_ERR_ABORTED","MEDIA_ERR_NETWORK","MEDIA_ERR_DECODE","MEDIA_ERR_SRC_NOT_SUPPORTED","MEDIA_ERR_CODEC_NOT_SUPPORTED","MEDIA_ERR_URL_EMPTY","ERR_CODE","_defineProperty","_ERR_CODE","StreamingError","_Error","_inherits","_super","_createSuper","type","subType","origin","payload","msg","_this","call","message","errorType","originError","ext","errorCode","errorMessage","Error","_error$response","isTimeout","url","response","httpCode","status","isBrowser","window","LogCacheLevel","DEBUG","LOG","WARN","ERROR","SIMPLE_TYPE","Logger","name","config","this","_prefix","concat","logCacheLevel","logMaxSize","logSize","logTextArray","_createClass","_console","_len","args","Array","_key","logCache","disabled","console","debug","_console2","_len2","_key2","log","_console3","_len3","_key3","warn","_console4","_len4","_key4","text","_len5","logText","_key5","finLogText","map","logable","JSON","stringify","delLog","shift","join","reset","_console5","group","table","groupEnd","val","toLocaleString","reduceDepth","_typeof","objType","Object","prototype","toString","slice","obj","maxDepth","depth","result","includes","hasOwnProperty","MediaSource","getMediaSource","OP_NAME","MSE","media","_this2","create","queue","_queue","op","opName","costtime","_opst","_logger","context","_startQueue","event","_config","assign","getDefaultConfig","bindMedia","openLog","enable","_enqueueBlockingOp2","_unbindMedia","_bindMedia","get","_this$mediaSource","mediaSource","readyState","_url","_this$mediaSource2","duration","_mseFullFlag","VIDEO","_this3","isReduceDuration","bufferEnd","keys","_sourceBuffer","forEach","k","Math","max","_enqueueBlockingOp","isEnded","_this4","_openPromise","isOpened","ms","addEventListener","onOpen","_st","removeEventListener","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this5","wrap","_context","prev","next","unbindMedia","revokeObjectURL","src","URL","createObjectURL","abrupt","stop","_x","_callee2","hasMetadata","mseOpen","_this6","_context2","t","x","_x$promise","_x$promise$resolve","endOfStream","removeSourceBuffer","removeAttribute","load","mimeType","sb","addSourceBuffer","_onSBUpdateEnd","bind","_onSBUpdateError","_this7","changeType","_enqueueOp","createSource","buffer","_this8","byteLength","_this8$_sourceBuffer$","appendBuffer","startTime","endTime","_this9","isInsertHead","remove","p","_this10","_this11","allClear","_this$_queue$type","initOpque","isinit","reason","_this12","setLiveSeekableRange","exec","_this13","splice","then","_callee3","types","waiters","_this14","_context3","prom","all","updating","_x2","_x3","_x4","indexOf","timestampOffset","_this15","_this16","abort","mime","isTypeSupported","LoaderType","ResponseType","NetError","request","_assertThisInitialized","isPlainObject","getPrototypeOf","getRangeValue","ret","encode","encodeURIComponent","replace","setUrlParams","params","v","str","isArray","toISOString","isObject","filter","Boolean","hashIndex","createResponse","data","done","contentLength","age","firstByteTime","range","vid","priOptions","parseFloat","Number","isNaN","options","calculateSpeed","byteLen","millisec","round","EVENT","has","prefix","Events","EE","fn","once","addListener","emitter","TypeError","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","__proto__","eventNames","names","events","getOwnPropertySymbols","listeners","handlers","ee","listenerCount","emit","a1","a2","a3","a4","a5","len","removeListener","j","on","removeAllListeners","off","prefixed","module","exports","CACHESIZE","FetchLoader","_EventEmitter","_cancel","_ref","_this$_abortControlle","timeout","responseType","onProgress","onTimeout","onCancel","transformResponse","logger","method","headers","body","mode","credentials","cache","redirect","referrer","referrerPolicy","onProcessMinLen","_aborted","_onProcessMinLen","_onCancel","_abortController","AbortController","_running","_index","_range","_vid","_priOptions","init","signal","clearTimeout","_timeoutTimer","rangeValue","Headers","append","Range","setTimeout","cancel","fetch","_ref2","costTime","speed","_response","ok","sent","json","_loadChunk","arrayBuffer","Uint8Array","time","catch","_error","_reader","t0","st","getReader","err","_cache","_writeIdx","reader","pump","_ref3","_this3$_range","startRange","startByte","curLen","retData","temp","read","_receivedLength","set","WsLoader","_socket","WebSocket","binaryType","onopen","_startTime","onmessage","_endTime","parse","onclose","onerror","close","intervalTime","_this$_range","_done","XhrLoader","req","_onProgress","_headers","_withCredentials","_body","_method","_timeout","_runing","_responseType","_firstRtt","_onTimeout","_request","_loadCompleteResolve","_loadCompleteReject","_startLoad","chunkSize","_currentChunkSizeKB","from","to","_internalOpen","xhr","_xhr","XMLHttpRequest","open","withCredentials","onload","_onLoad","onreadystatechange","_onReadyStatechange","errorEvent","_errorEvent$currentTa","_errorEvent$currentTa2","_errorEvent$currentTa3","currentTarget","statusText","ontimeout","setRequestHeader","send","target","_objectSpread","byteStart","_this$_range2","chunk","responseURL","_getHeaders","_transformResponse","_getPrototypeOf","_step","_iterator","_createForOfIteratorHelper","getAllResponseHeaders","trim","split","s","n","parts","toLowerCase","f","Task","alive","_loaderType","_loader","_retryCount","_retryTimer","_canceled","_retryCheckFunc","retryCheckFunc","_this$_config","retry","retryDelay","onRetryError","transformError","rest","_objectWithoutProperties","_excluded","isRetry","running","loaderType","retryCount","concatUint8Array","arr","prevLen","d","sleep","NetLoader","cfg","transformRequest","integrity","getConfig","isSupported","test","_isWebSocketURL","isWebSocketURL","task","loader","_currentTask","_processTask","cancels","_alive","finally","_this3$_currentTask","_this3$_alive","GapService","maxJumpDistance","isLive","seekThreshold","jumpTo","_prevCurrentTime","info","seeking","SeiService","Set","sei","_seiSet","add","size","min","toThrow","delete","clear","BandwidthService","totalByte","_speeds","_chunkSpeeds","Stats","timescale","_timescale","encodeType","audioCodec","videoCodec","domain","fps","bitrate","width","height","samplerate","channelCount","gop","_data$onMetaData","onMetaData","framerate","track","codec","codecType","fpsNum","fpsDen","sampleRate","responseUrl","samples","sample","gopId","_bitsAccumulateDuration","_bitsAccumulateSize","units","MediaStatsService","core","_core","_stats","_bindEvents","_this$_core","_this$_core2","_this$_core2$speedInf","_this$_core3","_this$_core3$speedInf","_this$_core4","_this$_core4$bufferIn","_ref2$currentTime","_ref2$decodeFps","decodeFps","getStats","downloadSpeed","speedInfo","avgSpeed","bufferInfo","videoTrack","updateBitrate","setFpsFromScriptData","setVideoMeta","setAudioMeta","setDomain","_samples","TrackType","VideoCodecType","AudioCodecType","WarningType","VideoTrack","sequenceNumber","baseMediaDecodeTime","present","pid","pps","sps","vps","sarRatio","warnings","hvcC","isVideoEncryption","AudioTrack","sampleDuration","isAudioEncryption","VideoSample","pts","dts","originPts","originDts","keyframe","flag","dependsOn","isNonSyncSample","AudioSample","sampleOffset","Sample","FlvScriptSample","_Sample","SeiSample","_Sample2","_super2","MetadataTrack","flvScriptSamples","seiSamples","ExpGolomb","_data","_bytesAvailable","_loadWord","position","availableBytes","workingBytes","subarray","_word","DataView","getUint32","_bitsAvailable","count","skipBytes","floor","bits","readBits","leadingZeroCount","skipLZ","skipBits","clz","readUEG","lastScale","nextScale","readEG","UTF8","uint8array","out","input","String","fromCharCode","_checkContinuation","ucs4","_ucs2","checkLength","array","ua","navigator","userAgent","toLocaleLowerCase","isSafari","isFirefox","isAndroid","readBig32","getAvcCodec","codecs","h","NALu","offset","dataLen","unit","isHevc","uuid","uint","emulationPreventionBytesPositions","newLength","newData","sourceIndex","AVC","nalUnitSize","spsParsed","spsSize","spsArr","ppsArr","spsCount","parseSPS","removeEPB","ppsSize","ppsCount","eg","readUByte","profileIdc","profileCompatibility","levelIdc","skipUEG","chromaFormat","chromaFormatIdc","readBool","scalingListCount","skipScalingList","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","fixedFrame","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","aspectRatioIdc","numUnitsInTick","timeScale","ceil","AAC","rate","FREQ","skip","frames","samplingFrequencyIndex","protectionSkipBytes","frameLength","objectType","_AAC$_getConfig","_getConfig","frameIndex","getFrameDuration","originCodec","_AAC$_getConfig2","samplingIndex","originObjectType","extensionSamplingIndex","HEVC","vpsParsed","nalUnitType","numNalus","nalSize","vpsArr","numOfArrays","parseVPS","vpsMaxSubLayersMinus1","numTemporalLayers","_parseProfileTierLevel","spsMaxSubLayersMinus1","temporalIdNested","separateColourPlaneFlag","confWinLeftOffset","confWinRightOffset","confWinTopOffset","confWinBottomOffset","conformanceWindowFlag","bitDepthLumaMinus8","bitDepthChromaMinus8","subWidthC","subHeightC","maxSubLayersMinus1","generalTierFlag","generalProfileSpace","generalProfileIdc","generalProfileCompatibilityFlags","generalConstraintIndicatorFlags","generalLevelIdc","subLayerProfilePresentFlag","subLayerLevelPresentFlag","MAX_SILENT_FRAME_DURATION","AUDIO_EXCETION_LOG_EMIT_DURATION","FlvFixer","audioTrack","metadataTrack","_baseDts","_baseDtsInited","_audioNextPts","_videoNextDts","_audioTimestampBreak","_videoTimestampBreak","_lastVideoDuration","_keyFrameInNextChunk","_lastAudioExceptionGapDot","Infinity","_lastAudioExceptionOverlapDot","_lastAudioExceptionLargeGapDot","_lastVideoExceptionLargeGapDot","_lastVideoExceptionChunkFirstDtsDot","discontinuity","contiguous","_videoLastSample","_calculateBaseDts","resetBaseDts","exist","_resetBaseDtsWhenStreamBreaked","_fixAudio","_fixVideo","refSampleDurationInt","first","lastSample","pop","unshift","samp0","firstSample","vDelta","abs","_samples$","nextDts","firstSampleDts","nextSampleDts","nextSample","refSampleDuration","_doFixAudioInternal","audioSamps","videoSamps","audioBasePts","videoBaseDts","baseDts","delta","isFinite","_getG711Duration","sampleDurationInSampleRate","nextPts","silentFrame","_getSilentFrame","silentSample","sampleSize","getSilentFrame","AMF","_parseValue","byteOffset","view","isEnd","getUint8","getFloat64","_AMF$_parseString","_parseString","terminal","_AMF$_parseObject","_parseObject","_terminal","_AMF$_parseObject2","strictArrayLength","_AMF$_parseValue","timestamp","getInt16","decode","getUint16","FlvDemuxer","_fixer","_remainingData","_headerParsed","probe","tagType","dataSize","bodyData","prevTagSize","_parseAudio","_parseVideo","_parseScript","formatTimescale","hasSample","fix","demux","format","soundRate","soundSize","soundType","AUDIO_RATE","_parseAac","_parseG711","parseAudioSpecificConfig","sampleRateIndex","frameType","codecId","packetType","cts","configData","parseHEVCDecoderConfigurationRecord","parseAVCDecoderConfigurationRecord","parseAvcC","_checkAddMetaNalToUnits","setToKeyframe","parseSEI","_gopId","hevc","_needAddMetaBeforeKeyFrameNal","Concat","ResultConstructor","arrays","self","UINT32_MAX","pow","tracks","find","FTYPHEV1","FTYPAVC1","ftyp","moov","content","kid","box","pssh","useEME","encv","enca","mvhd","mvhdDurtion","mvhdTimecale","mvex","_toConsumableArray","trak","tkhd","id","tkhdDuration","mdia","mdhd","hdlr","minf","HDLR_TYPES","VMHD","SMHD","DINF","stbl","extBox","stss","entries","stsd","STTS","STSC","STSZ","STCO","mp4a","avc1hev1","esds","sinf","_concat$concat","hSpacing","vSpacing","avcc","btrt","pasp","avcC","tenc","schi","default_IsEncrypted","default_IV_size","default_KID","frma","data_format","charCodeAt","schm","typ","hvc1","avc1","boxes","fiel","_concat$concat2","ArrayBuffer","pcf","cif","write","_ref4","_slicedToArray","trex","moof","mfhd","traf","tfhd","tfdt","sencLength","isVideo","videoSenc","subsamples","videoSencLength","saiz","saio","trun","trun1","senc","sbgp","sdtp","extension","sampleCount","writeUint32","audioSenc","flags","samplesLength","InitializationVector","writeUint16","BytesOfClearData","BytesOfProtectedData","version","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","sampleLen","_samples$i","_samples$i$flag","_samples$i$cts","isLeading","isDependedOn","hasRedundancy","paddingValue","degradationPriority","trackMP4","mdiaMP4","minfMP4","stblMP4","stts","stsc","stsz","stco","ctts","_ref5","_ref6","firstChunk","samplesPerChunk","sampleDescIndex","samplesSizes","offsets","keyframeIndexes","_ref7","styp","durationCount","earliestTime","mdatSize","sidx","mdat","video","audio","dinf","dref","vmhd","smhd","StblTable","FMP4Remuxer","browserVersions","forceFirstIDR","createInit","videoInitSegment","audioInitSegment","initSegment","videoSegment","audioSegment","hasVideo","hasAudio","initMerge","_remuxVideo","_remuxAudio","mdata","mdatView","_loop","_offset","_sample","u","setUint32","Base","properties","clone","constructor","_construct","WordArray","_Base","words","sigBytes","typedArray","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","typedArrayByteLength","_words","encoder","Hex","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","thatByte","_get","nBytes","rcache","r","m_w","_m_w","_m_z","mask","random","_r","hexChars","bite","hexStr","hexStrLength","substr","Latin1","latin1Str","latin1StrLength","Utf8","utf8Str","unescape","BufferedBlockAlgorithm","_Base2","_minBufferSize","_nDataBytes","m_data","doFlush","processedWords","blockSize","dataWords","dataSigBytes","nBlocksReady","nWordsReady","nBytesReady","_doProcessBlock","Hasher","_BufferedBlockAlgorit","_super3","_doReset","messageUpdate","_append","_process","hash","_doFinalize","SubHasher","finalize","HMAC","_Base3","_super4","hasher","_hasher","hasherBlockSize","hasherBlockSizeBytes","oKey","_oKey","iKey","_iKey","oKeyWords","iKeyWords","update","innerHash","hmac","Base64","_map","base64Chars","triplet","charAt","paddingChar","base64Str","base64StrLength","reverseMap","_reverseMap","paddingIndex","parseLoop","bits1","bitsCombined","T","sin","FF","GG","HH","II","MD5Algo","_Hasher","_hash","M","_M","offset_i","M_offset_i","H","M_offset_0","M_offset_1","M_offset_2","M_offset_3","M_offset_4","M_offset_5","M_offset_6","M_offset_7","M_offset_8","M_offset_9","M_offset_10","M_offset_11","M_offset_12","M_offset_13","M_offset_14","M_offset_15","nBitsTotal","nBitsLeft","nBitsTotalH","nBitsTotalL","H_i","_createHelper","_createHmacHelper","EvpKDFAlgo","keySize","iterations","password","salt","derivedKeyWords","block","derivedKey","Cipher","xformMode","_xformMode","dataUpdate","finalProcessedData","_ENC_XFORM_MODE","_DEC_XFORM_MODE","SubCipher","selectCipherStrategy","PasswordBasedCipher","SerializableCipher","encrypt","decrypt","ciphertext","ivSize","BlockCipherMode","cipher","iv","_cipher","_iv","Encryptor","Decryptor","xorBlock","_prevBlock","CBC","_BlockCipherMode","_CBC","_class","_super5","encryptBlock","_CBC2","_class2","_super6","thisBlock","decryptBlock","Pkcs7","pad","blockSizeBytes","nPaddingBytes","paddingWord","paddingWords","padding","unpad","BlockCipher","_Cipher2","_super7","modeCreator","createEncryptor","createDecryptor","_mode","__creator","processBlock","finalProcessedBlocks","CipherParams","_super8","cipherParams","mixIn","formatter","OpenSSLFormatter","openSSLStr","ciphertextWords","_super9","_cfg","encryptor","cipherCfg","algorithm","_ciphertext","plaintext","_parse","OpenSSLKdf","execute","_salt","compute","_SerializableCipher","_super10","derivedParams","kdf","_SBOX","INV_SBOX","_SUB_MIX_0","_SUB_MIX_1","_SUB_MIX_2","_SUB_MIX_3","INV_SUB_MIX_0","INV_SUB_MIX_1","INV_SUB_MIX_2","INV_SUB_MIX_3","xi","sx","x2","x4","x8","RCON","AESAlgo","_BlockCipher","_nRounds","_keyPriorReset","keyWords","ksRows","_keySchedule","keySchedule","ksRow","_invKeySchedule","invKeySchedule","invKsRow","_doCryptBlock","SUB_MIX_0","SUB_MIX_1","SUB_MIX_2","SUB_MIX_3","SBOX","nRounds","s0","s1","s2","s3","t1","t2","t3","CTR","_CTR","counter","_counter","keystream","BufferService","flv","softVideo","opts","_opts","_softVideo","_remuxer","_demuxer","_mse","_evictBuffer","_appendBuffer","_destroy","_updateDuration","_endOfStream","_reset","_this$_demuxer","_this$_demuxer$_fixer","_needInitSegment","_discontinuity","_contiguous","_initSegmentId","_demuxStartTime","reuseMse","_args","_sourceCreated","updateDuration","_callee4","_context4","_callee5","demuxer","videoExist","audioExist","videoType","audioType","mse","newId","remuxResult","_context5","_cachedBuffer","demuxAndFix","onlyAudio","onlyVideo","analyzeDuration","_fireEvents","_emitMetaParsedEvent","remux","_callee6","bufferBehind","removeEnd","_context6","clearBuffer","meta","code","searchKeyframeIndex","list","idx","mid","lbound","ubound","Flv","_clear2","_loadData2","_reset2","_switchURL","_replay","_load","_this$_mediaLoader","_this$_bufferService","maxReaderInterval","_loading","_firstProgressEmit","_mediaLoader","elapsed","_acceptRanges","_bufferService","_maxChunkWaitTimer","_bandwidthService","addChunkRecord","evictBuffer","_emitError","_urlSwitching","_seamlessSwitching","_tick","_end","retryTime","network","_clear","_tickTimer","_tickInterval","isMediaPlaying","paused","ended","playbackRate","_gapService","do","disconnectTime","disconnect","_this$media","_this$media$buffered","canReplay","softDecode","replay","times","filepositions","seekable","_keyframes","_loadData","unContiguous","maxLatency","targetLatency","_seiService","throw","_sample$data","_sample$data$onMetaDa","_sample$data2","_sample$data2$onMetaD","keyframes","loadTimeout","preloadTime","seamlesslyReload","keepStatusAfterSwitch","document","createElement","fetchOptions","_onRetryError","_onPlay","_onSeeking","_onTimeupdate","_onFlvScriptData","_this$_bufferService2","getLatestSpeed","getAvgSpeed","_this$media2","getVideoPlaybackQuality","droppedVideoFrames","corruptedVideoFrames","totalVideoFrames","creationTime","webkitDroppedFrameCount","webkitDecodedFrameCount","_args3","_x5","isPlayEmit","_args4","seamlessSwitch","play","seamless","switchURL","_x6","_x7","destroy","_this$media3","_callee7","_args7","_context7","_callee8","_context8","_x8","_x9","_callee9","_context9","mediaType","WebAssembly","TransmuxerLogger","disable","localStorage","getItem","enableLogger","disableLogger","PluginExtension","plugin","_this$_plugin","_this$_plugin$player","_this$_plugin2","_this$_plugin2$player","_this$_opts","innerDegrade","backupURL","_plugin","player","degradeInfo","eventName","_degrade","originVideo","TAG","newVideo","degradeVideo","degrade","firstChild","root","replaceChild","flvPlugin","pluginName","unRegisterPlugin","_init","_this$_opts2","decodeMode","setAttribute","setDecodeMode","_onLowDecode","_this$_opts3","_this$_opts3$media","FlvPlugin","_BasePlugin","_this$flv","_this$pluginExtension","pluginExtension","_this$player$config","_this$player$config$f","_keepPauseStatus","pause","_this$flv2","_this$player","_this$player$config2","_onSwitchURL","flvOpts","_this$player2","defineGetterOrSetter","_this2$flv","_this2$flv$media","configurable","forceDegradeToVideo","_this2$pluginExtensio","useHooks","_this2$flv2","URL_CHANGE","DESTROY","_transError","_transCoreEvent","Errors","BasePlugin"],"mappings":"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"}